{
  "x-generator": "NSwag v13.1.6.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v12.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Pricing API",
    "version": "1.0"
  },
  "host": "ovhwedev-web001.ch001-ov-h.identity.msc.com",
  "basePath": "/pri/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accessorialChargeCodes": {
      "get": {
        "tags": [
          "Accessorial Charge Codes"
        ],
        "summary": "Get accessorial charge code list.",
        "operationId": "AccessorialChargeCodes_SearchAccessorialChargeCode",
        "parameters": [
          {
            "type": "integer",
            "name": "accessorialChargeCodeId",
            "in": "query",
            "description": "Gets or sets the Charge code identifier.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "mscCode",
            "in": "query",
            "description": "Gets or sets the MscCode.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "shortDescription",
            "in": "query",
            "description": "Gets or sets the short description.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "query",
            "description": "Gets or sets the description.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "accessorialChargeCodeTypeId",
            "in": "query",
            "description": "Gets or sets the charge code type identifier.",
            "format": "byte",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "accessorialChargeCodeTariffApplicableAtId",
            "in": "query",
            "description": "Gets or sets the charge code tariff applicable at identifier.",
            "format": "byte",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "asOfDate",
            "in": "query",
            "description": "Gets or sets as of date.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "additionalFields",
            "in": "query",
            "description": "Gets or sets the additional fields.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "onlyValidChargeCodes",
            "in": "query",
            "description": "Gets or sets the only valid charge codes.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isGlobal",
            "in": "query",
            "description": "Gets or sets a value indicating whether this instance is global.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isLocal",
            "in": "query",
            "description": "Gets or sets a value indicating whether this instance is local.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Gets or sets the size of the page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or sets the index of the page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge codes matching the given parameters.",
            "schema": {
              "$ref": "#/definitions/PageResponse"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeCodes/{chargeCodeId}": {
      "get": {
        "tags": [
          "Accessorial Charge Codes"
        ],
        "summary": "Get specific charge code details.",
        "operationId": "AccessorialChargeCodes_GetAccessorialChargeCode",
        "parameters": [
          {
            "type": "integer",
            "name": "chargeCodeId",
            "in": "path",
            "required": true,
            "description": "The charge code identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "additionalFields",
            "in": "query",
            "description": "The additionalFields contains on demand objects key.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Return charge code.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PortGroupDto"
              }
            }
          }
        }
      }
    },
    "/acrRevision": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial charge rate revisions"
        ],
        "summary": "Create an accessorial charge rate revision",
        "operationId": "AccessorialChargeRateHistory_Create",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user who save rate",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The revision task to create",
            "schema": {
              "$ref": "#/definitions/CreateAccessorialChargeRateHistoryQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "400": {
            "description": ""
          }
        }
      }
    },
    "/acrRevision/accessorialChargeRateRevisionSearch": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial charge rate revisions"
        ],
        "summary": "Get a list of accessorial charge rate revision",
        "operationId": "AccessorialChargeRateHistory_Get",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The revision task to create",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRateHistoryQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateHistoryDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/acrRevision/impactedRateCard": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial charge rate revisions"
        ],
        "summary": "Get a list of impacted rate cards that belongs to revision task",
        "operationId": "AccessorialChargeRateHistory_GetImpactedRateCardAll",
        "parameters": [
          {
            "type": "integer",
            "name": "accessorialChargeRateHistoryId",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "impactedRateCardType",
            "in": "query",
            "x-schema": {
              "$ref": "#/definitions/OceanRateCardType"
            },
            "x-nullable": false,
            "enum": [
              "SVC",
              "Tariff",
              "SpecialQuote"
            ]
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateHistoryImpactedRateCardDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/acrRevision/freightPricingRuleIds": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial charge rate revisions"
        ],
        "summary": "Get a list of impacted rate cards that belongs to revision task",
        "operationId": "AccessorialChargeRateHistory_GetImpactedRateCard",
        "parameters": [
          {
            "type": "integer",
            "name": "accessorialChargeRateHistoryId",
            "in": "query",
            "required": true,
            "description": "The revision task id",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "required": true,
            "description": "The ocean rate card id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRatePackages/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rate Packages"
        ],
        "summary": "Get Accessorial Charge Rate Package by ID",
        "operationId": "AccessorialChargeRatePackages_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge rate package",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge rate package matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRatePackageDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRatePackages": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Rate Packages"
        ],
        "summary": "Create Package",
        "operationId": "AccessorialChargeRatePackages_Create",
        "parameters": [
          {
            "name": "accessorialChargeRatePackageDto",
            "in": "body",
            "required": true,
            "description": "The creation information",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRatePackageDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfAccessorialChargeRatePackageDto"
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRatePackages/{id}/{isRemove}": {
      "put": {
        "tags": [
          "[NotSet] - Accessorial Charge Rate Packages"
        ],
        "summary": "Update Package",
        "operationId": "AccessorialChargeRatePackages_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "package id",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "accessorialChargeRatePackageDto",
            "in": "body",
            "required": true,
            "description": "The updation information",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRatePackageDto"
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isRemove",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfAccessorialChargeRatePackageDto"
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRatePackages/packages": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rate Packages"
        ],
        "summary": "Get all packages",
        "operationId": "AccessorialChargeRatePackages_GetAllPackages",
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The created accessorial charge entry",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRatePackageDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRatePackages/packageSummary": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rate Packages"
        ],
        "summary": "Get all package summary",
        "operationId": "AccessorialChargeRatePackages_GetAllPackageSummary",
        "parameters": [
          {
            "type": "string",
            "name": "accessorialPackageName",
            "in": "query",
            "description": "Search based on accessorial charge rate package name.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "accessorialChargeIds",
            "in": "query",
            "description": "Collection of accessorial charge rate ids from the query result.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Number of accessorial packages to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Index of page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of accessorial packages",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialPackageSummaryDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/applicableAccessorialChargeRates": {
      "post": {
        "tags": [
          "[NotSet] - Applicable Accessorial Charge Rates"
        ],
        "summary": "Get Applicable Accessorial Charge Rates",
        "description": "Returns the accessorial charge rates that apply to the given parameters.",
        "operationId": "ApplicableAccessorialChargeRates_Get",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The query parameters.",
            "schema": {
              "$ref": "#/definitions/ApplicableAccessorialChargeRateQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge rates applicable to the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicableAccessorialChargeRateGroupDtoV3"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          }
        }
      }
    },
    "/applicableRateCardReferences": {
      "get": {
        "tags": [
          "[NotSet] - Applicable Rate Card References"
        ],
        "summary": "Get Applicable Ocean Rate Card References",
        "description": "Returns ocean rate card references that apply to the given parameters.",
        "operationId": "ApplicableOceanRateCardReferences_Get",
        "parameters": [
          {
            "type": "array",
            "name": "rateHolders",
            "in": "query",
            "description": "Identifiers of rate holder to at least one of which the rates must apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfLoadingIds",
            "in": "query",
            "description": "Identifiers of ports of loading (POL) to at least one of which the rates must apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeIds",
            "in": "query",
            "description": "Identifiers of ports of discharge (POD) to at least one of which the rates must apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "internalReferences",
            "in": "query",
            "description": "Internal references of specific rate cards in which to search for rates.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validAfter",
            "in": "query",
            "description": "Starting date of the time interval during which the rates must be valid.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validBefore",
            "in": "query",
            "description": "End date of the time interval during which the rates must be valid.",
            "format": "date",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OceanRateCardSummaryDto"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          }
        }
      }
    },
    "/arbitraryChargeRates/arbitraryChargeSearch": {
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Charge Rate"
        ],
        "summary": "Get Arbitrary rates from query",
        "operationId": "ArbitraryAccessorialChargeRates_Get",
        "parameters": [
          {
            "name": "arbitraryRateQuery",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArbitraryRateQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge rates entry matching the query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArbitraryAccessorialChargeRateDto"
              }
            }
          }
        }
      }
    },
    "/arbitraryChargeRates": {
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Charge Rate"
        ],
        "summary": "Create an arbitrary rate card",
        "operationId": "ArbitraryAccessorialChargeRates_Create",
        "parameters": [
          {
            "name": "arbitraryChargeRate",
            "in": "body",
            "required": true,
            "description": "The arbitrary charge rate to create",
            "schema": {
              "$ref": "#/definitions/ArbitraryAccessorialChargeRateDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArbitraryAccessorialChargeRateDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArbitraryAccessorialChargeRateDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "[NotSet] - Arbitrary Charge Rate"
        ],
        "summary": "Delete the matching rates.",
        "operationId": "ArbitraryAccessorialChargeRates_DeleteFoundRates",
        "parameters": [
          {
            "name": "arbitraryRateQuery",
            "in": "body",
            "required": true,
            "description": "The query to select the rates to delete.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateQuery"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/arbitraryChargeRates/validityRange": {
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Charge Rate"
        ],
        "summary": "Get rates validity range.",
        "operationId": "ArbitraryAccessorialChargeRates_GetValidityRange",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The query to select the rates to close.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArbitraryAccessorialChargeRateValidityRangeDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryChargeRates/close": {
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Charge Rate"
        ],
        "summary": "Get rates validity range.",
        "operationId": "ArbitraryAccessorialChargeRates_CloseFoundRates",
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The command.",
            "schema": {
              "$ref": "#/definitions/CloseFoundArbitraryAccessorialChargeRateCommandDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateArbitraryAccessorialChargeRateValidToResultDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRateCard/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Arbitrary Rate Card"
        ],
        "summary": "Get Arbitrary Rate Card by ID",
        "operationId": "ArbitraryRateCard_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge entry",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge entry matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateCardDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "[NotSet] - Arbitrary Rate Card"
        ],
        "summary": "Update an arbitrary rate card",
        "operationId": "ArbitraryRateCard_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "updateArbitraryRateCardCommand",
            "in": "body",
            "required": true,
            "description": "update the arbitrary rate",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateArbitraryRateCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "ID of the user updating the card",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateCardDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateCardDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRateCard": {
      "get": {
        "tags": [
          "[NotSet] - Arbitrary Rate Card"
        ],
        "summary": "Create the arbitrary rate card summaries which match the query.",
        "operationId": "ArbitraryRateCard_GetSummaries",
        "parameters": [
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of arbitrary rate card to which the resulting arbitrary rate card can apply.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "applicability",
            "in": "query",
            "description": "Applicability of arbitrary rate card.",
            "x-schema": {
              "$ref": "#/definitions/ArbitraryRateCardApplicability"
            },
            "x-nullable": true,
            "enum": [
              "TransportAdditionalOrigin",
              "TransportAdditionalDestination"
            ]
          },
          {
            "type": "array",
            "name": "loadingScope",
            "in": "query",
            "description": "List of loading scope to which the resulting arbitrary rate card can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "dischargingScope",
            "in": "query",
            "description": "List of discharging scope to which the resulting arbitrary rate card can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "updatedOn",
            "in": "query",
            "description": "Date and time of rate card last update",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "updatedBy",
            "in": "query",
            "description": "User who last updated the rate card",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "arbitraryRateCardGroup",
            "in": "query",
            "description": "Group of arbitrary rate card.",
            "x-schema": {
              "$ref": "#/definitions/AccessorialChargeRateGroup"
            },
            "x-nullable": true,
            "enum": [
              "Ocean",
              "Intermodal",
              "ContainerRental"
            ]
          },
          {
            "type": "string",
            "name": "validOn",
            "in": "query",
            "description": "Date and time of rate card and rate",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "arbitraryAccessorialChargeIds",
            "in": "query",
            "description": "List of accessorial charges to which the resulting arbitrary rate card can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "dryPortsSource",
            "in": "query",
            "description": "List of dry ports scope to which the resulting arbitrary rate card can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "basePortsSource",
            "in": "query",
            "description": "List of base ports scope to which the resulting arbitrary rate card can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "feederPortsSource",
            "in": "query",
            "description": "List of feeder ports scope to which the resulting arbitrary rate card can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArbitraryRateCardSummaryDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Rate Card"
        ],
        "summary": "Create an arbitrary rate card",
        "operationId": "ArbitraryRateCard_Create",
        "parameters": [
          {
            "name": "createArbitraryRateCardCommand",
            "in": "body",
            "required": true,
            "description": "The arbitrary rate to create",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateArbitraryRateCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "ID of the user creating the card",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateCardDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateCardDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRateCard/references": {
      "get": {
        "tags": [
          "[NotSet] - Arbitrary Rate Card"
        ],
        "summary": "Get Internal References of Arbitrary Rate Card",
        "operationId": "ArbitraryRateCard_GetReferencesFromSearchRateCardReference",
        "parameters": [
          {
            "type": "string",
            "name": "searchRateCardReference",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of internal reference code",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/changeLogAggregates/{aggregateObject}/{objectKeyId}": {
      "get": {
        "tags": [
          "[NotSet] - Change Log Aggregate"
        ],
        "summary": "Get Aggregate Object.",
        "operationId": "ChangeLogAggregate_Get",
        "parameters": [
          {
            "type": "string",
            "name": "aggregateObject",
            "in": "path",
            "required": true,
            "description": "The aggregate Object.",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "objectKeyId",
            "in": "path",
            "required": true,
            "description": "The object Key Id.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Return response.",
            "schema": {
              "$ref": "#/definitions/ForeignAggregateDetail"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/expectedOceanFreightRateAccessorialChargeConfigurations": {
      "post": {
        "tags": [
          "[NotSet] - Ocean Freight Rate Accessorial Charge Configurations"
        ],
        "summary": "Get Expected Ocean Freight Rate Accessorial Charge Configurations",
        "operationId": "ExpectedOceanFreightRateAccessorialChargeConfigurations_GetAccessorialChargeConfigurations",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The query parameters",
            "schema": {
              "$ref": "#/definitions/ApplicableAccessorialChargeRateQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge rates applicable to the given parameters",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightRateAccessorialChargeRuleDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Ocean Freight Rate Accessorial Charge Configurations"
        ],
        "summary": "Get Expected inherited accessorial charge configurations",
        "operationId": "ExpectedOceanFreightRateAccessorialChargeConfigurations_GetInheritedAccessorialChargeConfigurations",
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OceanRateCardAccessorialChargeConfigurationDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRuleState/{id}/approve": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule State"
        ],
        "summary": "Approve the freight pricing rule",
        "operationId": "FreightPricingRuleState_Approve",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "ruleStatusDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRuleStatusDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRuleState/{id}/reject": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule State"
        ],
        "summary": "Reject the freight pricing rule",
        "operationId": "FreightPricingRuleState_Reject",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "ruleStatusDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRuleStatusDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRuleState/approve": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule State"
        ],
        "summary": "Approve the freight pricing rules by their ids.",
        "operationId": "FreightPricingRuleState_Approval",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRuleState/reject": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule State"
        ],
        "summary": "Reject the freight pricing rules by their ids.",
        "operationId": "FreightPricingRuleState_RejectMultipleRules",
        "parameters": [
          {
            "name": "ruleStatusDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRuleStatusDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "Health_Get",
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "\"OK\" when health check passed.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "[NotSet] - Background tasks"
        ],
        "summary": "Create and launch a new long-running task",
        "operationId": "BackgroundTasks_CreateTask",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user who save rate",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "createBackgroundNewTask",
            "in": "body",
            "required": true,
            "description": "The task to launch",
            "schema": {
              "$ref": "#/definitions/CreateBackgroundTaskDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackgroundTaskDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackgroundTaskDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "[NotSet] - Background tasks"
        ],
        "summary": "Get the result for a specific job by a linked object id.",
        "operationId": "BackgroundTasks_GetTaskStatus",
        "parameters": [
          {
            "type": "integer",
            "name": "linkedObjectId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackgroundTaskDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": [
          "[NotSet] - Background tasks"
        ],
        "operationId": "BackgroundTasks_GetTaskStatus2",
        "parameters": [
          {
            "type": "string",
            "name": "taskId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackgroundTaskDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/tasks/{taskId}/cancel": {
      "post": {
        "tags": [
          "[NotSet] - Background tasks"
        ],
        "summary": "Cancel a specific job",
        "operationId": "BackgroundTasks_CancelTask",
        "parameters": [
          {
            "type": "string",
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "ID of the task to cancel",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackgroundTaskDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/tasks/search": {
      "get": {
        "tags": [
          "[NotSet] - Background tasks"
        ],
        "summary": "Search tasks with a query",
        "operationId": "BackgroundTasks_SearchTasks",
        "parameters": [
          {
            "type": "string",
            "name": "taskId",
            "in": "query",
            "description": "Id of a background task",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "userId",
            "in": "query",
            "description": "UserId used to create the background task",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "statuses",
            "in": "query",
            "description": "List of selected background task Statuses",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "types",
            "in": "query",
            "description": "List of selected background task Types",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "linkedObjectId",
            "in": "query",
            "description": "Id of the linked object for a background task",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "displayName",
            "in": "query",
            "description": "Displayed name of the background task",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Number of rates that can be returned.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Index of page.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validFrom",
            "in": "query",
            "description": "Start time after which the resulting background tasks started.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validTo",
            "in": "query",
            "description": "End time before which the resulting background tasks started.",
            "format": "date",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackgroundTaskDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/tasks/{taskId}/parameter/{parameterKey}": {
      "get": {
        "tags": [
          "[NotSet] - Background tasks"
        ],
        "summary": "Return the value of a parameter task",
        "operationId": "BackgroundTasks_GetParameterValue",
        "parameters": [
          {
            "type": "string",
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "ID of the task",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "parameterKey",
            "in": "path",
            "required": true,
            "description": "The name of the parameter",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/tasks/{taskId}/parameters": {
      "get": {
        "tags": [
          "[NotSet] - Background tasks"
        ],
        "summary": "Return all parameters of the task",
        "operationId": "BackgroundTasks_GetParameters",
        "parameters": [
          {
            "type": "string",
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "ID of the task",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Parameters related to the background task matching the given task id",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackgroundTaskParameterDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/impactedRules": {
      "post": {
        "tags": [
          "[NotSet] - Impacted Rules"
        ],
        "summary": "Get a list of impacted rules matching accessorial charge rate conditions",
        "operationId": "ImpactedRules_Get",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The query parameters",
            "schema": {
              "$ref": "#/definitions/ImpactedRuleQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of impacted rules",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImpactedRuleDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountBaskets/getNamedAccountBaskets": {
      "post": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Get Named Account Baskets by MDM Ids",
        "operationId": "NamedAccountBasket_GetAll",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The search text of name, code and holder code of named account basket",
            "schema": {
              "$ref": "#/definitions/NamedAccountBasketQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The named account basket matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedAccountBasketDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountBaskets/getNamedAccount": {
      "get": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Get basket details by using named account card id",
        "operationId": "NamedAccountBasket_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "namedAccountCardId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The named account basket matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedAccountBasketDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountBaskets/{namedAccountCardId}/getBasketReference": {
      "get": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Get basket details by using named account card id",
        "operationId": "NamedAccountBasket_GetBasketInternalReferences",
        "parameters": [
          {
            "type": "integer",
            "name": "namedAccountCardId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountBaskets/{namedAccountCardId}/references": {
      "get": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Get Internal References of named account card",
        "operationId": "NamedAccountBasket_GetInternalReferencesFromSearchText",
        "parameters": [
          {
            "type": "integer",
            "name": "namedAccountCardId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "searchText",
            "in": "query",
            "required": true,
            "description": "The search text of internal reference code",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of internal reference code",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountBaskets/CheckIsDuplicate": {
      "get": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Check whether basket internal reference is duplicate or not",
        "operationId": "NamedAccountBasket_CheckIsDuplicate",
        "parameters": [
          {
            "type": "integer",
            "name": "namedAccountCardId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "internalReference",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountBaskets": {
      "post": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Create a Named Account Basket",
        "operationId": "NamedAccountBasket_Create",
        "parameters": [
          {
            "name": "namedAccountBasketDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateNamedAccountBasketDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "Identifier of the user who creates the basket",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountBasketDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountBasketDto"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssueDto"
              }
            }
          }
        }
      }
    },
    "/namedAccountBaskets/{id}": {
      "put": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Updates the basket details",
        "operationId": "NamedAccountBasket_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "namedAccountBasketDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateNamedAccountBasketDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountBasketDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountBasketDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Deletes the basket",
        "operationId": "NamedAccountBasket_DeleteNamedAccountBasket",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountBaskets/namedAccountBaskets": {
      "get": {
        "tags": [
          "[NotSet] - Named Account Basket"
        ],
        "summary": "Get Named Account Baskets by search query",
        "operationId": "NamedAccountBasket_GetNamedAccountBaskets",
        "parameters": [
          {
            "type": "string",
            "name": "basketName",
            "in": "query",
            "description": "Name of the Named Account Basket",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "basketCode",
            "in": "query",
            "description": "Code of the Named Account Basket, AKA NAC Code is InternalReference",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "holderCode",
            "in": "query",
            "description": "Code of the Named Account Card, is InternalReference",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "namedAccountCardId",
            "in": "query",
            "description": "Named Account Card Id of Baskets",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "namedAccountBasketId",
            "in": "query",
            "description": "Named Account Basket Id of Named Account",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "namedAccountCustomerIds",
            "in": "query",
            "description": "Customer ids of Named Account",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "whether named account deleted or not",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeExpired",
            "in": "query",
            "description": "whether named account expired or not",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "basketCodes",
            "in": "query",
            "description": "List of Code the Named Account Basket, AKA NAC Code is InternalReference",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "namedAccountPageSize",
            "in": "query",
            "description": "Named Account page size",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "validOn",
            "in": "query",
            "description": "Date during which the Named Account must be valid on.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "lastUpdatedOn",
            "in": "query",
            "description": "Date during which the Named Account must be last modified.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "lastUpdatedBy",
            "in": "query",
            "description": "ID during which the Named Account must be last modified by.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "rateHolderIds",
            "in": "query",
            "description": "Customer Or Group ids of Named Account card",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedAccountBasketDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountCard": {
      "post": {
        "tags": [
          "Named Account"
        ],
        "summary": "Get Equipment SizeType Groups",
        "operationId": "NamedAccountCard_Get",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "The named account basket search dto",
            "schema": {
              "$ref": "#/definitions/NamedAccountBasketSearchDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The named accounts matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedAccountDtoBase"
              }
            }
          },
          "404": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Named Account"
        ],
        "summary": "Get NamedAccount Cards",
        "operationId": "NamedAccountCard_GetNamedAccountCardSummary",
        "parameters": [
          {
            "type": "string",
            "name": "basketName",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "lastUpdatedBy",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "lastUpdatedOn",
            "in": "query",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "rateHolderCustomerIds",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "namedAccountCustomerIds",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "nacCode",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedAccountCardSummaryDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountCard/RateHolder": {
      "post": {
        "tags": [
          "Named Account"
        ],
        "summary": "Create rate holder",
        "operationId": "NamedAccountCard_Create",
        "parameters": [
          {
            "name": "namedAccountCard",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamedAccountCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountCardDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountCardDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountCard/{id}": {
      "get": {
        "tags": [
          "Named Account"
        ],
        "summary": "Get NamedAccountCard By ID",
        "operationId": "NamedAccountCard_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountCardDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Named Account"
        ],
        "summary": "Update an named account card",
        "operationId": "NamedAccountCard_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "updateNamedAccountCardDto",
            "in": "body",
            "required": true,
            "description": "update the named account card",
            "schema": {
              "$ref": "#/definitions/NamedAccountCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "ID of the user updating the card",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountCardDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountCardDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/namedAccountCard/NamedAccounts": {
      "get": {
        "tags": [
          "Named Account"
        ],
        "summary": "Get NamedAccount Cards",
        "operationId": "NamedAccountCard_GetRateHolders",
        "parameters": [
          {
            "type": "string",
            "name": "nacCode",
            "in": "query",
            "description": "NAC Code for named account to at least one of which the rates must apply.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "rateHolderId",
            "in": "query",
            "description": "Id of BusinessEntityId to at least one of which the rates must apply.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isGroup",
            "in": "query",
            "description": "bool property for group or customer at least one of which the rates must apply.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "namedAccountId",
            "in": "query",
            "description": "Id of rate holder to at least one of which the rates must apply.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "asOfDate",
            "in": "query",
            "description": "AsOfDate is the time interval during which the rates must be valid.",
            "format": "date",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedAccountCardDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/oceanFreightRates/applicable": {
      "get": {
        "tags": [
          "[NotSet] - Applicable Ocean Freight Rates"
        ],
        "summary": "Get Applicable Ocean Freight Rates",
        "description": "Returns ocean freight rates that apply to the given parameters.",
        "operationId": "ApplicableOceanFreightRates_Get",
        "parameters": [
          {
            "type": "string",
            "name": "rateCardInternalReference",
            "in": "query",
            "description": "Reference of a specific ocean rate card to find.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "customerIds",
            "in": "query",
            "description": "List of ids of the customer to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "customerGroupIds",
            "in": "query",
            "description": "List of ids of the customer groups to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfLoadingIds",
            "in": "query",
            "description": "List of ids of port of loadings (POL) to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeIds",
            "in": "query",
            "description": "List of ids of port of discharge (POD) to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validAfter",
            "in": "query",
            "description": "Min date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validBefore",
            "in": "query",
            "description": "Min date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "equipmentSizeAndTypeIds",
            "in": "query",
            "description": "Identifiers for the type of equipment.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "rateCardTypes",
            "in": "query",
            "description": "Type of the ocean rate card (0 = SVC/RA, 1 = Tariff, 2 = Special Quote).",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "publicationChannelIds",
            "in": "query",
            "description": "Publication Channels",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "vesselIds",
            "in": "query",
            "description": "List of ids of vessels to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates applicable to the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicableOceanFreightRateDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the freight pricing rule by ID",
        "operationId": "FreightPricingRule_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FreightPricingRuleDto"
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Update an existing freight pricing rule",
        "operationId": "FreightPricingRule_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFreightPricingRuleDto"
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "forValidationOnly",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfFreightPricingRuleDto"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssueDto"
              }
            }
          },
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Delete a freight pricing rule by ID",
        "operationId": "FreightPricingRule_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the entry to delete.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "Identifier of the user issuing the command.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssueDto"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          },
          "204": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/{id}/publishabilityCheck": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get detailed publishability check information to know if the freight pricing rule can be published.",
        "operationId": "FreightPricingRule_PublishabilityCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "freightChargeCodeId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailedPublishabilityCheckResultDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/publishabilityCheck": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get rate publishability information.",
        "operationId": "FreightPricingRule_PublishabilityCheckWhileRateFixing",
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFreightPricingRuleDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "freightChargeCodeId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailedPublishabilityCheckResultDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get detailed publishability check information to know if the freight pricing rules can be published.",
        "operationId": "FreightPricingRule_PublishabilityCheckAll",
        "parameters": [
          {
            "type": "array",
            "name": "ids",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "freightChargeCodeId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublishabilityCheckResultDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/{id}/publish": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Publish the freight pricing rule",
        "operationId": "FreightPricingRule_Published",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/publish": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Publish the freight pricing rules by their ids.",
        "operationId": "FreightPricingRule_Published2",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the freight pricing rules by query or by ids including all the accessorials and conditions.",
        "operationId": "FreightPricingRule_GetAll",
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "description": "Id of ocean rate card to which the resulting freight pricing rules can apply.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of ocean freight rate to which the resulting ocean freight rate can apply.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "portOfLoadingIds",
            "in": "query",
            "description": "IDs of the port of loading to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeIds",
            "in": "query",
            "description": "ID of the port of discharge to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originHierarchies",
            "in": "query",
            "description": "IDs of the origin to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the origin dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationHierarchies",
            "in": "query",
            "description": "IDs of the destination to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the destination dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originTransportationMode",
            "in": "query",
            "description": "Indicate the origin transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationTransportationMode",
            "in": "query",
            "description": "Indicate the destination transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "containerSizeTypes",
            "in": "query",
            "description": "Identifiers for the type  and size of containers.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validFrom",
            "in": "query",
            "description": "Min date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validTo",
            "in": "query",
            "description": "Max date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Number of freight pricing rules to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Index of page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeExpired",
            "in": "query",
            "description": "Include expired freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "isListAllVersions",
            "in": "query",
            "description": "List of all versions of the rate.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "publishedOn",
            "in": "query",
            "description": "PublishedOn date of the ocean rate cards falls within published periods.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "freightPricingRuleStatuses",
            "in": "query",
            "description": "List of selected ocean rate status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "name": "isRatesWithNoAccessorial",
            "in": "query",
            "description": "List all no accessorial rates.",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "publicationChannelIds",
            "in": "query",
            "description": "Whether the resulting ocean rate must fall in selected Publication channel type.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "description": "What type of rate are we looking for.",
            "x-schema": {
              "$ref": "#/definitions/FreightEntryType"
            },
            "x-nullable": false,
            "enum": [
              "Ocean",
              "InlandOrigin",
              "InlandDestination",
              "ArbitraryOrigin",
              "ArbitraryDestination"
            ]
          },
          {
            "type": "array",
            "name": "ids",
            "in": "query",
            "description": "The optional list of ids.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightPricingRuleDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Add a new freight pricing rule",
        "operationId": "FreightPricingRule_Create",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFreightPricingRuleDto"
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "forValidationOnly",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfFreightPricingRuleDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssueDto"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssueDto"
              }
            }
          }
        }
      }
    },
    "/freightPricingRule/search": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the freight pricing rules by query or by ids including all the accessorials and conditions.",
        "operationId": "FreightPricingRule_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "description": "Id of ocean rate card to which the resulting freight pricing rules can apply.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of ocean freight rate to which the resulting ocean freight rate can apply.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "portOfLoadingIds",
            "in": "query",
            "description": "IDs of the port of loading to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeIds",
            "in": "query",
            "description": "ID of the port of discharge to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer"
            }
          },
          {
            "type": "array",
            "name": "originHierarchies",
            "in": "query",
            "description": "IDs of the origin to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "type": "array",
            "name": "originDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the origin dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "type": "array",
            "name": "destinationHierarchies",
            "in": "query",
            "description": "IDs of the destination to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "type": "array",
            "name": "destinationDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the destination dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "type": "array",
            "name": "originTransportationMode",
            "in": "query",
            "description": "Indicate the origin transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "byte"
            }
          },
          {
            "type": "array",
            "name": "destinationTransportationMode",
            "in": "query",
            "description": "Indicate the destination transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "byte"
            }
          },
          {
            "type": "array",
            "name": "containerSizeTypes",
            "in": "query",
            "description": "Identifiers for the type  and size of containers.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer"
            }
          },
          {
            "type": "string",
            "name": "validFrom",
            "in": "query",
            "description": "Min date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validTo",
            "in": "query",
            "description": "Max date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Number of freight pricing rules to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Index of page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeExpired",
            "in": "query",
            "description": "Include expired freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "isListAllVersions",
            "in": "query",
            "description": "List of all versions of the rate.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "publishedOn",
            "in": "query",
            "description": "PublishedOn date of the ocean rate cards falls within published periods.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "freightPricingRuleStatuses",
            "in": "query",
            "description": "List of selected ocean rate status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer"
            }
          },
          {
            "type": "boolean",
            "name": "isRatesWithNoAccessorial",
            "in": "query",
            "description": "List all no accessorial rates.",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "publicationChannelIds",
            "in": "query",
            "description": "Whether the resulting ocean rate must fall in selected Publication channel type.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "description": "What type of rate are we looking for.",
            "x-schema": {
              "$ref": "#/definitions/FreightEntryType"
            },
            "x-nullable": false,
            "enum": [
              "Ocean",
              "InlandOrigin",
              "InlandDestination",
              "ArbitraryOrigin",
              "ArbitraryDestination"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightPricingRuleDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/search/withoutAccessorials": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the freight pricing rules by query or by ids without including all the accessorials.",
        "operationId": "FreightPricingRule_GetWithoutConfigurations",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The query parameters.",
            "schema": {
              "$ref": "#/definitions/FreightPricingRuleQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightPricingRuleDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/reference": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get freight pricing rule references by query or by ids.",
        "operationId": "FreightPricingRule_GetReferencesByIds",
        "parameters": [
          {
            "type": "array",
            "name": "ids",
            "in": "query",
            "description": "The optional list of ids.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rule references matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightRateReferenceDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/referenceAndId": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get freight pricing rule ID from a rate card and freight reference reference.",
        "operationId": "FreightPricingRule_GetReferenceAndId",
        "parameters": [
          {
            "type": "string",
            "name": "rateCardReference",
            "in": "query",
            "required": true,
            "description": "Rate card reference.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "freightRateReference",
            "in": "query",
            "required": true,
            "description": "Freight rate reference.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FreightRateReferenceDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/zip": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get freight pricing rules by query or by ids.",
        "operationId": "FreightPricingRule_GetZip",
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "description": "Id of ocean rate card to which the resulting freight pricing rules can apply.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of ocean freight rate to which the resulting ocean freight rate can apply.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "portOfLoadingIds",
            "in": "query",
            "description": "IDs of the port of loading to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeIds",
            "in": "query",
            "description": "ID of the port of discharge to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originHierarchies",
            "in": "query",
            "description": "IDs of the origin to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the origin dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationHierarchies",
            "in": "query",
            "description": "IDs of the destination to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the destination dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originTransportationMode",
            "in": "query",
            "description": "Indicate the origin transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationTransportationMode",
            "in": "query",
            "description": "Indicate the destination transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "containerSizeTypes",
            "in": "query",
            "description": "Identifiers for the type  and size of containers.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validFrom",
            "in": "query",
            "description": "Min date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validTo",
            "in": "query",
            "description": "Max date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Number of freight pricing rules to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Index of page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeExpired",
            "in": "query",
            "description": "Include expired freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "isListAllVersions",
            "in": "query",
            "description": "List of all versions of the rate.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "publishedOn",
            "in": "query",
            "description": "PublishedOn date of the ocean rate cards falls within published periods.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "freightPricingRuleStatuses",
            "in": "query",
            "description": "List of selected ocean rate status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "name": "isRatesWithNoAccessorial",
            "in": "query",
            "description": "List all no accessorial rates.",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "publicationChannelIds",
            "in": "query",
            "description": "Whether the resulting ocean rate must fall in selected Publication channel type.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "description": "What type of rate are we looking for.",
            "x-schema": {
              "$ref": "#/definitions/FreightEntryType"
            },
            "x-nullable": false,
            "enum": [
              "Ocean",
              "InlandOrigin",
              "InlandDestination",
              "ArbitraryOrigin",
              "ArbitraryDestination"
            ]
          },
          {
            "type": "array",
            "name": "ids",
            "in": "query",
            "description": "The optional list of ids.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters. (zipped to reduce its size)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightPricingRuleDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/rateVersions": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get freight pricing rules by reference",
        "operationId": "FreightPricingRule_GetReferencesByReferenceExtensions",
        "parameters": [
          {
            "type": "string",
            "name": "rateReference",
            "in": "query",
            "required": true,
            "description": "Reference extension expression",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "required": true,
            "description": "RateCard Id",
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The freight pricing rules matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightPricingRuleDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/rateLatestVersions": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get latest freight pricing rules by reference",
        "operationId": "FreightPricingRule_GetLatestRulesByReferenceExtensions",
        "parameters": [
          {
            "type": "array",
            "name": "references",
            "in": "query",
            "description": "References extension expression",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "required": true,
            "description": "RateCard Id",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "required": true,
            "description": "Include deleted rates",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The freight pricing rules matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightPricingRuleDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/latestVersionReferences": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get latest freight pricing rule references by reference",
        "operationId": "FreightPricingRule_GetLatestVersionReferencesByReferenceExtensions",
        "parameters": [
          {
            "type": "array",
            "name": "references",
            "in": "query",
            "description": "References extension expression",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "required": true,
            "description": "RateCard Id",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "required": true,
            "description": "Include deleted rates",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "isExactMatch",
            "in": "query",
            "required": true,
            "description": "Reference match is exact or partial",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The freight pricing rules matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightRateReferenceDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/refreshAccessorialChargeRates": {
      "put": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Refresh accessorial charge rate configurations for the specified freight pricing rules.",
        "operationId": "FreightPricingRule_RefreshAccessorialChargeRates",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "User ID",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The command",
            "schema": {
              "$ref": "#/definitions/RefreshFreightPricingRulesConfigurationsCommand"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Update the accessorial charge rate configurations for all the freight pricing rules within the rate card.",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/{id}/fix": {
      "put": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Update an existing freight pricing rule",
        "operationId": "FreightPricingRule_Fix",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFreightPricingRuleDto"
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "forValidationOnly",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfFreightPricingRuleDto"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssueDto"
              }
            }
          },
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/modificationStatus": {
      "put": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the modification status of the freight pricing rules.",
        "operationId": "FreightPricingRule_GetModificationStatus",
        "parameters": [
          {
            "name": "freightPricingRules",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateFreightPricingRuleDto"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfDictionaryOfIntegerAndIReadOnlyCollectionOfString"
            }
          }
        }
      }
    },
    "/freightPricingRule/massCreate": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Creates a group of freight pricing rules.",
        "operationId": "FreightPricingRule_MassCreate",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "commands",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreateFreightPricingRuleDto"
              }
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "forValidationOnly",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationResultDtoOfFreightPricingRuleDto"
              }
            }
          }
        }
      }
    },
    "/freightPricingRule/massUpdate": {
      "put": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Updates a group of freight pricing rules.",
        "operationId": "FreightPricingRule_MassUpdate",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "commands",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateFreightPricingRuleDto"
              }
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "forValidationOnly",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "204": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationResultDtoOfFreightPricingRuleDto"
              }
            }
          }
        }
      }
    },
    "/freightPricingRule/{id}/getRatesByRateCardId": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the list of freight entry ids with the correspondent rate card ID",
        "operationId": "FreightPricingRule_GetRatesByRateCardId",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the rate card",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/checkOverlaps": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Check if the rules are overlapping existing rules.",
        "operationId": "FreightPricingRule_CheckOverlaps",
        "parameters": [
          {
            "name": "freightPricingRuleBases",
            "in": "body",
            "required": true,
            "description": "The rules to check",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightPricingRuleBaseDto"
              }
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "reason",
            "in": "query",
            "required": true,
            "description": "The reason to check",
            "x-schema": {
              "$ref": "#/definitions/OverlapCheckReason"
            },
            "x-nullable": false,
            "enum": [
              "Save",
              "Publish",
              "PublishAll",
              "Fix",
              "ExcelAcrLoad"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/{id}/unpublish": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Unpublish the freight pricing rule",
        "operationId": "FreightPricingRule_Unpublished",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "publishedTo",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/{id}/getPublishedRatesByRateCardIdAndRateType": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the list of freight entry ids with the correspondent rate card ID",
        "operationId": "FreightPricingRule_GetRatesByPublishedRateCardIdAll",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the rate card",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "freightentrytype",
            "in": "query",
            "required": true,
            "description": "FreightEntryType of the rates",
            "x-schema": {
              "$ref": "#/definitions/FreightEntryType"
            },
            "x-nullable": false,
            "enum": [
              "Ocean",
              "InlandOrigin",
              "InlandDestination",
              "ArbitraryOrigin",
              "ArbitraryDestination"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/{id}/getPublishedRatesByRateCardId": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get the list of freight entry ids with the correspondent rate card ID",
        "operationId": "FreightPricingRule_GetRatesByPublishedRateCardId",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the rate card",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/delete": {
      "post": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Delete a List of freight pricing rule by IDs",
        "operationId": "FreightPricingRule_DeleteMultiple",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "description": "IDs of the entry to delete.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "Identifier of the user issuing the command.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/freightPricingRule/ruleState": {
      "get": {
        "tags": [
          "[NotSet] - Freight Pricing Rule"
        ],
        "summary": "Get freight pricing rules by query.",
        "operationId": "FreightPricingRule_GetFreightPricingRuleState",
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "description": "Id of ocean rate card to which the resulting freight pricing rules can apply.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of ocean freight rate to which the resulting ocean freight rate can apply.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "portOfLoadingIds",
            "in": "query",
            "description": "IDs of the port of loading to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeIds",
            "in": "query",
            "description": "ID of the port of discharge to which the resulting freight pricing rules can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originHierarchies",
            "in": "query",
            "description": "IDs of the origin to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the origin dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationHierarchies",
            "in": "query",
            "description": "IDs of the destination to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the destination dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originTransportationMode",
            "in": "query",
            "description": "Indicate the origin transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationTransportationMode",
            "in": "query",
            "description": "Indicate the destination transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "containerSizeTypes",
            "in": "query",
            "description": "Identifiers for the type  and size of containers.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validFrom",
            "in": "query",
            "description": "Min date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validTo",
            "in": "query",
            "description": "Max date of the ocean rate cards validity period.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Number of freight pricing rules to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Index of page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeExpired",
            "in": "query",
            "description": "Include expired freight pricing rules.",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "isListAllVersions",
            "in": "query",
            "description": "List of all versions of the rate.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "publishedOn",
            "in": "query",
            "description": "PublishedOn date of the ocean rate cards falls within published periods.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "freightPricingRuleStatuses",
            "in": "query",
            "description": "List of selected ocean rate status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "name": "isRatesWithNoAccessorial",
            "in": "query",
            "description": "List all no accessorial rates.",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "publicationChannelIds",
            "in": "query",
            "description": "Whether the resulting ocean rate must fall in selected Publication channel type.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "description": "What type of rate are we looking for.",
            "x-schema": {
              "$ref": "#/definitions/FreightEntryType"
            },
            "x-nullable": false,
            "enum": [
              "Ocean",
              "InlandOrigin",
              "InlandDestination",
              "ArbitraryOrigin",
              "ArbitraryDestination"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "$ref": "#/definitions/FreightPricingRuleStatusDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/namedAccounts": {
      "get": {
        "tags": [
          "[NotSet] - Named Account"
        ],
        "summary": "Get the named accounts under a basket",
        "operationId": "NamedAccount_Get",
        "parameters": [
          {
            "type": "string",
            "name": "basketName",
            "in": "query",
            "description": "Name of the Named Account Basket",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "basketCode",
            "in": "query",
            "description": "Code of the Named Account Basket, AKA NAC Code is InternalReference",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "holderCode",
            "in": "query",
            "description": "Code of the Named Account Card, is InternalReference",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "namedAccountCardId",
            "in": "query",
            "description": "Named Account Card Id of Baskets",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "namedAccountBasketId",
            "in": "query",
            "description": "Named Account Basket Id of Named Account",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "namedAccountCustomerIds",
            "in": "query",
            "description": "Customer ids of Named Account",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "whether named account deleted or not",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeExpired",
            "in": "query",
            "description": "whether named account expired or not",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "basketCodes",
            "in": "query",
            "description": "List of Code the Named Account Basket, AKA NAC Code is InternalReference",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "namedAccountPageSize",
            "in": "query",
            "description": "Named Account page size",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "validOn",
            "in": "query",
            "description": "Date during which the Named Account must be valid on.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "lastUpdatedOn",
            "in": "query",
            "description": "Date during which the Named Account must be last modified.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "lastUpdatedBy",
            "in": "query",
            "description": "ID during which the Named Account must be last modified by.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "rateHolderIds",
            "in": "query",
            "description": "Customer Or Group ids of Named Account card",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "list of named accounts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedAccountDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Named Account"
        ],
        "summary": "Create a Named Account",
        "operationId": "NamedAccount_Create",
        "parameters": [
          {
            "name": "namedAccountDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateNamedAccountDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/namedAccounts/{id}": {
      "put": {
        "tags": [
          "[NotSet] - Named Account"
        ],
        "summary": "Updates The Named Account",
        "operationId": "NamedAccount_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "namedAccountDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateNamedAccountDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NamedAccountDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "[NotSet] - Named Account"
        ],
        "summary": "Deletes the Named Account",
        "operationId": "NamedAccount_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/volume/{id}": {
      "get": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Get Contract Volumes by OceanRateCard Id",
        "operationId": "OceanRateCardContractVolumes_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean rate id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The contract volumes matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/OceanRateCardContractVolumesDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Update the contract volume details",
        "operationId": "OceanRateCardContractVolumes_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "contractVolumeValidatorQuery",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractVolumeValidatorQuery"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "Return the updated contract volumes",
            "schema": {
              "$ref": "#/definitions/OceanRateCardContractVolumesDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "Return the updated contract volumes",
            "schema": {
              "$ref": "#/definitions/OceanRateCardContractVolumesDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Delete Contract Volumes by Id",
        "operationId": "OceanRateCardContractVolumes_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/volume": {
      "get": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Get all Contract Volumes",
        "operationId": "OceanRateCardContractVolumes_GetAll",
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The contract volumes matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/OceanRateCardContractVolumesDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Create the contract volume details",
        "operationId": "OceanRateCardContractVolumes_Create",
        "parameters": [
          {
            "name": "contractVolumeValidatorQuery",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractVolumeValidatorQuery"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "Return the created contract volumes",
            "schema": {
              "$ref": "#/definitions/OceanRateCardContractVolumesDto"
            }
          },
          "200": {
            "x-nullable": false,
            "description": "Return the created contract volumes",
            "schema": {
              "$ref": "#/definitions/OceanRateCardContractVolumesDto"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/volume/{id}/getVolumes": {
      "get": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Get Contract Volumes by OceanRateCard Id",
        "operationId": "OceanRateCardContractVolumes_GetByOceanRateCardId",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean rate id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The contract volumes matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/OceanRateCardContractVolumesDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/volume/{id}/reference": {
      "get": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Get Contract Volumes by OceanRateCard Id",
        "operationId": "OceanRateCardContractVolumes_GetReferencesByOceanRateCardId",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean rate id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The contract volumes matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/volume/oceanRateCardContractVolumes": {
      "get": {
        "tags": [
          "[NotSet] - OceanRatecard Contract Volumes"
        ],
        "summary": "Get Ocean Rate Card Volume by search query",
        "operationId": "OceanRateCardContractVolumes_GetOceanRateCardContractVolumes",
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "query",
            "description": "Retrieve contract rate volume based on ocean rate card id.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "portOfLoadingHierarchies",
            "in": "query",
            "description": "Retrieve contract rate volume based on ports of loading.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeHierarchies",
            "in": "query",
            "description": "Retrieve contract rate volume based on port of discharge.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originHierarchies",
            "in": "query",
            "description": "Retrieve contract rate volume based on origin.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationHierarchies",
            "in": "query",
            "description": "Retrieve contract rate volume based on destination.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "customerIds",
            "in": "query",
            "description": "Retrieve contract rate volume based on customers.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Number of contract rate volumes to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageIndex",
            "in": "query",
            "description": "Index of page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "commitmentType",
            "in": "query",
            "description": "Retrieve contract rate volume based on CommitmentType.",
            "x-schema": {
              "$ref": "#/definitions/VolumesCommitmentType"
            },
            "x-nullable": false,
            "enum": [
              "All",
              "ContainsMQC",
              "ContainsMAA",
              "ContainsMQCAndMAA"
            ]
          },
          {
            "type": "integer",
            "name": "lastUpdatedBy",
            "in": "query",
            "description": "Retrieve contract rate volume based on UpdatedBy.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "lastUpdatedOn",
            "in": "query",
            "description": "Retrieve contract rate volume based on UpdatedOn.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validFrom",
            "in": "query",
            "description": "Retrieve contract rate volume based on valid from.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validTo",
            "in": "query",
            "description": "Retrieve contract rate volume based on valid to.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "Retrieve contract rate volume based on include deleted.",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "contractVolumeReferences",
            "in": "query",
            "description": "Retrieve contract rate volume based on contract volume references.\n            ",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "equipmentCategory",
            "in": "query",
            "description": "Retrieve contract rate volume based on Equipment Category.",
            "x-schema": {
              "$ref": "#/definitions/EquipmentCategory"
            },
            "x-nullable": false,
            "enum": [
              "All",
              "Dry",
              "Reefer"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OceanRateCardContractVolumesDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/rateLogging/status": {
      "get": {
        "tags": [
          "[NotSet] - Rate Logging Service"
        ],
        "summary": "Get status of service entry logging",
        "operationId": "RateLogging_GetStatus",
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The status",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RateLoggingStatus"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateLogging/start": {
      "post": {
        "tags": [
          "[NotSet] - Rate Logging Service"
        ],
        "summary": "Get status of service entry logging",
        "operationId": "RateLogging_Start",
        "responses": {
          "200": {
            "description": "The status"
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateLogging/activate": {
      "post": {
        "tags": [
          "[NotSet] - Rate Logging Service"
        ],
        "summary": "Activate service entry logging",
        "operationId": "RateLogging_Activate",
        "responses": {
          "200": {
            "description": "The status"
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateLogging/deactivate": {
      "post": {
        "tags": [
          "[NotSet] - Rate Logging Service"
        ],
        "summary": "Deactivate service entry logging",
        "operationId": "RateLogging_Deactivate",
        "responses": {
          "200": {
            "description": "The status"
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateRequest": {
      "get": {
        "tags": [
          "[NotSet] - Rate Request Logger"
        ],
        "summary": "Get Accessorial Charge Rate Requests",
        "operationId": "RateRequest_GetRateRequest",
        "parameters": [
          {
            "type": "string",
            "name": "requestDateFrom",
            "in": "query",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "requestDateTo",
            "in": "query",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "portOfLoadingId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "portOfDischargeId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "maxResult",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "equipmentSizeAndTypeId",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "applicationId",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge entry requests matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RateRequest"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateRequest/payload/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Rate Request Logger"
        ],
        "summary": "Get Rate Request Payload by Rate Id",
        "operationId": "RateRequest_GetRateRequestPayload",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of payload",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The entry request payload",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RateRequest"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateRequest/freightRateRetrievalQueryPayload/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Rate Request Logger"
        ],
        "summary": "Get the freight rate retrieval query payload by id",
        "operationId": "RateRequest_GetFreightRateRetrievalQueryPayload",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of payload",
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightRateRetrievalQueryPayload"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateRequest/freightRateRetrievalQuery": {
      "get": {
        "tags": [
          "[NotSet] - Rate Request Logger"
        ],
        "summary": "Get the freight rate queries that match the query parameters.",
        "operationId": "RateRequest_GetFreightRateRetrievalQueries",
        "parameters": [
          {
            "type": "string",
            "name": "requestDateFrom",
            "in": "query",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "requestDateTo",
            "in": "query",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "portOfLoadingId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "portOfDischargeId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "maxResult",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "equipmentSizeAndTypeId",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "applicationId",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FreightRateRetrievalQuery"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateRequest/portPairsForMyMsc": {
      "get": {
        "tags": [
          "[NotSet] - Rate Request Logger"
        ],
        "summary": "Get the list of different port pairs for which a valid, published and for myMSC.com rate exists.",
        "operationId": "RateRequest_GetRatePortPairsForMyMsc",
        "parameters": [
          {
            "type": "string",
            "name": "ratesValidFrom",
            "in": "query",
            "format": "date",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValueTupleOfShortAndShort"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/rateRequest/applicableOceanFreightRateLogItem": {
      "post": {
        "tags": [
          "[NotSet] - Rate Request Logger"
        ],
        "summary": "Log applicable ocean freight rates.",
        "operationId": "RateRequest_LogApplicableOceanFreightRateEntry",
        "parameters": [
          {
            "name": "applicableOceanFreightRateLogItem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicableOceanFreightRateLogItemDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeCategories": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Categories"
        ],
        "summary": "Get Accessorial Charge Categories",
        "operationId": "AccessorialChargeCategories_GetAll",
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeCategoryDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Categories"
        ],
        "summary": "Saves an Accessorial Charge Category.",
        "operationId": "AccessorialChargeCategories_Save",
        "parameters": [
          {
            "name": "accessorialChargeCategoryDto",
            "in": "body",
            "required": true,
            "description": "The accessorial charge category dto.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeCategoryDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfAccessorialChargeCategoryDto"
            }
          }
        }
      }
    },
    "/accessorialChargeCategories/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Categories"
        ],
        "summary": "Get Accessorial Charge Category by Id",
        "operationId": "AccessorialChargeCategories_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge entry",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeCategoryDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/search": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rates",
        "operationId": "AccessorialChargeRates_GetThroughPost",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "description": "The query parameters.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRateQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateHierarchyNodeSummaryDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rates",
        "operationId": "AccessorialChargeRates_Get",
        "parameters": [
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of a specific ocean rate card to find.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "mdmChargeIds",
            "in": "query",
            "description": "IDs of accessorial charge rates.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfLoadingHierarchies",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on ports of loading.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeHierarchies",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on port of discharge.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "containerSizeTypes",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on container size types. Empty list indicates any container.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validOn",
            "in": "query",
            "description": "Date during which the ACR must be valid on.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "calculationMethodValidOn",
            "in": "query",
            "description": "Date during which the a calculation method within the ACR must be valid on.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "originAreas",
            "in": "query",
            "description": "List of Origin areas to which the resulting accessorial charge rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationAreas",
            "in": "query",
            "description": "List of Destination areas to which the resulting accessorial charge rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originDryPorts",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationDryPorts",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "currencyId",
            "in": "query",
            "description": "Identifier of the currency in which the amount is expressed.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isEmpty",
            "in": "query",
            "description": "Whether the equipment is empty.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isDangerousCargo",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has Dangerous Cargo.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isOutOfGauge",
            "in": "query",
            "description": "Whether the equipment is out of gauge.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isShipperOwned",
            "in": "query",
            "description": "Whether the equipment is owned by the shipper.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "nonOperatingReefersOnly",
            "in": "query",
            "description": "Whether the containers are non operating.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "atDestination",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has applicability as Destination.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "atOrigin",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has applicability as Origin.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "asFreight",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has applicability as AsFreight.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "updatedOn",
            "in": "query",
            "description": "Type that the resulting accessorial charge rates must have.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "updatedBy",
            "in": "query",
            "description": "Type that the resulting accessorial charge rates must have.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "maxResultCount",
            "in": "query",
            "description": "Maximum number of results to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "chargeRetrievedType",
            "in": "query",
            "description": "Type that the retrieved resulting accessorial charge rates.",
            "x-schema": {
              "$ref": "#/definitions/AccessorialChargeRetrievalType"
            },
            "x-nullable": true,
            "enum": [
              "AutomaticallyRetrieved",
              "ManuallyAdded"
            ]
          },
          {
            "type": "string",
            "name": "remarks",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on Remarks.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "selectedChargeStatus",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on Charge Status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "calculationMethodStatuses",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on calculation method status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "chargeConditionType",
            "in": "query",
            "description": "Type that the condition resulting accessorial charge rates.",
            "x-schema": {
              "$ref": "#/definitions/AccessorialChargeRateConditionType"
            },
            "x-nullable": true,
            "enum": [
              "WithConditions",
              "WithoutConditions"
            ]
          },
          {
            "type": "boolean",
            "name": "isArbitrary",
            "in": "query",
            "description": "To exclude arbitrary rates when it is false",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rates matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateHierarchyNodeSummaryDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Create Accessorial Charge Rate",
        "operationId": "AccessorialChargeRates_Create",
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The creation information",
            "schema": {
              "$ref": "#/definitions/CreateAccessorialChargeRateDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "forValidationOnly",
            "in": "query",
            "required": true,
            "description": "Indicate if it is only for validating the data",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "The created accessorial charge entry",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfAccessorialChargeRateDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Delete Accessorial Charge Rate",
        "operationId": "AccessorialChargeRates_Delete",
        "parameters": [
          {
            "type": "array",
            "name": "ids",
            "in": "query",
            "description": "Ids of the ACR to delete.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssueDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/GetAccessorialChargeRateIdsByQuery": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rate Ids",
        "operationId": "AccessorialChargeRates_GetIdsByQuery",
        "parameters": [
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of a specific ocean rate card to find.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "mdmChargeIds",
            "in": "query",
            "description": "IDs of accessorial charge rates.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfLoadingHierarchies",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on ports of loading.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeHierarchies",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on port of discharge.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "containerSizeTypes",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on container size types. Empty list indicates any container.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validOn",
            "in": "query",
            "description": "Date during which the ACR must be valid on.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "calculationMethodValidOn",
            "in": "query",
            "description": "Date during which the a calculation method within the ACR must be valid on.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "originAreas",
            "in": "query",
            "description": "List of Origin areas to which the resulting accessorial charge rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationAreas",
            "in": "query",
            "description": "List of Destination areas to which the resulting accessorial charge rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originDryPorts",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationDryPorts",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "integer",
            "name": "currencyId",
            "in": "query",
            "description": "Identifier of the currency in which the amount is expressed.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isEmpty",
            "in": "query",
            "description": "Whether the equipment is empty.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isDangerousCargo",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has Dangerous Cargo.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isOutOfGauge",
            "in": "query",
            "description": "Whether the equipment is out of gauge.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isShipperOwned",
            "in": "query",
            "description": "Whether the equipment is owned by the shipper.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "nonOperatingReefersOnly",
            "in": "query",
            "description": "Whether the containers are non operating.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "atDestination",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has applicability as Destination.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "atOrigin",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has applicability as Origin.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "asFreight",
            "in": "query",
            "description": "Whether the resulting accessorial charge rate has applicability as AsFreight.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "updatedOn",
            "in": "query",
            "description": "Type that the resulting accessorial charge rates must have.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "updatedBy",
            "in": "query",
            "description": "Type that the resulting accessorial charge rates must have.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "maxResultCount",
            "in": "query",
            "description": "Maximum number of results to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "chargeRetrievedType",
            "in": "query",
            "description": "Type that the retrieved resulting accessorial charge rates.",
            "x-schema": {
              "$ref": "#/definitions/AccessorialChargeRetrievalType"
            },
            "x-nullable": true,
            "enum": [
              "AutomaticallyRetrieved",
              "ManuallyAdded"
            ]
          },
          {
            "type": "string",
            "name": "remarks",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on Remarks.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "selectedChargeStatus",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on Charge Status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "calculationMethodStatuses",
            "in": "query",
            "description": "Retrieve accessorial charge rate based on calculation method status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "chargeConditionType",
            "in": "query",
            "description": "Type that the condition resulting accessorial charge rates.",
            "x-schema": {
              "$ref": "#/definitions/AccessorialChargeRateConditionType"
            },
            "x-nullable": true,
            "enum": [
              "WithConditions",
              "WithoutConditions"
            ]
          },
          {
            "type": "boolean",
            "name": "isArbitrary",
            "in": "query",
            "description": "To exclude arbitrary rates when it is false",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The rate ids matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rate by ID",
        "operationId": "AccessorialChargeRates_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge entry",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge entry matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRateDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Update Accessorial Charge Rate",
        "operationId": "AccessorialChargeRates_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge entry",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The update information",
            "schema": {
              "$ref": "#/definitions/UpdateAccessorialChargeRateDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "forValidationOnly",
            "in": "query",
            "required": true,
            "description": "Indicate if it is only for validating the data",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The updated accessorial charge entry",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfAccessorialChargeRateDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/{id}/fullHierarchy": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rate Full Hierarchy",
        "operationId": "AccessorialChargeRates_GetFullHierarchyById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge rate",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge rate hierarchy (parents, siblings and children) matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRateNode"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/{id}/childrenGeographicalPattern": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rate Children",
        "operationId": "AccessorialChargeRates_GetChildren",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the parent accessorial charge rate",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of charge rates which are children of a specific charge rate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateGeographicalPatternReferenceDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/{id}/{isSelf}/parentsGeographicalPattern": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rate Parents",
        "operationId": "AccessorialChargeRates_GetParentsGeographicalScope",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the parent accessorial charge rate or the accessorial charge rate",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "isSelf",
            "in": "path",
            "required": true,
            "description": "The Id is of accessorial charge rate and not of its parent ",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of charge rates which are parents of a specific charge rate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateParentsGeographicalScopeDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/{id}/hierarchy": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rate Hierarchy",
        "operationId": "AccessorialChargeRates_GetHierarchy",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge entry",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of nodes in the hierarchy of the accessorial charge entry matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateHierarchyNodeSummaryDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/{id}/relativeIds": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Whole branch Accessorial Charge Rate Hierarchy",
        "operationId": "AccessorialChargeRates_GetRelativeAccessorialChargeRateIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge entry",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of nodes in the hierarchy of the accessorial charge entry matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/references": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Internal References of Accessorial Charge Rate",
        "operationId": "AccessorialChargeRates_GetReferencesFromSearchText",
        "parameters": [
          {
            "type": "string",
            "name": "searchText",
            "in": "query",
            "required": true,
            "description": "The search text of internal reference code",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of internal reference code",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/updateValidTo": {
      "put": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Update valid to of Accessorial Charge Rate.",
        "operationId": "AccessorialChargeRates_UpdateValidTo",
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The command.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeRatesValidityUpdateCommand"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The updated accessorial charge rate entry",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfListOfUpdateArbitraryAccessorialChargeRateValidToResultDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialChargeRates/validateFixedAmountCalculationMethod": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Validates Fixed Amount Calculation Method",
        "operationId": "AccessorialChargeRates_ValidateFixedAmountCalculationMethod",
        "parameters": [
          {
            "name": "calculationMethod",
            "in": "body",
            "required": true,
            "description": "The calculation method to validate fixed amount dto information",
            "schema": {
              "$ref": "#/definitions/FixedAmountCalculationMethodDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The status code",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          }
        }
      }
    },
    "/accessorialChargeRates/validateFreightTonsCalculationMethod": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Validates Freight Tons Times Amount Calculation Method",
        "operationId": "AccessorialChargeRates_ValidateFreightTonsTimesAmountCalculationMethod",
        "parameters": [
          {
            "name": "calculationMethod",
            "in": "body",
            "required": true,
            "description": "The calculation method to validate freight tons times amount dto information",
            "schema": {
              "$ref": "#/definitions/FreightTonsTimesAmountCalculationMethodDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The status code",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          }
        }
      }
    },
    "/accessorialChargeRates/validatePercentageAmountCalculationMethod": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Validates Percentage Of Amount Calculation Method",
        "operationId": "AccessorialChargeRates_ValidatePercentageOfAmountCalculationMethod",
        "parameters": [
          {
            "name": "calculationMethod",
            "in": "body",
            "required": true,
            "description": "The calculation method to validate percentage of amount dto information",
            "schema": {
              "$ref": "#/definitions/PercentageOfAmountCalculationMethodDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The status code",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          }
        }
      }
    },
    "/accessorialChargeRates/validateNumberTimesAmountCalculationMethod": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Validates Number Times Amount Calculation Method",
        "operationId": "AccessorialChargeRates_ValidateNumberTimesAmountCalculationMethod",
        "parameters": [
          {
            "name": "calculationMethod",
            "in": "body",
            "required": true,
            "description": "The calculation method to validate number times amount dto information",
            "schema": {
              "$ref": "#/definitions/NumberTimesAmountCalculationMethodDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The status code",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          }
        }
      }
    },
    "/accessorialChargeRates/GetAccessorialChargeSummaryByPackageId": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charge Rates"
        ],
        "summary": "Get Accessorial Charge Rate Summary Dto by Package Id",
        "operationId": "AccessorialChargeRates_GetChargeSummaryDtoByPackageId",
        "parameters": [
          {
            "type": "integer",
            "name": "packageId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateSummaryDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/accessorialCharges": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charges"
        ],
        "summary": "Get All Accessorial Charges",
        "operationId": "AccessorialCharges_GetAll",
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charges matching given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialCharges/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charges"
        ],
        "summary": "Get Accessorial Charge by Id",
        "operationId": "AccessorialCharges_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charges matching given parameters.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialCharges/arbitrary": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charges"
        ],
        "summary": "Get the list of arbitrary charges.",
        "operationId": "AccessorialCharges_GetArbitraryCharges",
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialCharges/{id}/summary": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charges"
        ],
        "summary": "Get Accessorial Charge Summary By Id",
        "operationId": "AccessorialCharges_GetChargeKeySummary",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the accessorial charge summary ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge summary matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialCharges/summaries": {
      "get": {
        "tags": [
          "[NotSet] - Accessorial Charges"
        ],
        "summary": "Get Accessorial Charge Summaries by MDM Ids",
        "operationId": "AccessorialCharges_GetChargeKeySummariesByMdmIds",
        "parameters": [
          {
            "type": "array",
            "name": "ids",
            "in": "query",
            "description": "The identifiers of the accessorial charge summaries ",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The accessorial charge summaries matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/accessorialCharges/create/{validationOnly}": {
      "post": {
        "tags": [
          "[NotSet] - Accessorial Charges"
        ],
        "summary": "Saves Accessorial charge",
        "operationId": "AccessorialCharges_Create",
        "parameters": [
          {
            "type": "boolean",
            "name": "validationOnly",
            "in": "path",
            "required": true,
            "description": "Indicates if it does validation only.",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The charge DTO.",
            "schema": {
              "$ref": "#/definitions/CreateAccessorialChargeDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "User Id",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "User Name",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfAccessorialChargeDto"
            }
          }
        }
      }
    },
    "/accessorialCharges/{id}/{validationOnly}": {
      "put": {
        "tags": [
          "[NotSet] - Accessorial Charges"
        ],
        "summary": "Updates Accessorial charge",
        "operationId": "AccessorialCharges_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of accessorial charge",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "validationOnly",
            "in": "path",
            "required": true,
            "description": "Indicates if it does validation only.",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The charge DTO.",
            "schema": {
              "$ref": "#/definitions/UpdateAccessorialChargeDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "User Id",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "User Name",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfAccessorialChargeDto"
            }
          }
        }
      }
    },
    "/inlandRates/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Inland Rates"
        ],
        "summary": "Get Inland Rate by Id",
        "operationId": "InlandRates_GetRate",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the inland entry ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The inland entry matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/InlandRateDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/inlandRates": {
      "post": {
        "tags": [
          "[NotSet] - Ocean Inland Rates"
        ],
        "summary": "Saves Inland Rate",
        "operationId": "InlandRates_Save",
        "parameters": [
          {
            "name": "rateDto",
            "in": "body",
            "required": true,
            "description": "The inland entry dto.",
            "schema": {
              "$ref": "#/definitions/InlandRateDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfInlandRateDto"
            }
          }
        }
      }
    },
    "/inlandRates/{id}/status": {
      "put": {
        "tags": [
          "[NotSet] - Ocean Inland Rates"
        ],
        "summary": "Update Ocean Freight Rate Status",
        "operationId": "InlandRates_UpdateStatus",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ocean freight entry's identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "status",
            "in": "body",
            "required": true,
            "description": "The new status.",
            "schema": {
              "$ref": "#/definitions/RateStatus"
            },
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/inlandRates/status": {
      "put": {
        "tags": [
          "[NotSet] - Ocean Inland Rates"
        ],
        "summary": "Update Ocean Freight Rate Status",
        "operationId": "InlandRates_UpdateMultipleStatus",
        "parameters": [
          {
            "name": "ratesDto",
            "in": "body",
            "required": true,
            "description": "The ocean freight rates' identifiers and status.",
            "schema": {
              "$ref": "#/definitions/UpdateRatesStatusDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{oceanRateCardId}/supportingDocuments/{supportingDocumentId}/fileAttachments/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Freight RateCard File Attachments"
        ],
        "summary": "Get File Content by OceanRateCardId ,SupportingDocumentId and FreightRateId",
        "operationId": "FreightRateCardFileAttachments_GetContents",
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean entry card",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "supportingDocumentId",
            "in": "path",
            "required": true,
            "description": "The identifier of the supporting document",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the freight entry ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "The File Attachments matching the given identifiers."
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "[NotSet] - Freight RateCard File Attachments"
        ],
        "summary": "Update File Attachment of Freight Rate",
        "operationId": "FreightRateCardFileAttachments_PutContents",
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "oceanRateCardId",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean entry card",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "supportingDocumentId",
            "in": "path",
            "required": true,
            "description": "The identifier of the supporting document",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the freight entry",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "The updated file attachment of freight entry"
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/inlandRoutes/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Inland Routes"
        ],
        "summary": "Get Inland Route by Id",
        "operationId": "InlandRoutes_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the inland route ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The inland route matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/InlandRouteDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/inlandRoutes": {
      "get": {
        "tags": [
          "[NotSet] - Inland Routes"
        ],
        "summary": "Get Inland Route by Ocean Rate Card Id",
        "operationId": "InlandRoutes_GetByOceanRateCardId",
        "parameters": [
          {
            "type": "integer",
            "name": "rateCardId",
            "in": "query",
            "required": true,
            "description": "The identifier of the ocean entry card ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The inland routes matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InlandRouteDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Inland Routes"
        ],
        "summary": "Saves Inland Route",
        "operationId": "InlandRoutes_Save",
        "parameters": [
          {
            "name": "routeDto",
            "in": "body",
            "required": true,
            "description": "The inland route dto.",
            "schema": {
              "$ref": "#/definitions/InlandRouteDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfInlandRouteDto"
            }
          }
        }
      }
    },
    "/inlandRoutes/{id}/rates": {
      "get": {
        "tags": [
          "[NotSet] - Inland Routes"
        ],
        "summary": "Get Inland Rates by Id",
        "operationId": "InlandRoutes_GetRates",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the inland entry ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The inland rates matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InlandRateDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/inlandRoutes/saveWithRate": {
      "post": {
        "tags": [
          "[NotSet] - Inland Routes"
        ],
        "summary": "Saves Inland Route with Rates",
        "operationId": "InlandRoutes_SaveWithRate",
        "parameters": [
          {
            "name": "parameter",
            "in": "body",
            "required": true,
            "description": "The inland route with entry information.",
            "schema": {
              "$ref": "#/definitions/InlandRouteWithRateParameter"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfInlandRouteDto"
            }
          }
        }
      }
    },
    "/equipmentSizeTypeGroups": {
      "get": {
        "tags": [
          "[NotSet] - Equipment SizeType Groups"
        ],
        "summary": "Get Equipment SizeType Groups",
        "operationId": "EquipmentSizeTypeGroups_GetAll",
        "parameters": [
          {
            "type": "boolean",
            "name": "withCanceled",
            "in": "query",
            "required": true,
            "description": "Indicate to include cancelled data",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The equipment sizetype groups matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EquipmentSizeTypeGroupDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Equipment SizeType Groups"
        ],
        "summary": "Saves Equipment Size Type Group.",
        "operationId": "EquipmentSizeTypeGroups_Save",
        "parameters": [
          {
            "name": "equipmentSizeTypeGroupDto",
            "in": "body",
            "required": true,
            "description": "The equipment size type group dto.",
            "schema": {
              "$ref": "#/definitions/EquipmentSizeTypeGroupDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The name of the user issuing the command",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfEquipmentSizeTypeGroupDto"
            }
          }
        }
      }
    },
    "/equipmentSizeTypeGroups/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Equipment SizeType Groups"
        ],
        "summary": "Get Equipment SizeType Group by Id",
        "operationId": "EquipmentSizeTypeGroups_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the equipment size type group",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The equipment sizetype groups matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/EquipmentSizeTypeGroupDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/locationGroups": {
      "get": {
        "tags": [
          "[NotSet] - Location Groups"
        ],
        "summary": "Get Location Groups",
        "operationId": "LocationGroup_GetAll",
        "parameters": [
          {
            "type": "boolean",
            "name": "withCanceled",
            "in": "query",
            "required": true,
            "description": "Indicate to include cancelled data",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "ids",
            "in": "query",
            "description": "The identifiers of location groups ",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The equipment size/type groups matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationGroupDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Location Groups"
        ],
        "summary": "Saves location group.",
        "operationId": "LocationGroup_Save",
        "parameters": [
          {
            "name": "locationGroupDto",
            "in": "body",
            "required": true,
            "description": "The location group dto.",
            "schema": {
              "$ref": "#/definitions/LocationGroupDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfLocationGroupDto"
            }
          }
        }
      }
    },
    "/locationGroups/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Location Groups"
        ],
        "summary": "Get Location Group by Id",
        "operationId": "LocationGroup_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the location group",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The equipment size/type groups matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/LocationGroupDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRates/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Arbitrary Rates"
        ],
        "summary": "Get Arbitrary Rate by Id",
        "operationId": "ArbitraryRates_GetRate",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the arbitrary entry ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The arbitrary entry matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRates": {
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Rates"
        ],
        "summary": "Saves Arbitrary Rate",
        "operationId": "ArbitraryRates_Save",
        "parameters": [
          {
            "name": "rateDto",
            "in": "body",
            "required": true,
            "description": "The arbitrary entry dto.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRateDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfArbitraryRateDto"
            }
          }
        }
      }
    },
    "/arbitraryRates/{id}/status": {
      "put": {
        "tags": [
          "[NotSet] - Arbitrary Rates"
        ],
        "summary": "Update Ocean Freight Rate Status",
        "operationId": "ArbitraryRates_UpdateStatus",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ocean freight entry's identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "status",
            "in": "body",
            "required": true,
            "description": "The new status.",
            "schema": {
              "$ref": "#/definitions/RateStatus"
            },
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRates/status": {
      "put": {
        "tags": [
          "[NotSet] - Arbitrary Rates"
        ],
        "summary": "Update Ocean Freight Rate Status",
        "operationId": "ArbitraryRates_UpdateMultipleStatus",
        "parameters": [
          {
            "name": "ratesDto",
            "in": "body",
            "required": true,
            "description": "The ocean freight rates' identifiers and status.",
            "schema": {
              "$ref": "#/definitions/UpdateRatesStatusDto"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/portGroups": {
      "get": {
        "tags": [
          "[NotSet] - Port Groups"
        ],
        "summary": "Get Port Groups",
        "operationId": "PortGroups_Get",
        "parameters": [
          {
            "type": "boolean",
            "name": "withCanceled",
            "in": "query",
            "description": "Whether canceled port groups should also be returned",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of port groups",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PortGroupDto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Port Groups"
        ],
        "summary": "Create Port Group",
        "operationId": "PortGroups_Create",
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The port group creation information",
            "schema": {
              "$ref": "#/definitions/CreatePortGroupDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The name of the user issuing the command",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "The created port group",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfPortGroupDto"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          }
        }
      }
    },
    "/portGroups/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Port Groups"
        ],
        "summary": "Get Port Group",
        "operationId": "PortGroups_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the port group",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The port group",
            "schema": {
              "$ref": "#/definitions/PortGroupDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "[NotSet] - Port Groups"
        ],
        "summary": "Update Port Group",
        "operationId": "PortGroups_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the port group",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The port group update information",
            "schema": {
              "$ref": "#/definitions/UpdatePortGroupDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The name of the user issuing the command",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The updated port group",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfPortGroupDto"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationIssue"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "[NotSet] - Port Groups"
        ],
        "summary": "Delete Port Group",
        "operationId": "PortGroups_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the port group",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The name of the user issuing the command",
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get Ocean Rate Cards",
        "operationId": "OceanRateCards_Get",
        "parameters": [
          {
            "type": "string",
            "name": "reference",
            "in": "query",
            "description": "Reference of a specific ocean rate card to find.",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "customerIds",
            "in": "query",
            "description": "List of customers to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfLoadingId",
            "in": "query",
            "description": "ID of the port of loading to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "portOfDischargeId",
            "in": "query",
            "description": "ID of the port of discharge to which the resulting ocean rate cards can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validOn",
            "in": "query",
            "description": "Date on which the resulting ocean rate cards must be valid.",
            "format": "date",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "type",
            "in": "query",
            "description": "Type that the resulting ocean rate cards must have.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "tier",
            "in": "query",
            "description": "Tier that the resulting ocean rate cards must have.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "maxResultCount",
            "in": "query",
            "description": "Maximum number of results to return.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "updatedOn",
            "in": "query",
            "description": "Last date on which the resulting ocean rate cards must be updated.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validFrom",
            "in": "query",
            "description": "Date on which the resulting ocean rate cards should be valid from.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "validTo",
            "in": "query",
            "description": "Date on which the resulting ocean rate cards should be valid to.",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "updatedBy",
            "in": "query",
            "description": "User that the resulting ocean rate cards must be updated from.",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "publicationChannelIds",
            "in": "query",
            "description": "Whether the resulting ocean rate cards must contain at least one publication channel.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "name": "validityType",
            "in": "query",
            "description": "Whether the resulting ocean rate cards must contain at least one validity type.",
            "x-schema": {
              "$ref": "#/definitions/OceanRateCardValidityType"
            },
            "x-nullable": true,
            "enum": [
              "RateCard",
              "OceanRate"
            ]
          },
          {
            "type": "array",
            "name": "freightPricingRuleStatuses",
            "in": "query",
            "description": "List of selected ocean rate status.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "name": "containsMqc",
            "in": "query",
            "description": "Whether contract volumes contains minimum quantity commitment",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "containsMaa",
            "in": "query",
            "description": "Whether contract volumes contains maximum allocation agreement",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "containsContractVolumes",
            "in": "query",
            "description": "Whether rate card contains contract volumes",
            "x-nullable": true
          },
          {
            "type": "array",
            "name": "nomenclatureCode",
            "in": "query",
            "description": "Object that contains list of commodity nomenclature code(and optional FAK), the resulting ocean rate cards must have.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "name": "includeFak",
            "in": "query",
            "description": "Include FAK in commodity search",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "containerSizeTypes",
            "in": "query",
            "description": "Identifiers for the type  and size of containers.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originHierarchies",
            "in": "query",
            "description": "IDs of the origin to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the origin dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationHierarchies",
            "in": "query",
            "description": "IDs of the destination to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationDryPortsHierarchies",
            "in": "query",
            "description": "IDs of the destination dry ports to which the resulting inland rates can apply.",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "originTransportationMode",
            "in": "query",
            "description": "Indicate the origin transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "name": "destinationTransportationMode",
            "in": "query",
            "description": "Indicate the destination transportation mode",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The entry cards matching the given parameters.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OceanRateCardSummaryDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Create Ocean Rate Card",
        "operationId": "OceanRateCards_Create",
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The creation information",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateOceanRateCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "The created entry card",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfOceanRateCardDto"
            }
          }
        }
      }
    },
    "/oceanRateCards/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get Ocean Rate Card by Id",
        "operationId": "OceanRateCards_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean entry card",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The ocean entry card matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/OceanRateCardDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Update Ocean Rate Card",
        "operationId": "OceanRateCards_Update",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of ocean entry card",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "description": "The update information",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateOceanRateCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The updated entry card",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfOceanRateCardDto"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfOceanRateCardDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/reference/{internalReference}": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get Ocean Rate Card by Internal Reference",
        "operationId": "OceanRateCards_GetByInternalReference",
        "parameters": [
          {
            "type": "string",
            "name": "internalReference",
            "in": "path",
            "required": true,
            "description": "The internal reference of the ocean entry card",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The ocean entry card matching the given internal reference.",
            "schema": {
              "$ref": "#/definitions/OceanRateCardDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/references": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get Ocean Rate Card From Search Text Result",
        "operationId": "OceanRateCards_GetReferencesFromSearchText",
        "parameters": [
          {
            "type": "string",
            "name": "searchText",
            "in": "query",
            "required": true,
            "description": "The search text of reference code",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of  reference codes from matching search text",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetRateCardFromSearchTextResult"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/basePorts": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get Base Port Ids by Id and Applicability",
        "operationId": "OceanRateCards_GetBasePortIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean entry card",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "applicability",
            "in": "query",
            "required": true,
            "description": "The origin/destination applicability of the ocean entry card",
            "x-schema": {
              "$ref": "#/definitions/Applicability"
            },
            "x-nullable": false,
            "enum": [
              "AtOrigin",
              "AtDestination",
              "AsFreight"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The base port ids matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/oceanFreightRatePortIds": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get All Port Ids used by all the Ocean Freight Rates within a Rate Card",
        "operationId": "OceanRateCards_GetOceanFreightRatePortIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of port ids used by the ocean freight entry within a entry card.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/arbitraryPorts": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get Arbitrary Port Ids by Id and Applicability",
        "operationId": "OceanRateCards_GetArbitraryPortIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the ocean entry card",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "applicability",
            "in": "query",
            "required": true,
            "description": "The origin/destination applicability of the ocean entry card",
            "x-schema": {
              "$ref": "#/definitions/Applicability"
            },
            "x-nullable": false,
            "enum": [
              "AtOrigin",
              "AtDestination",
              "AsFreight"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The arbitrary port ids matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{tier1InternalReference}/allTiersFromTier1InternalReference": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get Ocean Rate Card by Tier1 Internal Reference",
        "operationId": "OceanRateCards_GetAllTiersFromTier1InternalReference",
        "parameters": [
          {
            "type": "string",
            "name": "tier1InternalReference",
            "in": "path",
            "required": true,
            "description": "The tier1 internal reference of the ocean entry card",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The ocean entry card matching the given tier1 internal reference.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OceanRateCard"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/createNewTariff": {
      "post": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Create new tariff tier.",
        "operationId": "OceanRateCards_CreateNewTariffTier",
        "parameters": [
          {
            "name": "createNewTariffOceanRateCardCommand",
            "in": "body",
            "required": true,
            "description": "The ocean entry card DTO.",
            "schema": {
              "$ref": "#/definitions/CreateNewTariffOceanRateCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfOceanRateCardDto"
            }
          }
        }
      }
    },
    "/oceanRateCards/createTariffChild": {
      "post": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Create tariff child tier.",
        "operationId": "OceanRateCards_CreateTariffChildTier",
        "parameters": [
          {
            "name": "createTariffChildOceanRateCardCommand",
            "in": "body",
            "required": true,
            "description": "The ocean entry card DTO.",
            "schema": {
              "$ref": "#/definitions/CreateTariffChildOceanRateCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfOceanRateCardDto"
            }
          }
        }
      }
    },
    "/oceanRateCards/createTariffParent": {
      "post": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Create tariff parent tier.",
        "operationId": "OceanRateCards_CreateTariffParentTier",
        "parameters": [
          {
            "name": "createTariffParentOceanRateCardCommand",
            "in": "body",
            "required": true,
            "description": "The ocean entry card dto.",
            "schema": {
              "$ref": "#/definitions/CreateTariffParentOceanRateCardDto"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "From",
            "in": "header",
            "required": true,
            "description": "The user name",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfOceanRateCardDto"
            }
          }
        }
      }
    },
    "/oceanRateCards/{id}/publish": {
      "put": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Publish All Rates for Current Ocean Rate card",
        "operationId": "OceanRateCards_Publish",
        "parameters": [
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "User Id",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ocean entry card identifier",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "rateCardPublicationCheckResultDto",
            "in": "body",
            "required": true,
            "description": "The parameter object containing list of the rates ids to publish",
            "schema": {
              "$ref": "#/definitions/RateCardPublicationCheckResultDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/publishabilityCheck": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Check if every rate of the card can be published.",
        "operationId": "OceanRateCards_PublishabilityCheckAll",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the rate card.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "freightChargeCodeId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of rate ids that can be published and the list of rate ids that cannot be published separated in 2 groups.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublishabilityCheckResultDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/publishabilityCheckWithType": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Check if every rate of the card can be published.",
        "operationId": "OceanRateCards_PublishabilityCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the rate card.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "freightChargeCodeId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "required": true,
            "x-schema": {
              "$ref": "#/definitions/FreightEntryType"
            },
            "x-nullable": false,
            "enum": [
              "Ocean",
              "InlandOrigin",
              "InlandDestination",
              "ArbitraryOrigin",
              "ArbitraryDestination"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of rate ids that can be published and the list of rate ids that cannot be published separated in 2 groups.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublishabilityCheckResultDto"
              }
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/routeIds": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get the list of route IDs of the Ocean Rate Card which matches the specified ID",
        "operationId": "OceanRateCards_GetRouteIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Ocean Rate Card ID",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of route IDs of the Ocean Rate Card which matches the specified ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/arbitraryRouteIds": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get the list of arbitrary route IDs of the Ocean Rate Card which matches the specified ID",
        "operationId": "OceanRateCards_GetArbitraryRouteIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Ocean Rate Card ID",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of arbitrary route IDs of the Ocean Rate Card which matches the specified ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/inlandRouteIds": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get the list of inland route IDs of the Ocean Rate Card which matches the specified ID",
        "operationId": "OceanRateCards_GetInlandRouteIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Ocean Rate Card ID",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of inland route IDs of the Ocean Rate Card which matches the specified ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/oceanFreightRateIds": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get the list of entry IDs of the Ocean Rate Card which matches the specified ID",
        "operationId": "OceanRateCards_GetOceanFreightRateIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Ocean Rate Card ID",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of entry IDs of the Ocean Rate Card which matches the specified ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/arbitraryRateIds": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get the list of arbitrary entry IDs of the Ocean Rate Card which matches the specified ID",
        "operationId": "OceanRateCards_GetArbitraryRateIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Ocean Rate Card ID",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of arbitrary entry IDs of the Ocean Rate Card which matches the specified ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/inlandRateIds": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get the list of inland entry IDs of the Ocean Rate Card which matches the specified ID",
        "operationId": "OceanRateCards_GetInlandRateIds",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Ocean Rate Card ID",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The list of inland entry IDs of the Ocean Rate Card which matches the specified ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/oceanRateCards/{id}/minimumPublicationStart": {
      "get": {
        "tags": [
          "[NotSet] - Ocean Rate Cards"
        ],
        "summary": "Get the minimum publication from with the correspondent rate card ID",
        "operationId": "OceanRateCards_GetMinimumPublishedFrom",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Ocean Rate Card ID",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "The minimum published start.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRoutes/{id}": {
      "get": {
        "tags": [
          "[NotSet] - Arbitrary Routes"
        ],
        "summary": "Get Arbitrary Route by Id",
        "operationId": "ArbitraryRoutes_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the arbitrary route ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The arbitrary route matching the given identifier.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRouteDto"
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRoutes": {
      "get": {
        "tags": [
          "[NotSet] - Arbitrary Routes"
        ],
        "summary": "Get Arbitrary Route by Ocean Rate Card Id",
        "operationId": "ArbitraryRoutes_GetByOceanRateCardId",
        "parameters": [
          {
            "type": "integer",
            "name": "rateCardId",
            "in": "query",
            "required": true,
            "description": "The identifier of the ocean entry card ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The arbitrary routes matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArbitraryRouteDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Routes"
        ],
        "summary": "Saves Arbitrary Route",
        "operationId": "ArbitraryRoutes_Save",
        "parameters": [
          {
            "name": "routeDto",
            "in": "body",
            "required": true,
            "description": "The arbitrary route dto.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRouteDto"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfArbitraryRouteDto"
            }
          }
        }
      }
    },
    "/arbitraryRoutes/{id}/rates": {
      "get": {
        "tags": [
          "[NotSet] - Arbitrary Routes"
        ],
        "summary": "Get Arbitrary Rates by Id",
        "operationId": "ArbitraryRoutes_GetRates",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the arbitrary entry ",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The arbitrary rates matching the given identifier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArbitraryRouteDto"
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/arbitraryRoutes/saveWithRate": {
      "post": {
        "tags": [
          "[NotSet] - Arbitrary Routes"
        ],
        "summary": "Saves Arbitrary Route with Rates",
        "operationId": "ArbitraryRoutes_SaveWithRate",
        "parameters": [
          {
            "name": "parameter",
            "in": "body",
            "required": true,
            "description": "The arbitrary route with entry information.",
            "schema": {
              "$ref": "#/definitions/ArbitraryRouteWithRateParameter"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "UserId",
            "in": "header",
            "required": true,
            "description": "The user id",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "An operation result containing validation issues if any, and, upon success, the dto from the saved entity.",
            "schema": {
              "$ref": "#/definitions/OperationResultDtoOfArbitraryRouteDto"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PageResponse": {
      "type": "object",
      "x-abstract": true
    },
    "PortGroupDto": {
      "allOf": [
        {
          "$ref": "#/definitions/PortGroupDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id",
            "isDeleted"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "isDeleted": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "PortGroupDtoBase": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "CreateAccessorialChargeRateHistoryQuery": {
      "allOf": [
        {
          "$ref": "#/definitions/ImpactedRuleQuery"
        },
        {
          "type": "object",
          "description": "Query to create an accessorial charge rate history entry",
          "required": [
            "accessorialChargeRateId",
            "userId"
          ],
          "properties": {
            "accessorialChargeRateId": {
              "type": "integer",
              "description": "Identify which Accessorial charge rate id should be insert in history",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "description": "Identify which user update the history",
              "format": "int32"
            }
          }
        }
      ]
    },
    "ImpactedRuleQuery": {
      "type": "object",
      "description": "Query for impacted rule",
      "properties": {
        "retrievalType": {
          "description": "Retrieval type of the accessorial charge rate",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRetrievalType"
            }
          ]
        },
        "rateCardInternalReferences": {
          "type": "array",
          "description": "Internal references of specific rate cards in which to search for rates.",
          "items": {
            "type": "string"
          }
        },
        "rateCardTypes": {
          "type": "array",
          "description": "Types of rate cards in which to search for rates.",
          "items": {
            "$ref": "#/definitions/OceanRateCardType"
          }
        },
        "validAfter": {
          "type": "string",
          "description": "Starting date of the time interval during which the rates must be valid.",
          "format": "date"
        },
        "validBefore": {
          "type": "string",
          "description": "End date of the time interval during which the rates must be valid.",
          "format": "date"
        },
        "originIds": {
          "type": "array",
          "description": "Identifiers of origin locations.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "originDryPortsHierarchies": {
          "type": "array",
          "description": "Identifiers of origin dry ports.",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "portOfLoadingIds": {
          "type": "array",
          "description": "Identifiers of ports of loading (POL) to at least one of which the rates must apply.",
          "items": {
            "type": "integer"
          }
        },
        "excludedPortOfLoadingIds": {
          "type": "array",
          "description": "Identifiers of excluded ports of loading (POL) to at least one of which the rates must apply.",
          "items": {
            "type": "integer"
          }
        },
        "portOfDischargeIds": {
          "type": "array",
          "description": "Identifiers of ports of discharge (POD) to at least one of which the rates must apply.",
          "items": {
            "type": "integer"
          }
        },
        "excludedPortOfDischargeIds": {
          "type": "array",
          "description": "Identifiers of excluded ports of discharge (POD) to at least one of which the rates must apply.",
          "items": {
            "type": "integer"
          }
        },
        "destinationDryPortsHierarchies": {
          "type": "array",
          "description": "Identifiers of destination dry ports.",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "destinationIds": {
          "type": "array",
          "description": "Identifiers of destination locations.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "containerSpecifications": {
          "type": "array",
          "description": "Identifiers of containers sizes and types to at least one of which the rates must apply.",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "containerIsEmpty": {
          "type": "boolean",
          "description": "Whether the rates must apply to an empty container."
        },
        "containerIsShipperOwned": {
          "type": "boolean",
          "description": "Whether the rates must apply to a container that is owned by the shipper."
        },
        "minCargoWeight": {
          "type": "number",
          "description": "Minimum Weight of cargo to which the rates must apply.",
          "format": "decimal"
        },
        "maxCargoWeight": {
          "type": "number",
          "description": "Maximum Weight of cargo to which the rates must apply.",
          "format": "decimal"
        },
        "cargoWeightUnit": {
          "description": "Unit of the cargo weight to which the rates must apply.",
          "allOf": [
            {
              "$ref": "#/definitions/ApplicableOceanFreightRateQueryWeightUnit"
            }
          ]
        },
        "isOutOfGauge": {
          "type": "boolean",
          "description": "Whether the rates must apply to out of gauge container."
        },
        "canalPassageId": {
          "type": "integer",
          "description": "Identifiers of the canal passage"
        },
        "cargoIsDangerous": {
          "type": "boolean",
          "description": "Whether the rates must apply to dangerous cargo."
        },
        "dangerousSubstanceIds": {
          "type": "array",
          "description": "List of identifier of Dangerous Substances",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "dangerousSubstanceClasses": {
          "type": "array",
          "description": "List of dangerous substances classes",
          "items": {
            "type": "string"
          }
        },
        "currencyIds": {
          "type": "array",
          "description": "List of currency identifiers",
          "items": {
            "type": "integer"
          }
        },
        "shouldReturnIds": {
          "type": "boolean",
          "description": "Indicate if the query will return a count or a list of ids"
        }
      }
    },
    "AccessorialChargeRetrievalType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AutomaticallyRetrieved",
        "ManuallyAdded"
      ],
      "enum": [
        "AutomaticallyRetrieved",
        "ManuallyAdded"
      ]
    },
    "OceanRateCardType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "SVC",
        "Tariff",
        "SpecialQuote"
      ],
      "enum": [
        "SVC",
        "Tariff",
        "SpecialQuote"
      ]
    },
    "GeographicalHierarchyDto": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "portId": {
          "type": "integer"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "level3RegionId": {
          "type": "integer",
          "format": "int32"
        },
        "level2RegionId": {
          "type": "integer",
          "format": "int32"
        },
        "level1RegionId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContainerSpecificationDto": {
      "type": "object",
      "description": "Indicate the selected container size and type and a flag indicating if the reefer is not operating",
      "required": [
        "containerSizeTypeId",
        "isNonOperatingReefer"
      ],
      "properties": {
        "containerSizeTypeId": {
          "type": "integer",
          "description": "Mdm id of the container size type. Null means any container size type"
        },
        "isNonOperatingReefer": {
          "type": "boolean",
          "description": "Indicate if the reefer are not operating and or not (this flag does not concern other containers)"
        }
      }
    },
    "ApplicableOceanFreightRateQueryWeightUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Kilogram",
        "Pound"
      ],
      "enum": [
        "Kilogram",
        "Pound"
      ]
    },
    "AccessorialChargeRateHistoryDto": {
      "type": "object",
      "required": [
        "id",
        "accessorialChargeRateId",
        "tariffStatus",
        "svcStatus",
        "sqStatus",
        "updatedOn",
        "updatedBy",
        "mdmChargeId",
        "isDeleted",
        "isLocal",
        "isArbitrary",
        "level",
        "group"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "accessorialChargeRateId": {
          "type": "integer",
          "format": "int32"
        },
        "tariffStatus": {
          "$ref": "#/definitions/AccessorialChargeRateHistoryStatus"
        },
        "svcStatus": {
          "$ref": "#/definitions/AccessorialChargeRateHistoryStatus"
        },
        "sqStatus": {
          "$ref": "#/definitions/AccessorialChargeRateHistoryStatus"
        },
        "refreshStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateHistoryFreightPricingRuleRefreshStateDto"
          }
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "integer",
          "format": "int32"
        },
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "internalReference": {
          "type": "string"
        },
        "isLocal": {
          "type": "boolean"
        },
        "isArbitrary": {
          "type": "boolean"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "retrievalType": {
          "$ref": "#/definitions/AccessorialChargeRetrievalType"
        },
        "geographicalInclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalInclusionDto"
          }
        },
        "geographicalExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalExclusionDto"
          }
        },
        "conditions": {
          "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
        },
        "containerSizeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "inheritedConditions": {
          "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
        },
        "lastModifiedUsername": {
          "type": "string"
        },
        "accessorialChargeRatePackage": {
          "$ref": "#/definitions/AccessorialChargeRatePackageDto"
        }
      }
    },
    "AccessorialChargeRateHistoryStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NotApplicable",
        "New",
        "InProgress",
        "Updated"
      ],
      "enum": [
        "NotApplicable",
        "New",
        "InProgress",
        "Updated"
      ]
    },
    "AccessorialChargeRateHistoryFreightPricingRuleRefreshStateDto": {
      "type": "object",
      "required": [
        "freightPricingRuleId",
        "hasBeenRefreshed"
      ],
      "properties": {
        "freightPricingRuleId": {
          "type": "integer",
          "format": "int32"
        },
        "hasBeenRefreshed": {
          "type": "boolean"
        }
      }
    },
    "AccessorialChargeGroups": {
      "type": "string",
      "description": "",
      "x-enumFlags": true,
      "x-enumNames": [
        "Ocean",
        "Intermodal",
        "ContainerRental"
      ],
      "enum": [
        "Ocean",
        "Intermodal",
        "ContainerRental"
      ]
    },
    "AccessorialChargeRateGeographicalInclusionDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalPatternDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRateGeographicalPatternDto": {
      "type": "object",
      "required": [
        "id",
        "geographicalScopeId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "geographicalScopeId": {
          "type": "string",
          "format": "guid"
        },
        "originGeographicalAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateOriginDto"
          }
        },
        "originDryPortGeographicalAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateOriginDryPortDto"
          }
        },
        "portOfLoadingGeographicalAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRatePortOfLoadingDto"
          }
        },
        "portOfDischargeGeographicalAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRatePortOfDischargeDto"
          }
        },
        "destinationDryPortGeographicalAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateDestinationDryPortDto"
          }
        },
        "destinationGeographicalAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateDestinationDto"
          }
        }
      }
    },
    "AccessorialChargeRateOriginDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRateGeographicalAreaDto": {
      "type": "object",
      "properties": {
        "geographicalAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "areaId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GeographicalAreaType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Region",
        "Country",
        "Port",
        "Location",
        "Worldwide"
      ],
      "enum": [
        "Region",
        "Country",
        "Port",
        "Location",
        "Worldwide"
      ]
    },
    "AccessorialChargeRateOriginDryPortDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRatePortOfLoadingDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRatePortOfDischargeDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRateDestinationDryPortDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRateDestinationDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRateGeographicalExclusionDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalPatternDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRateConditionsDto": {
      "type": "object",
      "properties": {
        "emptyEquipmentOnly": {
          "type": "boolean"
        },
        "outOfGaugeEquipmentOnly": {
          "type": "boolean"
        },
        "collectPaymentOnly": {
          "type": "boolean"
        },
        "destinationAgencyId": {
          "type": "integer",
          "format": "int32"
        },
        "elsewherePaymentAgencyId": {
          "type": "integer",
          "format": "int32"
        },
        "manifestingAgencyId": {
          "type": "integer",
          "format": "int32"
        },
        "bookingSourceType": {
          "$ref": "#/definitions/BookingSourceType"
        },
        "pricingRecordInitialOriginatingSystem": {
          "$ref": "#/definitions/PricingRecordInitialOriginatingSystem"
        },
        "shippingInstructionsSourceType": {
          "$ref": "#/definitions/ShippingInstructionsSourceType"
        },
        "transactionTypes": {
          "$ref": "#/definitions/TransactionTypes"
        },
        "cargoWeightCondition": {
          "$ref": "#/definitions/CargoWeightConditionDto"
        },
        "billableCompanyCondition": {
          "$ref": "#/definitions/BillableCompanyConditionDto"
        },
        "consigneeCondition": {
          "$ref": "#/definitions/ConsigneeConditionDto"
        },
        "currencyCondition": {
          "$ref": "#/definitions/CurrencyConditionDto"
        },
        "customerGroupsCondition": {
          "$ref": "#/definitions/CustomerGroupsConditionDto"
        },
        "otherEquipmentSizeTypeCondition": {
          "$ref": "#/definitions/OtherEquipmentSizeTypeConditionDto"
        },
        "notifyPartyCondition": {
          "$ref": "#/definitions/NotifyPartyConditionDto"
        },
        "rateCardReferencesCondition": {
          "$ref": "#/definitions/RateCardReferencesConditionDto"
        },
        "rateHolderCondition": {
          "$ref": "#/definitions/RateHolderConditionDto"
        },
        "shipperCondition": {
          "$ref": "#/definitions/ShipperConditionDto"
        },
        "accessorialDangerousCargoCondition": {
          "$ref": "#/definitions/AccessorialDangerousCargoConditionDto"
        },
        "freightPaymentCondition": {
          "$ref": "#/definitions/FreightPaymentConditionDto"
        },
        "packageTypeCondition": {
          "$ref": "#/definitions/PackageTypeConditionDto"
        },
        "commodityCondition": {
          "$ref": "#/definitions/CommodityConditionDto"
        },
        "transitCondition": {
          "$ref": "#/definitions/TransitConditionDto"
        },
        "canalPassageCondition": {
          "$ref": "#/definitions/CanalPassageConditionDto"
        },
        "containerOwnerCondition": {
          "$ref": "#/definitions/ContainerOwnerConditionDto"
        },
        "haulageTypeCondition": {
          "$ref": "#/definitions/HaulageTypeConditionDto"
        }
      }
    },
    "BookingSourceType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Manual",
        "Electronic"
      ],
      "enum": [
        "Manual",
        "Electronic"
      ]
    },
    "PricingRecordInitialOriginatingSystem": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "MyMsc",
        "AgencySystem"
      ],
      "enum": [
        "MyMsc",
        "AgencySystem"
      ]
    },
    "ShippingInstructionsSourceType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Manual",
        "Electronic"
      ],
      "enum": [
        "Manual",
        "Electronic"
      ]
    },
    "TransactionTypes": {
      "type": "string",
      "description": "",
      "x-enumFlags": true,
      "x-enumNames": [
        "ChangeOfDestination",
        "SecondDraft",
        "ExpressRelease",
        "OriginalReRelease",
        "CorrectorForCustomerRequest"
      ],
      "enum": [
        "ChangeOfDestination",
        "SecondDraft",
        "ExpressRelease",
        "OriginalReRelease",
        "CorrectorForCustomerRequest"
      ]
    },
    "CargoWeightConditionDto": {
      "type": "object",
      "properties": {
        "minWeight": {
          "type": "number",
          "format": "decimal"
        },
        "maxWeight": {
          "type": "number",
          "format": "decimal"
        },
        "weightUnit": {
          "$ref": "#/definitions/WeightUnit"
        },
        "isTareIncluded": {
          "type": "boolean"
        }
      }
    },
    "WeightUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Kilogram",
        "Pound",
        "MetricTon",
        "ShortTon"
      ],
      "enum": [
        "Kilogram",
        "Pound",
        "MetricTon",
        "ShortTon"
      ]
    },
    "BillableCompanyConditionDto": {
      "type": "object",
      "properties": {
        "billableCompanyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        }
      }
    },
    "CustomerIdDto": {
      "type": "object",
      "required": [
        "isGroup",
        "customerId"
      ],
      "properties": {
        "isGroup": {
          "type": "boolean"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConsigneeConditionDto": {
      "type": "object",
      "properties": {
        "consigneeIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        }
      }
    },
    "CurrencyConditionDto": {
      "type": "object",
      "properties": {
        "freightCurrencyIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "CustomerGroupsConditionDto": {
      "type": "object",
      "properties": {
        "businessEntityGroupIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "OtherEquipmentSizeTypeConditionDto": {
      "type": "object",
      "properties": {
        "equipmentSizeTypeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "NotifyPartyConditionDto": {
      "type": "object",
      "properties": {
        "notifyPartyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        }
      }
    },
    "RateCardReferencesConditionDto": {
      "type": "object",
      "required": [
        "rateCardReferencesConditionType"
      ],
      "properties": {
        "rateCardRatesReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateCardReferencesConditionRatesDto"
          }
        },
        "rateCardReferencesConditionType": {
          "$ref": "#/definitions/RateCardReferencesConditionType"
        }
      }
    },
    "RateCardReferencesConditionRatesDto": {
      "type": "object",
      "required": [
        "rateCardId"
      ],
      "properties": {
        "rateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "freightRateReferences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RateCardReferencesConditionType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Specific",
        "TariffOnly",
        "ServiceContractOnly"
      ],
      "enum": [
        "Specific",
        "TariffOnly",
        "ServiceContractOnly"
      ]
    },
    "RateHolderConditionDto": {
      "type": "object",
      "properties": {
        "rateHolderIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        }
      }
    },
    "ShipperConditionDto": {
      "type": "object",
      "properties": {
        "shipperIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        }
      }
    },
    "AccessorialDangerousCargoConditionDto": {
      "type": "object",
      "required": [
        "conditionType",
        "isSpecific"
      ],
      "properties": {
        "conditionType": {
          "$ref": "#/definitions/DangerousCargoConditionType"
        },
        "substanceIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "hazardClasses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSpecific": {
          "type": "boolean"
        }
      }
    },
    "DangerousCargoConditionType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Any",
        "SpecificClasses",
        "SpecificSubstances"
      ],
      "enum": [
        "Any",
        "SpecificClasses",
        "SpecificSubstances"
      ]
    },
    "FreightPaymentConditionDto": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "$ref": "#/definitions/PaymentMethods"
        },
        "paymentElsewhereAgencyIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "PaymentMethods": {
      "type": "string",
      "description": "",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Prepaid",
        "Collect",
        "Elsewhere"
      ],
      "enum": [
        "None",
        "Prepaid",
        "Collect",
        "Elsewhere"
      ]
    },
    "PackageTypeConditionDto": {
      "type": "object",
      "properties": {
        "packageTypeIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "CommodityConditionDto": {
      "type": "object",
      "properties": {
        "harmonizedSystemCodeIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "TransitConditionDto": {
      "type": "object",
      "properties": {
        "countryIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "CanalPassageConditionDto": {
      "type": "object",
      "required": [
        "canalPortId"
      ],
      "properties": {
        "canalPortId": {
          "type": "integer"
        }
      }
    },
    "ContainerOwnerConditionDto": {
      "type": "object",
      "properties": {
        "mscOwnedContainer": {
          "type": "boolean"
        },
        "shipperOwnedContainer": {
          "type": "boolean"
        }
      }
    },
    "HaulageTypeConditionDto": {
      "type": "object",
      "properties": {
        "merchantHaulageOnly": {
          "type": "boolean"
        },
        "carrierHaulageOnly": {
          "type": "boolean"
        }
      }
    },
    "AccessorialChargeRateApplicability": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AtOrigin",
        "AsFreight",
        "AtDestination"
      ],
      "enum": [
        "AtOrigin",
        "AsFreight",
        "AtDestination"
      ]
    },
    "AccessorialChargeRatePackageDto": {
      "type": "object",
      "required": [
        "accessorialChargeRatePackageId",
        "isDeleted"
      ],
      "properties": {
        "accessorialChargeRatePackageId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "accessorialChargeRateIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "AccessorialChargeRateHistoryQuery": {
      "type": "object",
      "properties": {
        "accessorialChargeRateQuery": {
          "description": "Information about the ACR the user inserted into the search form",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRateQuery"
            }
          ]
        },
        "ids": {
          "type": "array",
          "description": "List of history ids",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "status": {
          "type": "array",
          "description": "List of status we accept",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "AccessorialChargeRateQuery": {
      "type": "object",
      "description": "Query parameters used to filter the search of Accessorial Charge Rates",
      "required": [
        "maxResultCount",
        "includeDeleted"
      ],
      "properties": {
        "reference": {
          "type": "string",
          "description": "Reference of a specific ocean rate card to find."
        },
        "mdmChargeIds": {
          "type": "array",
          "description": "IDs of accessorial charge rates.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "portOfLoadingHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rate based on ports of loading.",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "portOfDischargeHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rate based on port of discharge.",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "containerSizeTypes": {
          "type": "array",
          "description": "Retrieve accessorial charge rate based on container size types. Empty list indicates any container.",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "validOn": {
          "type": "string",
          "description": "Date during which the ACR must be valid on.",
          "format": "date-time"
        },
        "calculationMethodValidOn": {
          "type": "string",
          "description": "Date during which the a calculation method within the ACR must be valid on.",
          "format": "date-time"
        },
        "originAreas": {
          "type": "array",
          "description": "List of Origin areas to which the resulting accessorial charge rates can apply.",
          "items": {
            "$ref": "#/definitions/GeographicalAreaDto"
          }
        },
        "destinationAreas": {
          "type": "array",
          "description": "List of Destination areas to which the resulting accessorial charge rates can apply.",
          "items": {
            "$ref": "#/definitions/GeographicalAreaDto"
          }
        },
        "originDryPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeographicalAreaDto"
          }
        },
        "destinationDryPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeographicalAreaDto"
          }
        },
        "currencyId": {
          "type": "integer",
          "description": "Identifier of the currency in which the amount is expressed.",
          "format": "int32"
        },
        "isEmpty": {
          "type": "boolean",
          "description": "Whether the equipment is empty."
        },
        "isDangerousCargo": {
          "type": "boolean",
          "description": "Whether the resulting accessorial charge rate has Dangerous Cargo."
        },
        "isOutOfGauge": {
          "type": "boolean",
          "description": "Whether the equipment is out of gauge."
        },
        "isShipperOwned": {
          "type": "boolean",
          "description": "Whether the equipment is owned by the shipper."
        },
        "nonOperatingReefersOnly": {
          "type": "boolean",
          "description": "Whether the containers are non operating."
        },
        "atDestination": {
          "type": "boolean",
          "description": "Whether the resulting accessorial charge rate has applicability as Destination."
        },
        "atOrigin": {
          "type": "boolean",
          "description": "Whether the resulting accessorial charge rate has applicability as Origin."
        },
        "asFreight": {
          "type": "boolean",
          "description": "Whether the resulting accessorial charge rate has applicability as AsFreight."
        },
        "updatedOn": {
          "type": "string",
          "description": "Type that the resulting accessorial charge rates must have.",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string",
          "description": "Type that the resulting accessorial charge rates must have."
        },
        "maxResultCount": {
          "type": "integer",
          "description": "Maximum number of results to return.",
          "format": "int32"
        },
        "includeDeleted": {
          "type": "boolean",
          "description": "Include deleted"
        },
        "chargeRetrievedType": {
          "description": "Type that the retrieved resulting accessorial charge rates.",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRetrievalType"
            }
          ]
        },
        "remarks": {
          "type": "string",
          "description": "Retrieve accessorial charge rate based on Remarks."
        },
        "selectedChargeStatus": {
          "type": "array",
          "description": "Retrieve accessorial charge rate based on Charge Status.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "calculationMethodStatuses": {
          "type": "array",
          "description": "Retrieve accessorial charge rate based on calculation method status.",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateStatus"
          }
        },
        "chargeConditionType": {
          "description": "Type that the condition resulting accessorial charge rates.",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRateConditionType"
            }
          ]
        },
        "isArbitrary": {
          "type": "boolean",
          "description": "To exclude arbitrary rates when it is false"
        }
      }
    },
    "GeographicalAreaDto": {
      "type": "object",
      "required": [
        "geographicalAreaType",
        "id"
      ],
      "properties": {
        "geographicalAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccessorialChargeRateStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Expired",
        "Active",
        "Future"
      ],
      "enum": [
        "Expired",
        "Active",
        "Future"
      ]
    },
    "AccessorialChargeRateConditionType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "WithConditions",
        "WithoutConditions"
      ],
      "enum": [
        "WithConditions",
        "WithoutConditions"
      ]
    },
    "AccessorialChargeRateHistoryImpactedRateCardDto": {
      "type": "object",
      "required": [
        "rateCardId",
        "rateCardStatus",
        "lastChangeTimestamp",
        "numberRatesToBeUpdated",
        "initialNumberOfRatesToBeUpdated",
        "impactedRateCardStatus"
      ],
      "properties": {
        "rateCardId": {
          "type": "integer",
          "description": "Entity Id.\n            ",
          "format": "int32"
        },
        "rateCardType": {
          "description": "The type of the ocean rate card.\n            ",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardType"
            }
          ]
        },
        "internalReference": {
          "type": "string",
          "description": "A system-defined reference.\n            "
        },
        "externalReference": {
          "type": "string",
          "description": "A user-defined reference.\n            "
        },
        "tariffTier": {
          "type": "integer",
          "description": "The tariff tier from which the rates will be applicable.\n            ",
          "format": "int32"
        },
        "publicationChannelIds": {
          "type": "array",
          "description": "The list of Ids Channels from which the rates will be published.\n            ",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "rateCardStatus": {
          "description": "Status of the rate card.\n            ",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardStatus"
            }
          ]
        },
        "validFrom": {
          "type": "string",
          "description": "Start date of the ocean rate card's validity period.",
          "format": "date"
        },
        "validUntil": {
          "type": "string",
          "description": "End date of the ocean rate card's validity period.",
          "format": "date"
        },
        "lastChangeTimestamp": {
          "type": "string",
          "description": "Date and time of last update",
          "format": "date-time"
        },
        "numberRatesToBeUpdated": {
          "type": "integer",
          "description": "Count of rates that are not refreshed in the card",
          "format": "int32"
        },
        "initialNumberOfRatesToBeUpdated": {
          "type": "integer",
          "description": "Initial Count of rates that are not refreshed in the card",
          "format": "int32"
        },
        "impactedRateCardStatus": {
          "description": "The status of the impacted rate card\n            ",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRateHistoryImpactedRateCardStatus"
            }
          ]
        }
      }
    },
    "OceanRateCardStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "InProgress",
        "Finalized"
      ],
      "enum": [
        "Draft",
        "InProgress",
        "Finalized"
      ]
    },
    "AccessorialChargeRateHistoryImpactedRateCardStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ToBeUpdated",
        "InProgress",
        "Updated"
      ],
      "enum": [
        "ToBeUpdated",
        "InProgress",
        "Updated"
      ]
    },
    "OperationResultDtoOfAccessorialChargeRatePackageDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/AccessorialChargeRatePackageDto"
        }
      }
    },
    "ValidationIssueDto": {
      "type": "object",
      "required": [
        "severity"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/ValidationSeverity"
        },
        "targetPath": {
          "type": "string"
        },
        "correlationId": {
          "type": "string",
          "format": "guid"
        },
        "defaultMessage": {
          "type": "string"
        },
        "messageFormatParameters": {
          "type": "array",
          "items": {}
        }
      }
    },
    "ValidationSeverity": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "Information",
        "Warning",
        "Error"
      ],
      "enum": [
        "None",
        "Information",
        "Warning",
        "Error"
      ]
    },
    "AccessorialPackageSummaryDto": {
      "type": "object",
      "required": [
        "accessorialChargeRatePackageId",
        "isDeleted"
      ],
      "properties": {
        "accessorialChargeRatePackageId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "accessorialChargeIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ApplicableAccessorialChargeRateGroupDtoV3": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableAccessorialChargeRateGroupConditionDtoV3"
          }
        },
        "accessorialChargeRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableAccessorialChargeRateDtoV3"
          }
        },
        "inlandRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableInlandChargeRateDto"
          }
        }
      }
    },
    "ApplicableAccessorialChargeRateGroupConditionDtoV3": {
      "type": "object",
      "required": [
        "cargoIsDangerous",
        "containerIsShipperOwned"
      ],
      "properties": {
        "portOfLoadingIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "portOfDischargeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "containerSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "originIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "originDryPortIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "destinationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "destinationDryPortIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "cargoIsDangerous": {
          "type": "boolean"
        },
        "containerIsShipperOwned": {
          "type": "boolean"
        }
      }
    },
    "ApplicableAccessorialChargeRateDtoV3": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableChargeRateBaseDto"
        },
        {
          "type": "object",
          "required": [
            "hasConditions"
          ],
          "properties": {
            "amountCalculations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AmountCalculationDto"
              }
            },
            "hasConditions": {
              "type": "boolean"
            },
            "conditions": {
              "$ref": "#/definitions/ApplicableAccessorialChargeRateConditionsDto"
            },
            "retrievalType": {
              "$ref": "#/definitions/AccessorialChargeRetrievalType"
            },
            "parentReference": {
              "type": "string"
            },
            "level": {
              "type": "integer",
              "format": "int32"
            },
            "printName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AmountCalculationDto": {
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/AmountCalculationMethodParametersDtoV3"
        },
        "validFrom": {
          "type": "string",
          "format": "date"
        },
        "validTo": {
          "type": "string",
          "format": "date"
        },
        "resultingAmount": {
          "type": "number",
          "format": "decimal"
        },
        "resultingCurrencyId": {
          "type": "integer"
        },
        "calculationDate": {
          "type": "string",
          "format": "date-time"
        },
        "conditionalResultingAmounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalCalculatedAmountDto"
          }
        }
      }
    },
    "AmountCalculationMethodParametersDtoV3": {
      "type": "object"
    },
    "ConditionalCalculatedAmountDto": {
      "type": "object",
      "required": [
        "amount",
        "containerSize"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "containerSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ApplicableAccessorialChargeRateConditionsDto": {
      "type": "object",
      "required": [
        "isConditionalBecauseOfChildrenConditions",
        "merchantHaulageOnly",
        "carrierHaulageOnly"
      ],
      "properties": {
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "minWeight": {
          "type": "number",
          "format": "decimal"
        },
        "maxWeight": {
          "type": "number",
          "format": "decimal"
        },
        "weightUnit": {
          "description": "Weight unit is always converted in kilogram (if a weight is present).",
          "allOf": [
            {
              "$ref": "#/definitions/WeightUnit"
            }
          ]
        },
        "canalPortId": {
          "type": "integer"
        },
        "originAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "originAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "destinationAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "destinationAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "originDryPortAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "originDryPortAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "destinationDryPortAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "destinationDryPortAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "isConditionalBecauseOfChildrenConditions": {
          "type": "boolean"
        },
        "merchantHaulageOnly": {
          "type": "boolean"
        },
        "carrierHaulageOnly": {
          "type": "boolean"
        },
        "dangerousSubstanceIds": {
          "type": "string"
        },
        "hazardClasses": {
          "type": "string"
        },
        "bookingSourceType": {
          "$ref": "#/definitions/BookingSourceType"
        },
        "shippingInstructionsSourceType": {
          "$ref": "#/definitions/ShippingInstructionsSourceType"
        }
      }
    },
    "ApplicableChargeRateBaseDto": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableAccessorialChargeRateDtoV1ToV3Base"
        },
        {
          "type": "object",
          "required": [
            "chargeCodeId",
            "isVatos"
          ],
          "properties": {
            "reference": {
              "type": "string"
            },
            "chargeCodeId": {
              "type": "integer",
              "format": "int32"
            },
            "paymentMethods": {
              "$ref": "#/definitions/PaymentMethods"
            },
            "agencyIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "isVatos": {
              "type": "boolean"
            },
            "isInvoicedAsAllInGroupName": {
              "type": "string"
            },
            "isInvoicedAsAllInGroupID": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "ApplicableAccessorialChargeRateDtoV1ToV3Base": {
      "type": "object",
      "required": [
        "group",
        "applicability",
        "isLocal",
        "applicabilityToFreightAmount",
        "isWaived"
      ],
      "properties": {
        "group": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "isLocal": {
          "type": "boolean"
        },
        "applicabilityToFreightAmount": {
          "$ref": "#/definitions/AccessorialChargeApplicabilityToOceanFreightRateAmount"
        },
        "isWaived": {
          "type": "boolean"
        },
        "isInvoicedAsAllIn": {
          "type": "boolean"
        }
      }
    },
    "AccessorialChargeApplicabilityToOceanFreightRateAmount": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "SubjectTo",
        "InclusiveOf"
      ],
      "enum": [
        "SubjectTo",
        "InclusiveOf"
      ]
    },
    "ApplicableInlandChargeRateDto": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableChargeRateBaseDto"
        },
        {
          "type": "object",
          "properties": {
            "currencyId": {
              "type": "integer"
            },
            "amount": {
              "type": "number",
              "format": "decimal"
            }
          }
        }
      ]
    },
    "ValidationIssue": {
      "type": "object",
      "required": [
        "severity",
        "correlationId",
        "isFailure"
      ],
      "properties": {
        "severity": {
          "$ref": "#/definitions/ValidationSeverity"
        },
        "targetPath": {
          "type": "string"
        },
        "correlationId": {
          "type": "string",
          "format": "guid"
        },
        "key": {
          "type": "string"
        },
        "defaultMessage": {
          "type": "string"
        },
        "messageFormatParameters": {
          "type": "array",
          "items": {}
        },
        "isFailure": {
          "type": "boolean"
        }
      }
    },
    "ApplicableAccessorialChargeRateQuery": {
      "type": "object",
      "description": "Query parameters for calling the stored procedure for retrieving applicable ACR",
      "required": [
        "isShipperOwnedAndDangerousCargo",
        "includeDefaultConditions"
      ],
      "properties": {
        "retrievalType": {
          "description": "Retrieve accessorial charge rates based on accessorial charge rate retrieval type, NULL means both.",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRetrievalType"
            }
          ]
        },
        "oceanRateCardId": {
          "type": "integer",
          "description": "ID of a specific ocean rate card to find.",
          "format": "int32"
        },
        "freightRateReference": {
          "type": "string",
          "description": "Reference of the freight rate."
        },
        "freightPricingRuleId": {
          "type": "integer",
          "description": "ID of a specific freight pricing rule to find.",
          "format": "int32"
        },
        "validAfter": {
          "type": "string",
          "description": "Min date of the accessorial charge rate's validity period.",
          "format": "date"
        },
        "validBefore": {
          "type": "string",
          "description": "Max date of the accessorial charge rate's validity period.",
          "format": "date"
        },
        "originHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rates based on origins (no origin means any)",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "originDryPortHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rates based on origin dry port locations (no origin means any)",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "portOfLoadingHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rates based on ports of loading.",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "portOfDischargeHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rates based on ports of discharge.",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "destinationHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rates based on destinations (no origin means any)",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "destinationDryPortHierarchies": {
          "type": "array",
          "description": "Retrieve accessorial charge rates based on destination dry port locations (no destination means any)",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "containerSizeTypes": {
          "type": "array",
          "description": "Identifiers for the type of container and a flag for not operating reefers.",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "dangerousSubstanceIds": {
          "type": "array",
          "description": "Specifies the DangerousSubstanceIds to fetch matching accessorial change rates",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "dangerousSubstanceClasses": {
          "type": "array",
          "description": "Specifies the hazard class codes to fetch matching accessorial change rates",
          "items": {
            "type": "string"
          }
        },
        "isOutOfGauge": {
          "type": "boolean",
          "description": "Whether the equipment is out of gauge."
        },
        "isShipperOwnedAndDangerousCargo": {
          "type": "boolean",
          "description": "Whether the shipper owned and dangerous Cargo."
        },
        "isShipperOwnedConditions": {
          "type": "array",
          "description": "Retrieve based on shipper owned equipment conditions.",
          "items": {
            "type": "boolean"
          }
        },
        "isDangerousCargoConditions": {
          "type": "array",
          "description": "Retrieve based on dangerous cargo conditions.",
          "items": {
            "type": "boolean"
          }
        },
        "includeDefaultConditions": {
          "type": "boolean",
          "description": "Search with default value for IsShipperOwned and IsDangerousCargo conditions."
        },
        "isEmpty": {
          "type": "boolean",
          "description": "Whether the equipment is empty."
        },
        "minWeightInKilograms": {
          "type": "number",
          "description": "Specifies min weight of the goods to be allowed",
          "format": "decimal"
        },
        "maxWeightInKilograms": {
          "type": "number",
          "description": "Specifies max weight of the goods to be allowed",
          "format": "decimal"
        },
        "currencyId": {
          "type": "integer",
          "description": "Identifier of the currency in which the amount is expressed.",
          "format": "int32"
        },
        "paymentMethods": {
          "type": "integer",
          "description": "Type of the payment method (0 = None, 1 = Prepaid, 2 = Collect, 4 = Elsewhere).",
          "format": "int32"
        },
        "atDestination": {
          "type": "boolean",
          "description": "Whether the resulting accessorial charge rate has applicability as Destination."
        },
        "atOrigin": {
          "type": "boolean",
          "description": "Whether the resulting accessorial charge rate has applicability as Origin."
        },
        "asFreight": {
          "type": "boolean",
          "description": "Whether the resulting accessorial charge rate has applicability as AsFreight."
        },
        "canalPortId": {
          "type": "integer",
          "description": "Identifier of the port of the canal passage of the rate."
        },
        "freightChargeCodeId": {
          "type": "integer",
          "description": "Identifier of the FRT charge code.",
          "format": "int32"
        },
        "cargoValue": {
          "type": "number",
          "description": "Identifier of the value of cargo .",
          "format": "decimal"
        },
        "cargoValueCurrencyId": {
          "type": "integer",
          "description": "Identifier of the cargo value currency."
        }
      }
    },
    "OceanRateCardSummaryDto": {
      "type": "object",
      "required": [
        "id",
        "type",
        "isMultiTrade",
        "isGlobalAccount",
        "status",
        "rateCount",
        "lastChangeAuthorId",
        "lastChangeTimestamp"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean rate card.",
          "format": "int32"
        },
        "type": {
          "description": "Type of the ocean rate card (0 = SVC/RA, 1 = Tariff, 2 = Special Quote).",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardType"
            }
          ]
        },
        "externalReference": {
          "type": "string",
          "description": "User-defined external reference."
        },
        "internalReference": {
          "type": "string",
          "description": "System-defined unique internal reference."
        },
        "tier1InternalReference": {
          "type": "string",
          "description": "Internal reference of the tier 1 tariff to which this ocean rate card is related."
        },
        "tariffTier": {
          "type": "integer",
          "description": "Tariff tier to which this ocean rate card applies.",
          "format": "int32"
        },
        "isMultiTrade": {
          "type": "boolean",
          "description": "Whether this ocean rate card is multi-trade."
        },
        "isGlobalAccount": {
          "type": "boolean",
          "description": "Whether this ocean rate card is for a global account."
        },
        "status": {
          "description": "Status of the ocean rate card (0 = Draft, 1 = In Progress, 2 = Finalized).",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardStatus"
            }
          ]
        },
        "validFrom": {
          "type": "string",
          "description": "Start date of the ocean rate card's validity period.",
          "format": "date"
        },
        "validUntil": {
          "type": "string",
          "description": "End date of the ocean rate card's validity period.",
          "format": "date"
        },
        "rateCount": {
          "type": "integer",
          "description": "Number of rates in the ocean rate card.",
          "format": "int32"
        },
        "customerIds": {
          "type": "array",
          "description": "IDs of customers to which this rate card applies.",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        },
        "namedAccountBaskets": {
          "type": "array",
          "description": "Named account baskets to which this rate card applies.",
          "items": {
            "$ref": "#/definitions/NamedAccountBasketDto"
          }
        },
        "lastChangeAuthorId": {
          "type": "integer",
          "description": "Last updater of rate",
          "format": "int32"
        },
        "lastChangeTimestamp": {
          "type": "string",
          "description": "Date and time of last update",
          "format": "date-time"
        },
        "publicationChannelIds": {
          "type": "array",
          "description": "IDs of Publication Channel to which this rate card applies.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "publicationChannel": {
          "type": "string",
          "description": "Whether the rate applies to a Publication Channel."
        },
        "oceanRateCardCategoryId": {
          "type": "integer",
          "description": "Unique identifier of the ocean rate card category",
          "format": "byte"
        }
      }
    },
    "NamedAccountBasketDto": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedAccountBasketDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id",
            "namedAccountCount"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "namedAccountCount": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "NamedAccountBasketDtoBase": {
      "type": "object",
      "required": [
        "namedAccountCardId",
        "updatedOn",
        "updatedBy",
        "internalReference",
        "isDeleted"
      ],
      "properties": {
        "namedAccountCardId": {
          "type": "integer",
          "description": "Identifier of Named Account Card",
          "format": "int32"
        },
        "namedAccountCard": {
          "description": "Details of NamedAccountCard",
          "allOf": [
            {
              "$ref": "#/definitions/NamedAccountCardDto"
            }
          ]
        },
        "updatedOn": {
          "type": "string",
          "description": "Date and time when the basket is Last updated",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "integer",
          "description": "UserId of the person who updates the basket recently\n            ",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Unique name of the basket"
        },
        "internalReference": {
          "type": "integer",
          "description": "Internal identifier of the basket"
        },
        "namedAccounts": {
          "type": "array",
          "description": "Collection of NamedAccounts inside the basket",
          "items": {
            "$ref": "#/definitions/NamedAccountDto"
          }
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets or sets true whether the basket is deleted or not"
        }
      }
    },
    "NamedAccountCardDto": {
      "type": "object",
      "required": [
        "id",
        "isDeleted",
        "lastUpdatedBy",
        "lastUpdatedOn"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier of Named Account Card",
          "format": "int32"
        },
        "internalReference": {
          "type": "string",
          "description": "Reference of Named Account Card to which the resulting Named Account rate card can apply."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Whether the customer has group."
        },
        "lastUpdatedBy": {
          "type": "integer",
          "description": "Id of user that last update the card",
          "format": "int32"
        },
        "lastUpdatedOn": {
          "type": "string",
          "description": "Last date time modification of this card",
          "format": "date-time"
        },
        "customers": {
          "type": "array",
          "description": "Identifier of Named Account Card Customer",
          "items": {
            "$ref": "#/definitions/NamedAccountCardCustomerDto"
          }
        },
        "namedAccountBaskets": {
          "type": "array",
          "description": "Identifier of Named Account Card Baskets",
          "items": {
            "$ref": "#/definitions/NamedAccountBasketDto"
          }
        }
      }
    },
    "NamedAccountCardCustomerDto": {
      "type": "object",
      "required": [
        "namedAccountCardId",
        "isGroup",
        "customerId"
      ],
      "properties": {
        "namedAccountCardId": {
          "type": "integer",
          "description": "Unique identifier of Named Account Card Customer",
          "format": "int32"
        },
        "isGroup": {
          "type": "boolean",
          "description": "Whether the customer has group."
        },
        "customerId": {
          "type": "integer",
          "description": "Whether the customer has group.",
          "format": "int32"
        }
      }
    },
    "NamedAccountDto": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedAccountDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "NamedAccountDtoBase": {
      "type": "object",
      "required": [
        "namedAccountBasketId",
        "customerId",
        "isGroup",
        "validFrom",
        "updatedOn",
        "isDeleted",
        "requestedBy",
        "requestedOn",
        "lastChangeAuthorId"
      ],
      "properties": {
        "namedAccountBasketId": {
          "type": "integer",
          "description": "Id of Named Account Basket.",
          "format": "int32"
        },
        "namedAccountBasket": {
          "description": "Defines the Named Account Basket details.",
          "allOf": [
            {
              "$ref": "#/definitions/NamedAccountBasketDto"
            }
          ]
        },
        "customerId": {
          "type": "integer",
          "description": "Id of Customer.",
          "format": "int32"
        },
        "isGroup": {
          "type": "boolean",
          "description": "Whether the customer has group."
        },
        "validFrom": {
          "type": "string",
          "description": "Min date of Named Account.",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "description": "Max date of Named Account.",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string",
          "description": "email of the customer."
        },
        "updatedOn": {
          "type": "string",
          "description": "Named account added date.",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Indicate if this named account is deleted"
        },
        "requestedBy": {
          "type": "integer",
          "description": "Requested of the customer.",
          "format": "int32"
        },
        "requestedOn": {
          "type": "string",
          "description": "Named account reqested date.",
          "format": "date-time"
        },
        "lastChangeAuthorId": {
          "type": "integer",
          "description": "Id of user that last update the named account.",
          "format": "int32"
        }
      }
    },
    "ArbitraryAccessorialChargeRateDto": {
      "type": "object",
      "required": [
        "arbitraryRateCardId",
        "accessorialChargeRateId"
      ],
      "properties": {
        "arbitraryRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "arbitraryRateCard": {
          "$ref": "#/definitions/ArbitraryRateCardDto"
        },
        "accessorialChargeRateId": {
          "type": "integer",
          "format": "int32"
        },
        "accessorialChargeRate": {
          "$ref": "#/definitions/AccessorialChargeRateDto"
        }
      }
    },
    "ArbitraryRateCardDto": {
      "allOf": [
        {
          "$ref": "#/definitions/ArbitraryRateCardDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "internalReference": {
              "type": "string",
              "description": "Reference automatically generated."
            }
          }
        }
      ]
    },
    "ArbitraryRateCardDtoBase": {
      "type": "object",
      "description": "Arbitrary rate card base class",
      "required": [
        "accessorialChargeId",
        "applicability",
        "lastChangeAuthorId",
        "lastChangeTimestamp"
      ],
      "properties": {
        "externalReference": {
          "type": "string",
          "description": "A user-defined reference."
        },
        "accessorialChargeId": {
          "type": "integer",
          "description": "Identifier of the arbitrary accessorial charge.",
          "format": "int32"
        },
        "type": {
          "description": "The type of the ocean rate card.",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardType"
            }
          ]
        },
        "group": {
          "description": "Group of the arbitrary rate card.",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRateGroup"
            }
          ]
        },
        "applicability": {
          "description": "Applicability of the arbitrary rate card.",
          "allOf": [
            {
              "$ref": "#/definitions/ArbitraryRateCardApplicability"
            }
          ]
        },
        "originGeographicalAreas": {
          "type": "array",
          "description": "List of origins from where the arbitrary rates are valid.",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateOriginDto"
          }
        },
        "originExclusionGeographicalAreas": {
          "type": "array",
          "description": "List of origins from where the arbitrary rates are not valid.",
          "items": {
            "$ref": "#/definitions/ArbitraryRateCardOriginExclusionDto"
          }
        },
        "destinationGeographicalAreas": {
          "type": "array",
          "description": "List of destinations to where the arbitrary rates are valid.",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateDestinationDto"
          }
        },
        "destinationExclusionGeographicalAreas": {
          "type": "array",
          "description": "List of destinations to where the arbitrary rates are not valid.",
          "items": {
            "$ref": "#/definitions/ArbitraryRateCardDestinationExclusionDto"
          }
        },
        "lastChangeAuthorId": {
          "type": "integer",
          "description": "Last person to update the ArbitraryRateCard",
          "format": "int32"
        },
        "lastChangeTimestamp": {
          "type": "string",
          "description": "Date and time of last update of the ArbitraryRateCard",
          "format": "date-time"
        },
        "accessorialChargeIds": {
          "type": "array",
          "description": "List of accessorial charge ids.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "conditions": {
          "description": "The conditions.",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
            }
          ]
        }
      }
    },
    "AccessorialChargeRateGroup": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Ocean",
        "Intermodal",
        "ContainerRental"
      ],
      "enum": [
        "Ocean",
        "Intermodal",
        "ContainerRental"
      ]
    },
    "ArbitraryRateCardApplicability": {
      "type": "string",
      "description": "Applicability for transport additional",
      "x-enumNames": [
        "TransportAdditionalOrigin",
        "TransportAdditionalDestination"
      ],
      "enum": [
        "TransportAdditionalOrigin",
        "TransportAdditionalDestination"
      ]
    },
    "ArbitraryRateCardOriginExclusionDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "ArbitraryRateCardDestinationExclusionDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeRateDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id",
            "isDeleted",
            "accessorialChargeId",
            "level"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique numerical identifier of the accessorial charge rate.",
              "format": "int32"
            },
            "isDeleted": {
              "type": "boolean",
              "description": "Whether this rate is deleted."
            },
            "accessorialChargeId": {
              "type": "integer",
              "description": "Unique numerical identifier of the accessorial charge.",
              "format": "int32"
            },
            "internalReference": {
              "type": "string",
              "description": "System-defined unique internal reference."
            },
            "level": {
              "type": "integer",
              "description": "Level to which this accessorial charge rate applies.",
              "format": "int32"
            },
            "inheritedValidFrom": {
              "type": "string",
              "description": "Start date of the accessorial charge rate validity period.",
              "format": "date-time"
            },
            "inheritedValidTo": {
              "type": "string",
              "description": "End date of the accessorial charge rate validity period.",
              "format": "date-time"
            },
            "inheritedGeographicalInclusions": {
              "type": "array",
              "description": "Specifies parent geographical inclusions of accessorial charge rate.",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateGeographicalInclusionDto"
              }
            },
            "inheritedGeographicalExclusions": {
              "type": "array",
              "description": "Specifies parent geographical exclusions of accessorial charge rate.",
              "items": {
                "$ref": "#/definitions/AccessorialChargeRateGeographicalExclusionDto"
              }
            },
            "effectiveConditions": {
              "description": "Specifies Actual conditions of accessorial charge rate .",
              "allOf": [
                {
                  "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
                }
              ]
            },
            "inheritedConditions": {
              "description": "Specifies inherited conditions of accessorial charge rate .",
              "allOf": [
                {
                  "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
                }
              ]
            },
            "inheritedAmountCalculationMethods": {
              "type": "array",
              "description": "Specifies the inherited calculation method of accessorial charge rate.",
              "items": {
                "$ref": "#/definitions/AmountCalculationMethodDto"
              }
            },
            "effectiveAmountCalculationMethods": {
              "type": "array",
              "description": "Specifies the Actual calculation method of accessorial charge rate.",
              "items": {
                "$ref": "#/definitions/AmountCalculationMethodDto"
              }
            }
          }
        }
      ]
    },
    "AmountCalculationMethodDto": {
      "type": "object",
      "required": [
        "amountCalculationMethodId"
      ],
      "properties": {
        "amountCalculationMethodId": {
          "type": "integer",
          "format": "int32"
        },
        "validityPeriod": {
          "$ref": "#/definitions/TimePeriodDto"
        }
      }
    },
    "TimePeriodDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccessorialChargeRateDtoBase": {
      "type": "object",
      "required": [
        "geographicalScopeType"
      ],
      "properties": {
        "conditions": {
          "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
        },
        "package": {
          "$ref": "#/definitions/AccessorialChargeRatePackageDto"
        },
        "accessorialChargeRatePackageId": {
          "type": "integer",
          "format": "int32"
        },
        "dtxChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "printName": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "isAllInclusive": {
          "type": "boolean"
        },
        "isAllInclusiveMandatory": {
          "type": "boolean"
        },
        "isAllInclusiveVisible": {
          "type": "boolean"
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "remarks": {
          "type": "string"
        },
        "isArbitrary": {
          "type": "boolean"
        },
        "isVisibleOnBl": {
          "type": "boolean"
        },
        "isVisibleOnManifest": {
          "type": "boolean"
        },
        "isVisibleToAgencies": {
          "type": "boolean"
        },
        "scopeOfVisibilityToAgencies": {
          "$ref": "#/definitions/VisibilityToAgenciesScope"
        },
        "specificAgencyIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "containerSizeTypeIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "geographicalInclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalInclusionDto"
          }
        },
        "geographicalExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalExclusionDto"
          }
        },
        "isLocal": {
          "type": "boolean"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeRateGroup"
        },
        "amountDefinition": {
          "$ref": "#/definitions/AmountDefinitionDto"
        },
        "retrievalType": {
          "$ref": "#/definitions/AccessorialChargeRetrievalType"
        },
        "geographicalScopeType": {
          "$ref": "#/definitions/GeographicalScopeType"
        },
        "geographicalInlandAndOceanType": {
          "$ref": "#/definitions/GeographicalInlandAndOceanType"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedUsername": {
          "type": "string"
        },
        "sapCode": {
          "type": "string"
        }
      }
    },
    "VisibilityToAgenciesScope": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "All",
        "Specific"
      ],
      "enum": [
        "All",
        "Specific"
      ]
    },
    "AmountDefinitionDto": {
      "type": "object"
    },
    "GeographicalScopeType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Worldwide",
        "Ocean",
        "InlandAndOcean"
      ],
      "enum": [
        "Worldwide",
        "Ocean",
        "InlandAndOcean"
      ]
    },
    "GeographicalInlandAndOceanType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "IsWithOrigin",
        "IsWithDestination"
      ],
      "enum": [
        "IsWithOrigin",
        "IsWithDestination"
      ]
    },
    "ArbitraryRateQuery": {
      "type": "object",
      "description": "A query class for the arbitrary rates.",
      "required": [
        "arbitraryRateCardId",
        "includeInlandTariffRates",
        "pageSize",
        "pageIndex",
        "forValidationOnly"
      ],
      "properties": {
        "arbitraryRateCardId": {
          "type": "integer",
          "description": "Identifier of ArbitraryRateCard",
          "format": "int32"
        },
        "includeInlandTariffRates": {
          "type": "boolean",
          "description": "Whether Inland tariff rates to be included or not"
        },
        "accessorialChargeRateQuery": {
          "description": "Query parameters used to filter the search of Accessorial Charge Rates",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRateQuery"
            }
          ]
        },
        "pageSize": {
          "type": "integer",
          "description": "Number of freight pricing rules to return.",
          "format": "int32"
        },
        "pageIndex": {
          "type": "integer",
          "description": "Index of page.",
          "format": "int32"
        },
        "forValidationOnly": {
          "type": "boolean",
          "description": "Whether rates are fetched only for validation"
        },
        "arbitraryRateIdsToExclude": {
          "type": "array",
          "description": "Collection of arbitrary rate ids to exclude from the query result.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ArbitraryAccessorialChargeRateValidityRangeDto": {
      "type": "object",
      "properties": {
        "validFrom": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UpdateArbitraryAccessorialChargeRateValidToResultDto": {
      "type": "object",
      "required": [
        "accessorialChargeRateId",
        "isSuccessful"
      ],
      "properties": {
        "accessorialChargeRateId": {
          "type": "integer",
          "format": "int32"
        },
        "isSuccessful": {
          "type": "boolean"
        }
      }
    },
    "CloseFoundArbitraryAccessorialChargeRateCommandDto": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/ArbitraryRateQuery"
        },
        "closingDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ArbitraryRateCardSummaryDto": {
      "allOf": [
        {
          "$ref": "#/definitions/ArbitraryRateCardDto"
        },
        {
          "type": "object",
          "required": [
            "containsRatesWithShipperOwnedEquipmentOnly",
            "containsRatesWithMscOwnedContainerOnly",
            "containsRatesWithEmptyEquipmentOnly",
            "containsRatesWithOutOfGaugeEquipmentOnly",
            "containsRatesWithCollectPaymentOnly",
            "containsRatesWithCarrierHaulageOnly",
            "containsRatesWithMerchantHaulageOnly",
            "containsRatesWithDestinationAgency",
            "containsRatesWithElsewherePaymentAgency",
            "containsRatesWithManifestingAgency",
            "containsRatesWithBookingSourceType",
            "containsRatesWithPricingRecordInitialOriginatingSystem",
            "containsRatesWithShippingInstructionsSourceType",
            "containsRatesWithCargoWeightCondition",
            "containsRatesWithBillableCompanyCondition",
            "containsRatesWithConsigneeCondition",
            "containsRatesWithCurrencyCondition",
            "containsRatesWithCustomerGroupsCondition",
            "containsRatesWithOtherEquipmentSizeTypeCondition",
            "containsRatesWithNotifyPartyCondition",
            "containsRatesWithRateCardReferencesCondition",
            "containsRatesWithRateHolderCondition",
            "containsRatesWithShipperCondition",
            "containsRatesWithFreightPaymentCondition",
            "containsRatesWithPackageTypeCondition",
            "containsRatesWithCommodityCondition",
            "containsRatesWithTransitCondition",
            "containsRatesWithCanalPassageCondition",
            "containsRatesWithTransactionTypes",
            "containsRatesWithDangerousSubstance",
            "containsRatesWithHazardClass"
          ],
          "properties": {
            "earliestValidFrom": {
              "type": "string",
              "format": "date-time"
            },
            "latestValidTo": {
              "type": "string",
              "format": "date-time"
            },
            "containsRatesWithShipperOwnedEquipmentOnly": {
              "type": "boolean"
            },
            "containsRatesWithMscOwnedContainerOnly": {
              "type": "boolean"
            },
            "containsRatesWithEmptyEquipmentOnly": {
              "type": "boolean"
            },
            "containsRatesWithOutOfGaugeEquipmentOnly": {
              "type": "boolean"
            },
            "containsRatesWithCollectPaymentOnly": {
              "type": "boolean"
            },
            "containsRatesWithCarrierHaulageOnly": {
              "type": "boolean"
            },
            "containsRatesWithMerchantHaulageOnly": {
              "type": "boolean"
            },
            "containsRatesWithDestinationAgency": {
              "type": "boolean"
            },
            "containsRatesWithElsewherePaymentAgency": {
              "type": "boolean"
            },
            "containsRatesWithManifestingAgency": {
              "type": "boolean"
            },
            "containsRatesWithBookingSourceType": {
              "type": "boolean"
            },
            "containsRatesWithPricingRecordInitialOriginatingSystem": {
              "type": "boolean"
            },
            "containsRatesWithShippingInstructionsSourceType": {
              "type": "boolean"
            },
            "containsRatesWithCargoWeightCondition": {
              "type": "boolean"
            },
            "containsRatesWithBillableCompanyCondition": {
              "type": "boolean"
            },
            "containsRatesWithConsigneeCondition": {
              "type": "boolean"
            },
            "containsRatesWithCurrencyCondition": {
              "type": "boolean"
            },
            "containsRatesWithCustomerGroupsCondition": {
              "type": "boolean"
            },
            "containsRatesWithOtherEquipmentSizeTypeCondition": {
              "type": "boolean"
            },
            "containsRatesWithNotifyPartyCondition": {
              "type": "boolean"
            },
            "containsRatesWithRateCardReferencesCondition": {
              "type": "boolean"
            },
            "containsRatesWithRateHolderCondition": {
              "type": "boolean"
            },
            "containsRatesWithShipperCondition": {
              "type": "boolean"
            },
            "containsRatesWithFreightPaymentCondition": {
              "type": "boolean"
            },
            "containsRatesWithPackageTypeCondition": {
              "type": "boolean"
            },
            "containsRatesWithCommodityCondition": {
              "type": "boolean"
            },
            "containsRatesWithTransitCondition": {
              "type": "boolean"
            },
            "containsRatesWithCanalPassageCondition": {
              "type": "boolean"
            },
            "containsRatesWithTransactionTypes": {
              "type": "boolean"
            },
            "containsRatesWithDangerousSubstance": {
              "type": "boolean"
            },
            "containsRatesWithHazardClass": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "CreateOrUpdateArbitraryRateCardDto": {
      "allOf": [
        {
          "$ref": "#/definitions/ArbitraryRateCardDtoBase"
        },
        {
          "type": "object",
          "properties": {
            "mdmChargeAggregateDto": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/MdmChargeAggregateDto"
              }
            }
          }
        }
      ]
    },
    "MdmChargeAggregateDto": {
      "type": "object",
      "required": [
        "accessorialChargeId"
      ],
      "properties": {
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ForeignAggregateDetail": {
      "type": "object",
      "properties": {
        "objectName": {
          "type": "string"
        },
        "primaryKeyColumnName": {
          "type": "string"
        },
        "primaryKeyValue": {
          "type": "string"
        },
        "identifyingColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentifyingColumn"
          }
        }
      }
    },
    "IdentifyingColumn": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "columnValue": {
          "type": "string"
        }
      }
    },
    "FreightRateAccessorialChargeRuleDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateAccessorialChargeRuleConditionDto"
          }
        },
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateAccessorialChargeConfigurationDto"
          }
        },
        "inlandConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InlandFreightRateAccessorialChargeConfigurationDto"
          }
        }
      }
    },
    "FreightRateAccessorialChargeRuleConditionDto": {
      "type": "object",
      "required": [
        "isShipperOwned",
        "isDangerousCargo"
      ],
      "properties": {
        "portOfLoadingIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "portOfDischargeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "containerSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "originIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "destinationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "originDryPortIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "destinationDryPortIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "isShipperOwned": {
          "type": "boolean"
        },
        "isDangerousCargo": {
          "type": "boolean"
        }
      }
    },
    "FreightRateAccessorialChargeConfigurationDto": {
      "type": "object",
      "required": [
        "id",
        "accessorialChargeRateId",
        "mdmChargeId",
        "group",
        "applicability",
        "isLocal",
        "applicabilityToFreightAmount",
        "isWaived",
        "isInvoicedAsAllIn",
        "isStillConditional",
        "isVatos",
        "isOverriden",
        "isArbitrary"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "accessorialChargeRateId": {
          "type": "integer",
          "format": "int32"
        },
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "rateInternalReference": {
          "type": "string"
        },
        "parentReference": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "isLocal": {
          "type": "boolean"
        },
        "applicabilityToFreightAmount": {
          "$ref": "#/definitions/AccessorialChargeApplicabilityToOceanFreightRateAmount"
        },
        "isWaived": {
          "type": "boolean"
        },
        "isInvoicedAsAllIn": {
          "type": "boolean"
        },
        "paymentMethods": {
          "description": "A value indicating which payment methods are allowed.",
          "allOf": [
            {
              "$ref": "#/definitions/PaymentMethods"
            }
          ]
        },
        "agencyIds": {
          "type": "array",
          "description": "Identifiers of the agencies through which to pay \"elsewhere\".",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "calculationMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountCalculationMethodDto"
          }
        },
        "isStillConditional": {
          "type": "boolean"
        },
        "remainingConditions": {
          "$ref": "#/definitions/FreightRateAccessorialChargeConfigurationRemainingConditionsDto"
        },
        "negotiatedAccessorialChargeRate": {
          "$ref": "#/definitions/NegotiatedAccessorialChargeRateDto"
        },
        "isVatos": {
          "type": "boolean"
        },
        "isOverriden": {
          "type": "boolean",
          "description": "Indicates if we should inherit from header"
        },
        "isArbitrary": {
          "type": "boolean"
        },
        "isInvoicedAsAllInGroupID": {
          "type": "integer",
          "format": "int32"
        },
        "isInvoicedAsAllInGroupName": {
          "type": "string"
        },
        "accessorialChargeRatePackage": {
          "$ref": "#/definitions/AccessorialChargeRatePackageDto"
        }
      }
    },
    "FreightRateAccessorialChargeConfigurationRemainingConditionsDto": {
      "type": "object",
      "required": [
        "isConditionalBecauseOfChildrenConditions",
        "merchantHaulageOnly",
        "carrierHaulageOnly"
      ],
      "properties": {
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "minWeight": {
          "type": "number",
          "format": "decimal"
        },
        "maxWeight": {
          "type": "number",
          "format": "decimal"
        },
        "canalPortId": {
          "type": "integer"
        },
        "originAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "originAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "destinationAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "destinationAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "originDryPortAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "originDryPortAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "destinationDryPortAreaId": {
          "type": "integer",
          "format": "int32"
        },
        "destinationDryPortAreaType": {
          "$ref": "#/definitions/GeographicalAreaType"
        },
        "isConditionalBecauseOfChildrenConditions": {
          "type": "boolean"
        },
        "merchantHaulageOnly": {
          "type": "boolean"
        },
        "carrierHaulageOnly": {
          "type": "boolean"
        },
        "dangerousSubstanceIds": {
          "type": "string"
        },
        "hazardClasses": {
          "type": "string"
        },
        "bookingSourceType": {
          "$ref": "#/definitions/BookingSourceType"
        },
        "shippingInstructionsSourceType": {
          "$ref": "#/definitions/ShippingInstructionsSourceType"
        }
      }
    },
    "NegotiatedAccessorialChargeRateDto": {
      "type": "object",
      "required": [
        "amount",
        "currencyId"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "chargeLevel": {
          "$ref": "#/definitions/ChargeLevel"
        },
        "currencyId": {
          "type": "integer"
        }
      }
    },
    "ChargeLevel": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Equipment",
        "BillOfLading",
        "Teu",
        "SlotLoss",
        "Shifting"
      ],
      "enum": [
        "Equipment",
        "BillOfLading",
        "Teu",
        "SlotLoss",
        "Shifting"
      ]
    },
    "InlandFreightRateAccessorialChargeConfigurationDto": {
      "type": "object",
      "required": [
        "freightRateAccessorialChargeRuleId",
        "id",
        "isWaived",
        "isInvoicedAsAllIn",
        "paymentMethods",
        "applicabilityToFreightRate",
        "mdmChargeId",
        "applicability",
        "group",
        "isVatos"
      ],
      "properties": {
        "freightRateAccessorialChargeRuleId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isWaived": {
          "type": "boolean"
        },
        "isInvoicedAsAllIn": {
          "type": "boolean"
        },
        "paymentMethods": {
          "$ref": "#/definitions/PaymentMethods"
        },
        "applicabilityToFreightRate": {
          "$ref": "#/definitions/AccessorialChargeApplicabilityToOceanFreightRateAmount"
        },
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeRateGroup"
        },
        "isVatos": {
          "type": "boolean"
        },
        "currencyId": {
          "type": "integer"
        },
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "paymentMethodAgencyId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OceanRateCardAccessorialChargeConfigurationDto": {
      "type": "object",
      "required": [
        "accessorialChargeId",
        "mdmChargeId",
        "group",
        "applicability",
        "applicabilityToFreightAmount",
        "isWaived",
        "isLocal",
        "isInvoicedAsAllIn",
        "isArbitrary"
      ],
      "properties": {
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "applicabilityToFreightAmount": {
          "$ref": "#/definitions/AccessorialChargeApplicabilityToOceanFreightRateAmount"
        },
        "isWaived": {
          "type": "boolean"
        },
        "isLocal": {
          "type": "boolean"
        },
        "isInvoicedAsAllIn": {
          "type": "boolean"
        },
        "paymentMethods": {
          "$ref": "#/definitions/PaymentMethods"
        },
        "agencyIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "negotiatedAccessorialChargeRate": {
          "$ref": "#/definitions/NegotiatedAccessorialChargeRateDto"
        },
        "isArbitrary": {
          "type": "boolean"
        },
        "accessorialChargeRatePackage": {
          "$ref": "#/definitions/AccessorialChargeRatePackageDto"
        }
      }
    },
    "UpdateRuleStatusDto": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "BackgroundTaskDto": {
      "type": "object",
      "required": [
        "status",
        "userId",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BackgroundTaskStatus"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "linkedObjectId": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/BackgroundTaskTypes"
        },
        "stepName": {
          "type": "string"
        }
      }
    },
    "BackgroundTaskStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Pending",
        "InProgress",
        "InError",
        "Done",
        "Canceled"
      ],
      "enum": [
        "Pending",
        "InProgress",
        "InError",
        "Done",
        "Canceled"
      ]
    },
    "BackgroundTaskTypes": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "RefreshAccessorialChargeRates",
        "ImportExcel",
        "PublishabilityCheck",
        "Publish",
        "OceanRatesExcelExport",
        "OceanRateCardsExcelExport",
        "MdmDataSynchronizer"
      ],
      "enum": [
        "RefreshAccessorialChargeRates",
        "ImportExcel",
        "PublishabilityCheck",
        "Publish",
        "OceanRatesExcelExport",
        "OceanRateCardsExcelExport",
        "MdmDataSynchronizer"
      ]
    },
    "CreateBackgroundTaskDto": {
      "type": "object",
      "required": [
        "linkedObjectId",
        "type"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "linkedObjectId": {
          "type": "integer",
          "format": "int32"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackgroundTaskParameterDto"
          }
        },
        "type": {
          "$ref": "#/definitions/BackgroundTaskTypes"
        }
      }
    },
    "BackgroundTaskParameterDto": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ImpactedRuleDto": {
      "type": "object",
      "required": [
        "oceanRateCardType",
        "numberOfCards",
        "numberOfRates"
      ],
      "properties": {
        "oceanRateCardType": {
          "$ref": "#/definitions/OceanRateCardType"
        },
        "numberOfCards": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfRates": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NamedAccountBasketQuery": {
      "type": "object",
      "description": "Query parameters used to filter the search of Named Account Basket.",
      "required": [
        "namedAccountCardId",
        "namedAccountBasketId",
        "includeDeleted",
        "includeExpired",
        "namedAccountPageSize"
      ],
      "properties": {
        "basketName": {
          "type": "string",
          "description": "Name of the Named Account Basket"
        },
        "basketCode": {
          "type": "string",
          "description": "Code of the Named Account Basket, AKA NAC Code is InternalReference"
        },
        "holderCode": {
          "type": "string",
          "description": "Code of the Named Account Card, is InternalReference"
        },
        "namedAccountCardId": {
          "type": "integer",
          "description": "Named Account Card Id of Baskets",
          "format": "int32"
        },
        "namedAccountBasketId": {
          "type": "integer",
          "description": "Named Account Basket Id of Named Account",
          "format": "int32"
        },
        "namedAccountCustomerIds": {
          "type": "array",
          "description": "Customer ids of Named Account",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "includeDeleted": {
          "type": "boolean",
          "description": "whether named account deleted or not"
        },
        "includeExpired": {
          "type": "boolean",
          "description": "whether named account expired or not"
        },
        "basketCodes": {
          "type": "array",
          "description": "List of Code the Named Account Basket, AKA NAC Code is InternalReference",
          "items": {
            "type": "string"
          }
        },
        "namedAccountPageSize": {
          "type": "integer",
          "description": "Named Account page size",
          "format": "int32"
        },
        "validOn": {
          "type": "string",
          "description": "Date during which the Named Account must be valid on.",
          "format": "date-time"
        },
        "lastUpdatedOn": {
          "type": "string",
          "description": "Date during which the Named Account must be last modified.",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "integer",
          "description": "ID during which the Named Account must be last modified by.",
          "format": "int32"
        },
        "rateHolderIds": {
          "type": "array",
          "description": "Customer Or Group ids of Named Account card",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        }
      }
    },
    "CreateOrUpdateNamedAccountBasketDto": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedAccountBasketDtoBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "NamedAccountBasketSearchDto": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "integer",
          "description": "ID of Rate Holder Customer.",
          "format": "int32"
        },
        "namedAccountBasketName": {
          "type": "string",
          "description": "Name of Named Account Basket."
        },
        "updatedBy": {
          "type": "string",
          "description": "Email of the customer."
        }
      }
    },
    "NamedAccountCardSummaryDto": {
      "type": "object",
      "required": [
        "id",
        "isDeleted",
        "lastUpdatedBy",
        "lastUpdatedOn",
        "basketCount",
        "namedAccountCount"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier of Named Account Card",
          "format": "int32"
        },
        "internalReference": {
          "type": "string",
          "description": "Reference of Named Account Card to which the resulting Named Account rate card can apply."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Whether the customer has group."
        },
        "lastUpdatedBy": {
          "type": "integer",
          "description": "Id of user that last update the card",
          "format": "int32"
        },
        "lastUpdatedOn": {
          "type": "string",
          "description": "Last date time modification of this card",
          "format": "date-time"
        },
        "customers": {
          "type": "array",
          "description": "Identifier of Named Account Card Customer",
          "items": {
            "$ref": "#/definitions/NamedAccountCardCustomerDto"
          }
        },
        "basketCount": {
          "type": "integer",
          "description": "Identifier to count of baskets",
          "format": "int32"
        },
        "namedAccountCount": {
          "type": "integer",
          "description": "Identifier to count of named account",
          "format": "int32"
        }
      }
    },
    "ApplicableOceanFreightRateDto": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableOceanFreightRateDtoV1ToV2Base"
        },
        {
          "type": "object",
          "properties": {
            "equipmentSizeAndTypeIds": {
              "type": "array",
              "description": "Identifiers for the type of equipment.",
              "items": {
                "type": "integer"
              }
            },
            "equipmentIsNonOperatingReefer": {
              "type": "boolean",
              "description": "Whether the equipment is a reefer that is not operating."
            },
            "accessorialChargeConfigurationGroups": {
              "type": "array",
              "description": "Accessorial Charge Configuration Groups.",
              "items": {
                "$ref": "#/definitions/ApplicableAccessorialChargeRateGroupDto"
              }
            }
          }
        }
      ]
    },
    "ApplicableAccessorialChargeRateGroupDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableAccessorialChargeRateGroupConditionDto"
          }
        },
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableAccessorialChargeRateDto"
          }
        }
      }
    },
    "ApplicableAccessorialChargeRateGroupConditionDto": {
      "type": "object",
      "required": [
        "portOfLoadingId",
        "portOfDischargeId"
      ],
      "properties": {
        "portOfLoadingId": {
          "type": "integer"
        },
        "portOfDischargeId": {
          "type": "integer"
        },
        "equipmentSizeTypeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "ApplicableAccessorialChargeRateDto": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableAccessorialChargeRateDtoV1ToV2Base"
        },
        {
          "type": "object"
        }
      ]
    },
    "ApplicableAccessorialChargeRateDtoV1ToV2Base": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableAccessorialChargeRateDtoV1ToV3Base"
        },
        {
          "type": "object",
          "required": [
            "oceanFreightAccessorialChargeConfigurationId",
            "applicableRateId",
            "mdmChargeId",
            "isApplicabilityToFreightAmountOverridden"
          ],
          "properties": {
            "oceanFreightAccessorialChargeConfigurationId": {
              "type": "integer",
              "format": "int32"
            },
            "applicableRateId": {
              "type": "integer",
              "format": "int32"
            },
            "mdmChargeId": {
              "type": "integer",
              "format": "int32"
            },
            "rateInternalReference": {
              "type": "string"
            },
            "isApplicabilityToFreightAmountOverridden": {
              "type": "boolean"
            },
            "calculationMethods": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AmountCalculationMethodParametersDto"
              }
            }
          }
        }
      ]
    },
    "AmountCalculationMethodParametersDto": {
      "type": "object",
      "required": [
        "amountCalculationMethodId"
      ],
      "properties": {
        "amountCalculationMethodId": {
          "type": "integer",
          "format": "int32"
        },
        "validityPeriod": {
          "$ref": "#/definitions/TimePeriodDto"
        }
      }
    },
    "ApplicableOceanFreightRateDtoV1ToV2Base": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableOceanFreightRateDtoV1ToV3Base"
        },
        {
          "type": "object",
          "required": [
            "rateCardType",
            "equipmentIsShipperOwned",
            "equipmentIsEmpty",
            "isDangerousCargo"
          ],
          "properties": {
            "oceanFreightRateReference": {
              "type": "string",
              "description": "System-defined unique internal reference."
            },
            "rateCardType": {
              "type": "integer",
              "description": "Type of the ocean rate card (0 = SVC/RA, 1 = Tariff, 2 = Special Quote).",
              "format": "int32"
            },
            "tierLevel": {
              "type": "integer",
              "description": "Level of tier to which this ocean rate card applies.",
              "format": "int32"
            },
            "customerIds": {
              "type": "array",
              "description": "Identifiers of customers to which the rate applies, or empty if it applies to any customer.",
              "items": {
                "$ref": "#/definitions/CustomerIdDto"
              }
            },
            "equipmentIsShipperOwned": {
              "type": "boolean",
              "description": "Whether the equipment is owned by the shipper."
            },
            "equipmentIsEmpty": {
              "type": "boolean",
              "description": "Whether the equipment is empty."
            },
            "isDangerousCargo": {
              "type": "boolean",
              "description": "Whether the resulting ocean rate card has Dangerous Cargo."
            },
            "dangerousCargoIds": {
              "type": "array",
              "description": "IDs of dangerous cargo to which the resulting ocean rate cards can apply.",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "weightUnit": {
              "description": "Weight/Mass unit for Equipment.",
              "allOf": [
                {
                  "$ref": "#/definitions/WeightUnitV1"
                }
              ]
            },
            "publicationChannelIds": {
              "type": "array",
              "description": "Whether the resulting accessorial charge rate type is local.",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "vesselIds": {
              "type": "array",
              "description": "IDs of vessels to which the resulting ocean rate cards can apply.",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      ]
    },
    "WeightUnitV1": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Kilogram",
        "Pound",
        "MetricTon",
        "ImperialTon"
      ],
      "enum": [
        "Kilogram",
        "Pound",
        "MetricTon",
        "ImperialTon"
      ]
    },
    "ApplicableOceanFreightRateDtoV1ToV3Base": {
      "type": "object",
      "required": [
        "amount",
        "currencyId",
        "amountIsAllIn",
        "paymentMethods"
      ],
      "properties": {
        "portOfLoadingIds": {
          "type": "array",
          "description": "Identifiers of the ports of loading to which the rate applies.",
          "items": {
            "type": "integer"
          }
        },
        "portOfDischargeIds": {
          "type": "array",
          "description": "Identifiers of the ports of discharge to which the rate applies.",
          "items": {
            "type": "integer"
          }
        },
        "minWeight": {
          "type": "number",
          "description": "Minimum mass/weight of the cargo to which the rate applies.",
          "format": "decimal"
        },
        "maxWeight": {
          "type": "number",
          "description": "Maximum mass/weight of the cargo to which the rate applies.",
          "format": "decimal"
        },
        "commodityHarmonizedSystemCodeIds": {
          "type": "array",
          "description": "Identifiers of Harmonized System codes of commodities to which the rate applies.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "commodityHarmonizedSystemCodeExcludedIds": {
          "type": "array",
          "description": "Identifiers of Harmonized System codes of commodities to which the rate is excluded.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "amount": {
          "type": "number",
          "description": "Amount of the rate, that is charged for the freight.",
          "format": "decimal"
        },
        "currencyId": {
          "type": "integer",
          "description": "Identifier of the currency in which the amount is expressed."
        },
        "amountIsAllIn": {
          "type": "boolean",
          "description": "Whether the rate's amount is all-in."
        },
        "paymentMethods": {
          "description": "Payment methods to which the rate applies.",
          "allOf": [
            {
              "$ref": "#/definitions/PaymentMethods"
            }
          ]
        },
        "paymentMethodsAgenciesIds": {
          "type": "array",
          "description": "Payment methods agencies ids to which the rate applies.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "validFrom": {
          "type": "string",
          "description": "Start date of the ocean rate card's validity period.",
          "format": "date"
        },
        "validTo": {
          "type": "string",
          "description": "End date of the ocean rate card's validity period.",
          "format": "date"
        }
      }
    },
    "FreightPricingRuleDto": {
      "allOf": [
        {
          "$ref": "#/definitions/FreightPricingRuleBaseDto"
        },
        {
          "type": "object",
          "description": "Represents a rule for pricing ocean freight that implies the rate when a set of conditions are met.",
          "required": [
            "id",
            "isDeleted",
            "versionNumber",
            "lastChangeAuthorId",
            "lastChangeTimestamp",
            "isLatestVersion"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "A unique identifier of this rule.",
              "format": "int32"
            },
            "isDeleted": {
              "type": "boolean",
              "description": "A value indicating whether this rule has been deleted."
            },
            "status": {
              "description": "Indicate the status of the rule.",
              "allOf": [
                {
                  "$ref": "#/definitions/RateStatus"
                }
              ]
            },
            "versionNumber": {
              "type": "integer",
              "description": "Version number of the freight pricing rule"
            },
            "lastChangeAuthorId": {
              "type": "integer",
              "description": "The author of the last change to this rule.",
              "format": "int32"
            },
            "lastChangeTimestamp": {
              "type": "string",
              "description": "The date and time of the last change to this rule.",
              "format": "date-time"
            },
            "latestState": {
              "description": "The details of the latest state of this rule.",
              "allOf": [
                {
                  "$ref": "#/definitions/FreightPricingRuleStateDto"
                }
              ]
            },
            "isLatestVersion": {
              "type": "boolean",
              "description": "A value indicating whether this rule is the latest version."
            }
          }
        }
      ]
    },
    "RateStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "Published",
        "Deleted",
        "Expired",
        "Rejected"
      ],
      "enum": [
        "Draft",
        "Published",
        "Deleted",
        "Expired",
        "Rejected"
      ]
    },
    "FreightPricingRuleStateDto": {
      "type": "object",
      "required": [
        "state",
        "userId",
        "changeTimestamp"
      ],
      "properties": {
        "state": {
          "description": "Indicate the status of the rule.",
          "allOf": [
            {
              "$ref": "#/definitions/FreightPricingRuleStatus"
            }
          ]
        },
        "userId": {
          "type": "integer",
          "description": "The author of the change of state.",
          "format": "int32"
        },
        "changeTimestamp": {
          "type": "string",
          "description": "The date and time of the change of state.",
          "format": "date-time"
        },
        "comment": {
          "type": "string",
          "description": "The comment on the change of state."
        }
      }
    },
    "FreightPricingRuleStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "Submitted",
        "RejectedFromSubmitted",
        "Published",
        "Approved",
        "RejectedFromPublished",
        "Deleted"
      ],
      "enum": [
        "Draft",
        "Submitted",
        "RejectedFromSubmitted",
        "Published",
        "Approved",
        "RejectedFromPublished",
        "Deleted"
      ]
    },
    "FreightPricingRuleBaseDto": {
      "type": "object",
      "description": "Represents a rule for pricing ocean freight that implies the rate when a set of conditions are met.",
      "required": [
        "oceanRateCardId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "description": "ID of the rate card to which the rule is belonging. Need to be moved to UpdateFreightPricingRuleDto and FreightPricingRuleDto",
          "format": "int32"
        },
        "conditions": {
          "description": "The conditions to be met for the rate to apply.",
          "allOf": [
            {
              "$ref": "#/definitions/FreightPricingRuleConditionsDto"
            }
          ]
        },
        "rate": {
          "description": "The rate that applies when the conditions are met.",
          "allOf": [
            {
              "$ref": "#/definitions/FreightRateDto"
            }
          ]
        }
      }
    },
    "FreightPricingRuleConditionsDto": {
      "type": "object",
      "required": [
        "quotingChannelsAreInherited"
      ],
      "properties": {
        "freightEntry": {
          "description": "The freight entry that must be matched for the rate to apply.",
          "allOf": [
            {
              "$ref": "#/definitions/FreightEntryDto"
            }
          ]
        },
        "quotingChannelsAreInherited": {
          "type": "boolean",
          "description": "A value indicating whether the quoting channel condition is inherited from the rate card."
        },
        "quotingChannelIds": {
          "type": "array",
          "description": "Identifiers of channels through one of which the quoting must happen for the rate to apply.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "quotingPeriod": {
          "description": "The period during which the quoting must happen for the rate to apply.",
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriodDto"
            }
          ]
        },
        "bookingPeriod": {
          "description": "The period during which the booking must happen for the rate to apply.",
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriodDto"
            }
          ]
        },
        "shippingPeriod": {
          "description": "The period during which the shipping must happen for the rate to apply.",
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriodDto"
            }
          ]
        },
        "departureSpecification": {
          "description": "Identifiers of vessels on one of which the cargo must be loaded for the rate to apply.",
          "allOf": [
            {
              "$ref": "#/definitions/DepartureSpecificationDto"
            }
          ]
        }
      }
    },
    "FreightEntryDto": {
      "type": "object",
      "description": "Represents the set of conditions to which a freight pricing rule can be applied.",
      "required": [
        "id",
        "routeId",
        "overHeight",
        "overLeft",
        "overRight",
        "overFore",
        "overBack",
        "quotationRateId",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "routeId": {
          "type": "integer",
          "format": "int32"
        },
        "routingId": {
          "type": "integer",
          "format": "int32"
        },
        "portOfLoadingIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "portOfDischargeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "portOfLoadingGroup": {
          "$ref": "#/definitions/PortGroupDto"
        },
        "portOfDischargeGroup": {
          "$ref": "#/definitions/PortGroupDto"
        },
        "equipmentSizeAndTypes": {
          "type": "array",
          "description": "Types of equipment.",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "equipmentSizeTypeGroup": {
          "$ref": "#/definitions/EquipmentSizeTypeGroupDto"
        },
        "equipmentIsShipperOwned": {
          "type": "boolean",
          "description": "Whether the equipment is owned by the shipper."
        },
        "equipmentIsEmpty": {
          "type": "boolean",
          "description": "Whether the equipment is empty."
        },
        "dangerousCargoCondition": {
          "description": "Whether the cargo contains dangerous goods",
          "allOf": [
            {
              "$ref": "#/definitions/DangerousCargoConditionDto"
            }
          ]
        },
        "commodityHarmonizedSystemCodeIds": {
          "type": "array",
          "description": "Commodity harmonized system code ids.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "excludedCommodityHarmonizedSystemCodeIds": {
          "type": "array",
          "description": "Excluded commodity harmonized system code ids.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "originShippingMethodId": {
          "type": "integer",
          "format": "int32"
        },
        "originInlandLegs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InlandLegDto"
          }
        },
        "originInlandLegDryPortIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "destinationShippingMethodId": {
          "type": "integer",
          "format": "int32"
        },
        "destinationInlandLegs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InlandLegDto"
          }
        },
        "destinationInlandLegDryPortIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "originTransportationModeId": {
          "type": "integer",
          "format": "byte"
        },
        "destinationTransportationModeId": {
          "type": "integer",
          "format": "byte"
        },
        "carriageModeId": {
          "type": "integer",
          "format": "int32"
        },
        "maritimeServiceId": {
          "type": "integer",
          "format": "int32"
        },
        "canalPortId": {
          "type": "integer"
        },
        "weightUnit": {
          "$ref": "#/definitions/WeightUnit"
        },
        "minWeight": {
          "type": "number",
          "format": "decimal"
        },
        "maxWeight": {
          "type": "number",
          "format": "decimal"
        },
        "lengthUnit": {
          "$ref": "#/definitions/LengthUnit"
        },
        "overHeight": {
          "type": "number",
          "format": "decimal"
        },
        "overLeft": {
          "type": "number",
          "format": "decimal"
        },
        "overRight": {
          "type": "number",
          "format": "decimal"
        },
        "overFore": {
          "type": "number",
          "format": "decimal"
        },
        "overBack": {
          "type": "number",
          "format": "decimal"
        },
        "temperature": {
          "type": "number",
          "format": "decimal"
        },
        "minTemperature": {
          "type": "number",
          "format": "decimal"
        },
        "maxTemperature": {
          "type": "number",
          "format": "decimal"
        },
        "temperatureUnit": {
          "$ref": "#/definitions/TemperatureUnit"
        },
        "quotationRateId": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/FreightEntryType"
        }
      }
    },
    "EquipmentSizeTypeGroupDto": {
      "type": "object",
      "description": "Data Transfer Object for the EquipmentSizeTypeGroup object",
      "required": [
        "id",
        "isDeleted"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Entity Id.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Equipment group name."
        },
        "containerSizeTypes": {
          "type": "array",
          "description": "List of equipments (EquipmentId and a flag indicating if is non operating reefer).",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Indicated if is logically deleted."
        }
      }
    },
    "DangerousCargoConditionDto": {
      "type": "object",
      "properties": {
        "substanceIds": {
          "type": "array",
          "description": "Identifiers for the identities of dangerous goods.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "hazardClasses": {
          "type": "array",
          "description": "Codes of the hazard classes to which certain substances belong to.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InlandLegDto": {
      "type": "object",
      "required": [
        "locationId"
      ],
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "zipCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LengthUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Cm",
        "Inch"
      ],
      "enum": [
        "Cm",
        "Inch"
      ]
    },
    "TemperatureUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Celsius",
        "Fahrenheit"
      ],
      "enum": [
        "Celsius",
        "Fahrenheit"
      ]
    },
    "FreightEntryType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Ocean",
        "InlandOrigin",
        "InlandDestination",
        "ArbitraryOrigin",
        "ArbitraryDestination"
      ],
      "enum": [
        "Ocean",
        "InlandOrigin",
        "InlandDestination",
        "ArbitraryOrigin",
        "ArbitraryDestination"
      ]
    },
    "DepartureSpecificationDto": {
      "type": "object",
      "description": "Departure specification for the freight pricing rule",
      "properties": {
        "loadingVesselIds": {
          "type": "array",
          "description": "Identifiers of vessels on one of which the cargo must be loaded for the rate to apply.",
          "items": {
            "type": "integer"
          }
        },
        "voyageId": {
          "type": "integer",
          "description": "Identifier of the voyage that the cargo must take for the rate to apply."
        },
        "callNumber": {
          "type": "integer",
          "description": "Number of the call to the port of loading for which the rate applies."
        },
        "sailingDate": {
          "type": "string",
          "description": "Date at which the loading vessel must start sailing for the rate to apply.",
          "format": "date-time"
        }
      }
    },
    "FreightRateDto": {
      "type": "object",
      "required": [
        "currencyId",
        "currencyConversionIsAllowedForInvoicing",
        "isAllIn",
        "paymentMethods",
        "freightRateConfigurationId"
      ],
      "properties": {
        "reference": {
          "type": "string",
          "description": "A value that can be used to reference the rate uniquely from outside systems."
        },
        "amount": {
          "type": "number",
          "description": "The amount of the rate.",
          "format": "decimal"
        },
        "currencyId": {
          "type": "integer",
          "description": "The currency in which the amount is expressed."
        },
        "accessorialChargeRuleset": {
          "description": "The set of rules pertaining to accessorial charges that must be considered when the rate applies.",
          "allOf": [
            {
              "$ref": "#/definitions/FreightRateAccessorialChargeRulesetDto"
            }
          ]
        },
        "numberOfDaysUntilQuoteExpiration": {
          "type": "integer",
          "description": "The number of days until a quote of this rate expires,\ni.e. the number of days during which a customer is entitled to this rate after receiving it through a quote.",
          "format": "byte"
        },
        "currencyConversionIsAllowedForInvoicing": {
          "type": "boolean",
          "description": "A value indicating whether the amount can be converted to another currency for invoicing."
        },
        "isAllIn": {
          "type": "boolean",
          "description": "A value indicating whether this rate is all-in,\ni.e. whether it covers not only the ocean freight but also all the charges to move the cargo from its origin to its destination."
        },
        "paymentMethods": {
          "description": "The methods of payment that will be accepted to settle the invoice carrying this rate.",
          "allOf": [
            {
              "$ref": "#/definitions/PaymentMethods"
            }
          ]
        },
        "paymentElsewhereAgencyIds": {
          "type": "array",
          "description": "Locations where the rate is paid.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "extraServiceIds": {
          "type": "array",
          "description": "Identifiers of extra services to which paying this rate entitles.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "exportDemurrageFreeDayCount": {
          "type": "integer",
          "description": "The number of free days for export demurrage to which paying this rate entitles."
        },
        "detentionFreeDayCount": {
          "type": "integer",
          "description": "The number of free days for cargo detention to which paying this rate entitles."
        },
        "equipmentRentalFreeDayCount": {
          "type": "integer",
          "description": "The number of free days for equipment rental to which paying this rate entitles."
        },
        "freeReeferPluggedDayCount": {
          "type": "integer",
          "description": "The number of free reefer plugged days to which paying this rate entitles."
        },
        "containerRentalAllowances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerRentalAllowanceDto"
          }
        },
        "freightRateConfigurationId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FreightRateAccessorialChargeRulesetDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateAccessorialChargeRuleDto"
          }
        }
      }
    },
    "ContainerRentalAllowanceDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "equipmentTypeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "exportDemurrageFreeDayCount": {
          "type": "integer"
        },
        "detentionFreeDayCount": {
          "type": "integer"
        },
        "equipmentRentalFreeDayCount": {
          "type": "integer"
        }
      }
    },
    "DetailedPublishabilityCheckResultDto": {
      "allOf": [
        {
          "$ref": "#/definitions/PublishabilityCheckResultDto"
        },
        {
          "type": "object",
          "description": "Detailed result of the test to know if a rule can be published.",
          "properties": {
            "overlappingRateReferences": {
              "type": "array",
              "description": "Gets the overlapping rate references.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PublishabilityCheckResultDto": {
      "type": "object",
      "description": "Result of the test to know if a rule can be published.",
      "required": [
        "freightPricingRuleId",
        "canBePublished",
        "overlapOtherRules",
        "hasMissingAccessorialCharge",
        "hasMismatchingCurrency"
      ],
      "properties": {
        "freightPricingRuleId": {
          "type": "integer",
          "description": "Gets or sets the freight pricing rule id.",
          "format": "int32"
        },
        "canBePublished": {
          "type": "boolean",
          "description": "Gets a value indicating whether this instance can be published."
        },
        "overlapOtherRules": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the current rule id overlaps other rules."
        },
        "hasMissingAccessorialCharge": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this instance has missing accessorial charge."
        },
        "hasMismatchingCurrency": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this instance has at least one mismatching currency."
        }
      }
    },
    "UpdateFreightPricingRuleDto": {
      "allOf": [
        {
          "$ref": "#/definitions/FreightPricingRuleBaseDto"
        },
        {
          "type": "object",
          "description": "Represents a updated rule for pricing ocean freight that implies the rate when a set of conditions are met.",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "A unique identifier of this rule.",
              "format": "int32"
            },
            "harmonizedSystemCodes": {
              "type": "array",
              "description": "Contains harmonized system codes in use in this rule.",
              "items": {
                "$ref": "#/definitions/HarmonizedSystemCodeDto"
              }
            },
            "excludedHarmonizedSystemCodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HarmonizedSystemCodeDto"
              }
            }
          }
        }
      ]
    },
    "HarmonizedSystemCodeDto": {
      "type": "object",
      "required": [
        "harmonizedSystemCodeId"
      ],
      "properties": {
        "harmonizedSystemCodeId": {
          "type": "integer",
          "format": "int32"
        },
        "nomenclatureCode": {
          "type": "string"
        }
      }
    },
    "FreightPricingRuleQuery": {
      "type": "object",
      "description": "Query parameters to search for freight pricing rules.",
      "required": [
        "oceanRateCardId",
        "pageSize",
        "pageIndex",
        "includeDeleted",
        "includeExpired",
        "isListAllVersions",
        "isRatesWithNoAccessorial",
        "type"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "description": "Id of ocean rate card to which the resulting freight pricing rules can apply.",
          "format": "int32"
        },
        "reference": {
          "type": "string",
          "description": "Reference of ocean freight rate to which the resulting ocean freight rate can apply."
        },
        "portOfLoadingIds": {
          "type": "array",
          "description": "IDs of the port of loading to which the resulting freight pricing rules can apply.",
          "items": {
            "type": "integer"
          }
        },
        "portOfDischargeIds": {
          "type": "array",
          "description": "ID of the port of discharge to which the resulting freight pricing rules can apply.",
          "items": {
            "type": "integer"
          }
        },
        "originHierarchies": {
          "type": "array",
          "description": "IDs of the origin to which the resulting inland rates can apply.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "originDryPortsHierarchies": {
          "type": "array",
          "description": "IDs of the origin dry ports to which the resulting inland rates can apply.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "destinationHierarchies": {
          "type": "array",
          "description": "IDs of the destination to which the resulting inland rates can apply.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "destinationDryPortsHierarchies": {
          "type": "array",
          "description": "IDs of the destination dry ports to which the resulting inland rates can apply.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "originTransportationMode": {
          "type": "array",
          "description": "Indicate the origin transportation mode",
          "items": {
            "type": "integer",
            "format": "byte"
          }
        },
        "destinationTransportationMode": {
          "type": "array",
          "description": "Indicate the destination transportation mode",
          "items": {
            "type": "integer",
            "format": "byte"
          }
        },
        "containerSizeTypes": {
          "type": "array",
          "description": "Identifiers for the type  and size of containers.",
          "items": {
            "type": "integer"
          }
        },
        "validFrom": {
          "type": "string",
          "description": "Min date of the ocean rate cards validity period.",
          "format": "date"
        },
        "validTo": {
          "type": "string",
          "description": "Max date of the ocean rate cards validity period.",
          "format": "date"
        },
        "pageSize": {
          "type": "integer",
          "description": "Number of freight pricing rules to return.",
          "format": "int32"
        },
        "pageIndex": {
          "type": "integer",
          "description": "Index of page.",
          "format": "int32"
        },
        "includeDeleted": {
          "type": "boolean",
          "description": "Include deleted freight pricing rules."
        },
        "includeExpired": {
          "type": "boolean",
          "description": "Include expired freight pricing rules."
        },
        "isListAllVersions": {
          "type": "boolean",
          "description": "List of all versions of the rate."
        },
        "publishedOn": {
          "type": "string",
          "description": "PublishedOn date of the ocean rate cards falls within published periods.",
          "format": "date"
        },
        "freightPricingRuleStatuses": {
          "type": "array",
          "description": "List of selected ocean rate status.",
          "items": {
            "type": "integer"
          }
        },
        "isRatesWithNoAccessorial": {
          "type": "boolean",
          "description": "List all no accessorial rates."
        },
        "publicationChannelIds": {
          "type": "array",
          "description": "Whether the resulting ocean rate must fall in selected Publication channel type.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "type": {
          "description": "What type of rate are we looking for.",
          "allOf": [
            {
              "$ref": "#/definitions/FreightEntryType"
            }
          ]
        }
      }
    },
    "FreightRateReferenceDto": {
      "type": "object",
      "required": [
        "id",
        "oceanRateCardId",
        "freightEntryType"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "reference": {
          "type": "string"
        },
        "freightEntryType": {
          "$ref": "#/definitions/FreightEntryType"
        }
      }
    },
    "OperationResultDtoOfFreightPricingRuleDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/FreightPricingRuleDto"
        }
      }
    },
    "CreateFreightPricingRuleDto": {
      "allOf": [
        {
          "$ref": "#/definitions/FreightPricingRuleBaseDto"
        },
        {
          "type": "object",
          "description": "Represents a new rule for pricing ocean freight that implies the rate when a set of conditions are met.",
          "properties": {
            "harmonizedSystemCodes": {
              "type": "array",
              "description": "Contains harmonized system codes in use in this rule.",
              "items": {
                "$ref": "#/definitions/HarmonizedSystemCodeDto"
              }
            },
            "excludedHarmonizedSystemCodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HarmonizedSystemCodeDto"
              }
            }
          }
        }
      ]
    },
    "RefreshFreightPricingRulesConfigurationsCommand": {
      "type": "object",
      "required": [
        "freightChargeCodeId"
      ],
      "properties": {
        "geographicalAreaHierarchies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeographicalHierarchyDto"
          }
        },
        "ruleIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "freightChargeCodeId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OperationResultDtoOfDictionaryOfIntegerAndIReadOnlyCollectionOfString": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "OverlapCheckReason": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Save",
        "Publish",
        "PublishAll",
        "Fix",
        "ExcelAcrLoad"
      ],
      "enum": [
        "Save",
        "Publish",
        "PublishAll",
        "Fix",
        "ExcelAcrLoad"
      ]
    },
    "FreightPricingRuleStatusDto": {
      "type": "object",
      "required": [
        "hasDraftRule",
        "hasPublishedRule"
      ],
      "properties": {
        "hasDraftRule": {
          "type": "boolean",
          "description": "Indicates any one of the rule is draft."
        },
        "hasPublishedRule": {
          "type": "boolean",
          "description": "Indicates any one of the rule is published."
        }
      }
    },
    "CreateOrUpdateNamedAccountDto": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedAccountDtoBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "OceanRateCardContractVolumesDto": {
      "type": "object",
      "required": [
        "id",
        "oceanRateCardId",
        "lastUpdatedBy",
        "lastUpdatedOn",
        "isDeleted",
        "isSpecific",
        "frequency"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier of Ocean Rate Card Contract Volumes.",
          "format": "int32"
        },
        "oceanRateCardId": {
          "type": "integer",
          "description": "Id of Ocean Rate Card.",
          "format": "int32"
        },
        "validFrom": {
          "type": "string",
          "description": "Min date of Contract Volumes.",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "description": "Max date of Contract Volumes.",
          "format": "date-time"
        },
        "minQuantityCommitment20DryVolume": {
          "type": "integer",
          "description": "Minimum Quantity Commitment 20 Dry Volume of Contract Volumes.",
          "format": "int32"
        },
        "minQuantityCommitment40DryVolume": {
          "type": "integer",
          "description": "Minimum Quantity Commitment 40 Dry Volume of Contract Volumes.",
          "format": "int32"
        },
        "minQuantityCommitment20ReeferVolume": {
          "type": "integer",
          "description": "Minimum Quantity Commitment 20 Reefer Volume of Contract Volumes.",
          "format": "int32"
        },
        "minQuantityCommitment40ReeferVolume": {
          "type": "integer",
          "description": "Minimum Quantity Commitment 40 Reefer Volume of Contract Volumes.",
          "format": "int32"
        },
        "minQuantityCommitmentTeuDryVolume": {
          "type": "number",
          "description": "Minimum Quantity Commitment Teu Dry Volume of Contract Volumes.",
          "format": "decimal"
        },
        "minQuantityCommitmentTeuReeferVolume": {
          "type": "number",
          "description": "Minimum Quantity Commitment Teu Reefer Volume of Contract Volumes.",
          "format": "decimal"
        },
        "maxAllocationAgreement20DryVolume": {
          "type": "integer",
          "description": "Maximum Allocation Agreement 20 Dry Volume of Contract Volumes.",
          "format": "int32"
        },
        "maxAllocationAgreement20ReeferVolume": {
          "type": "integer",
          "description": "Maximum Allocation Agreement 20 Reefer Volume of Contract Volumes.",
          "format": "int32"
        },
        "maxAllocationAgreement40DryVolume": {
          "type": "integer",
          "description": "Maximum Allocation Agreement 40 Dry Volume of Contract Volumes.",
          "format": "int32"
        },
        "maxAllocationAgreement40ReeferVolume": {
          "type": "integer",
          "description": "Maximum Allocation Agreement 40 Reefer Volume of Contract Volumes.",
          "format": "int32"
        },
        "maxAllocationAgreementTeuDryVolume": {
          "type": "number",
          "description": "Maximum Allocation Agreement Teu Dry Volume of Contract Volumes.",
          "format": "decimal"
        },
        "maxAllocationAgreementTeuReeferVolume": {
          "type": "number",
          "description": "Maximum Allocation Agreement Teu Reefer Volume of Contract Volumes.",
          "format": "decimal"
        },
        "lastUpdatedBy": {
          "type": "integer",
          "description": "Id of user that last update the card",
          "format": "int32"
        },
        "lastUpdatedOn": {
          "type": "string",
          "description": "Last date time modification of this card",
          "format": "date-time"
        },
        "maxAllocationAgreementDrySymbol": {
          "description": "Maximum Allocation Agreement Dry Symbol of Contract Volumes.",
          "allOf": [
            {
              "$ref": "#/definitions/MaximumAllocationAgreementSymbol"
            }
          ]
        },
        "maxAllocationAgreementReeferSymbol": {
          "description": "Maximum Allocation Agreement Reefer Symbol of Contract Volumes.",
          "allOf": [
            {
              "$ref": "#/definitions/MaximumAllocationAgreementSymbol"
            }
          ]
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Contract Volumes for Delete."
        },
        "isSpecific": {
          "type": "boolean",
          "description": "Contract Volumes for is specific customers."
        },
        "references": {
          "type": "array",
          "description": "Contract Reference of Contract Volumes/&gt;.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumeReferenceDto"
          }
        },
        "origins": {
          "type": "array",
          "description": "Origin areas of Contract Volumes/&gt;.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumesOriginDto"
          }
        },
        "portOfLoadings": {
          "type": "array",
          "description": "Port Of Loading of Contract Volumes.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumesPortOfLoadingDto"
          }
        },
        "portOfDischarges": {
          "type": "array",
          "description": "Port Of Discharge of Contract Volumes.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumesPortOfDischargingDto"
          }
        },
        "destinations": {
          "type": "array",
          "description": "Destination areas of Contract Volumes.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumesDestinationDto"
          }
        },
        "fromRegion": {
          "type": "array",
          "description": "From Region of Contract Volumes.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumesFromRegionDto"
          }
        },
        "toRegion": {
          "type": "array",
          "description": "To Region of Contract Volumes.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumesToRegionDto"
          }
        },
        "customers": {
          "type": "array",
          "description": "Customers of Contract Volumes.",
          "items": {
            "$ref": "#/definitions/OceanRateCardContractVolumesCustomerDto"
          }
        },
        "namedAccountBaskets": {
          "type": "array",
          "description": "Named Accounts of Contract Volumes.",
          "items": {
            "$ref": "#/definitions/OceanRateCardVolumesCustomerNamedAccountBasketDto"
          }
        },
        "frequency": {
          "description": "Frequency of Contract Volumes.",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardContractVolumesFrequency"
            }
          ]
        },
        "oceanRateCardValidFrom": {
          "type": "string",
          "description": "Min date of OceanRateCard.",
          "format": "date-time"
        },
        "oceanRateCardValidTo": {
          "type": "string",
          "description": "Max date of OceanRateCard.",
          "format": "date-time"
        }
      }
    },
    "MaximumAllocationAgreementSymbol": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Fixed",
        "PlusOrMinus",
        "Percentage"
      ],
      "enum": [
        "Fixed",
        "PlusOrMinus",
        "Percentage"
      ]
    },
    "OceanRateCardContractVolumeReferenceDto": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "oceanRateCardContractVolumesId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "description": "Id of Ocean Rate Card.",
          "format": "int32"
        },
        "oceanRateCardContractVolumesId": {
          "type": "integer",
          "description": "OceanRateCardContractVolumesId of Ocean Rate Card.",
          "format": "int32"
        },
        "reference": {
          "type": "string",
          "description": "Reference for Volume Management."
        }
      }
    },
    "OceanRateCardContractVolumesOriginDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object",
          "required": [
            "oceanRateCardContractVolumesId",
            "oceanRateCardId"
          ],
          "properties": {
            "oceanRateCardContractVolumesId": {
              "type": "integer",
              "format": "int32"
            },
            "oceanRateCardId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "OceanRateCardContractVolumesPortOfLoadingDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object",
          "required": [
            "oceanRateCardId"
          ],
          "properties": {
            "oceanRateCardId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "OceanRateCardContractVolumesPortOfDischargingDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object",
          "required": [
            "oceanRateCardId"
          ],
          "properties": {
            "oceanRateCardId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "OceanRateCardContractVolumesDestinationDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalAreaDto"
        },
        {
          "type": "object",
          "required": [
            "oceanRateCardContractVolumesId",
            "oceanRateCardId"
          ],
          "properties": {
            "oceanRateCardContractVolumesId": {
              "type": "integer",
              "format": "int32"
            },
            "oceanRateCardId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "OceanRateCardContractVolumesFromRegionDto": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "regionId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "regionId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OceanRateCardContractVolumesToRegionDto": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "regionId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "regionId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OceanRateCardContractVolumesCustomerDto": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "isGroup",
        "customerId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "description": "Unique identifier of Ocean Rate Card",
          "format": "int32"
        },
        "isGroup": {
          "type": "boolean",
          "description": "Whether the customer has group."
        },
        "customerId": {
          "type": "integer",
          "description": "Unique identifier of Ocean Rate Card Customer",
          "format": "int32"
        }
      }
    },
    "OceanRateCardVolumesCustomerNamedAccountBasketDto": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "oceanRateCardContractVolumesId",
        "namedAccountBasketId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "oceanRateCardContractVolumesId": {
          "type": "integer",
          "format": "int32"
        },
        "namedAccountBasket": {
          "$ref": "#/definitions/NamedAccountBasketDto"
        },
        "namedAccountBasketId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OceanRateCardContractVolumesFrequency": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PerDuringContract",
        "PerWeek",
        "PerBiweek",
        "PerMonth",
        "PerQuarter",
        "PerHalfyearly",
        "PerYear"
      ],
      "enum": [
        "PerDuringContract",
        "PerWeek",
        "PerBiweek",
        "PerMonth",
        "PerQuarter",
        "PerHalfyearly",
        "PerYear"
      ]
    },
    "ContractVolumeValidatorQuery": {
      "allOf": [
        {
          "$ref": "#/definitions/OceanRateCardContractVolumesDto"
        },
        {
          "type": "object",
          "properties": {
            "portOfLoadingsHierarchyDto": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalHierarchyDto"
              }
            },
            "portOfDischargesHierarchyDto": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalHierarchyDto"
              }
            },
            "originsHierarchyDto": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalHierarchyDto"
              }
            },
            "destinationsHierarchyDto": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalHierarchyDto"
              }
            },
            "customersDto": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OceanRateCardCustomerDto"
              }
            }
          }
        }
      ]
    },
    "OceanRateCardCustomerDto": {
      "type": "object",
      "required": [
        "isGroup",
        "customerId",
        "basketId"
      ],
      "properties": {
        "isGroup": {
          "type": "boolean"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "basketId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VolumesCommitmentType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "All",
        "ContainsMQC",
        "ContainsMAA",
        "ContainsMQCAndMAA"
      ],
      "enum": [
        "All",
        "ContainsMQC",
        "ContainsMAA",
        "ContainsMQCAndMAA"
      ]
    },
    "EquipmentCategory": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "All",
        "Dry",
        "Reefer"
      ],
      "enum": [
        "All",
        "Dry",
        "Reefer"
      ]
    },
    "RateLoggingStatus": {
      "type": "object",
      "required": [
        "isRegistered",
        "isStarted",
        "isActive"
      ],
      "properties": {
        "isRegistered": {
          "type": "boolean"
        },
        "isStarted": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "RateRequest": {
      "type": "object",
      "required": [
        "rateRequestId",
        "requestDate",
        "portOfLoadingId",
        "portOfDischargeId",
        "equipmentSizeAndTypeId",
        "payloadId",
        "rateCardType"
      ],
      "properties": {
        "rateRequestId": {
          "type": "integer",
          "format": "int64"
        },
        "requestDate": {
          "type": "string",
          "format": "date-time"
        },
        "portOfLoadingId": {
          "type": "integer"
        },
        "portOfDischargeId": {
          "type": "integer"
        },
        "equipmentSizeAndTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "isCustomerGroup": {
          "type": "boolean"
        },
        "applicationId": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date"
        },
        "validTo": {
          "type": "string",
          "format": "date"
        },
        "payloadId": {
          "type": "integer",
          "format": "int64"
        },
        "oceanFreightRateReference": {
          "type": "string"
        },
        "rateCardType": {
          "$ref": "#/definitions/OceanRateCardType"
        }
      }
    },
    "FreightRateRetrievalQueryPayload": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "FreightRateRetrievalQuery": {
      "type": "object",
      "required": [
        "id",
        "businessReason",
        "timestamp",
        "elapsedMilliseconds"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "payloadId": {
          "type": "integer",
          "format": "int64"
        },
        "callingSystem": {
          "type": "string"
        },
        "callingUser": {
          "type": "string"
        },
        "businessReason": {
          "type": "integer",
          "format": "byte"
        },
        "url": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "elapsedMilliseconds": {
          "type": "integer",
          "format": "int32"
        },
        "payload": {
          "$ref": "#/definitions/FreightRateRetrievalQueryPayload"
        },
        "retrievedFreightRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetrievedFreightRate"
          }
        },
        "portsOfLoading": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateRetrievalQueryPortOfLoading"
          }
        },
        "portsOfDischarge": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateRetrievalQueryPortOfDischarge"
          }
        },
        "containerSizeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateRetrievalQueryContainerSizeType"
          }
        }
      }
    },
    "RetrievedFreightRate": {
      "type": "object",
      "required": [
        "id",
        "portOfLoadingId",
        "portOfDischargeId",
        "containerSizeAndTypeId",
        "validFrom",
        "rateCardType",
        "freightRateRetrievalQueryId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "portOfLoadingId": {
          "type": "integer"
        },
        "portOfDischargeId": {
          "type": "integer"
        },
        "containerSizeAndTypeId": {
          "type": "integer"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "isCustomerGroup": {
          "type": "boolean"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "oceanFreightRateReference": {
          "type": "string"
        },
        "rateCardType": {
          "$ref": "#/definitions/OceanRateCardType"
        },
        "freightRateRetrievalQueryId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FreightRateRetrievalQueryPortOfLoading": {
      "allOf": [
        {
          "$ref": "#/definitions/FreightRateRetrievalQueryPort"
        },
        {
          "type": "object"
        }
      ]
    },
    "FreightRateRetrievalQueryPort": {
      "type": "object",
      "required": [
        "freightRateRetrievalQueryId",
        "portId"
      ],
      "properties": {
        "freightRateRetrievalQueryId": {
          "type": "integer",
          "format": "int64"
        },
        "portId": {
          "type": "integer"
        }
      }
    },
    "FreightRateRetrievalQueryPortOfDischarge": {
      "allOf": [
        {
          "$ref": "#/definitions/FreightRateRetrievalQueryPort"
        },
        {
          "type": "object"
        }
      ]
    },
    "FreightRateRetrievalQueryContainerSizeType": {
      "type": "object",
      "required": [
        "freightRateRetrievalQueryId",
        "containerSizeTypeId",
        "isNonOperatingReefer"
      ],
      "properties": {
        "freightRateRetrievalQueryId": {
          "type": "integer",
          "format": "int64"
        },
        "containerSizeTypeId": {
          "type": "integer"
        },
        "isNonOperatingReefer": {
          "type": "boolean"
        }
      }
    },
    "ValueTupleOfShortAndShort": {
      "type": "object",
      "required": [
        "item1",
        "item2"
      ],
      "properties": {
        "item1": {
          "type": "integer"
        },
        "item2": {
          "type": "integer"
        }
      }
    },
    "ApplicableOceanFreightRateLogItemDto": {
      "type": "object",
      "required": [
        "elapsedMilliseconds"
      ],
      "properties": {
        "pcsPayload": {
          "type": "string"
        },
        "applicableOceanFreightRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableOceanFreightRateAndPayloadV3"
          }
        },
        "clientUri": {
          "type": "string",
          "format": "uri"
        },
        "requestUri": {
          "type": "string",
          "format": "uri"
        },
        "elapsedMilliseconds": {
          "type": "integer",
          "format": "int32"
        },
        "callingUser": {
          "type": "string"
        },
        "callingSystem": {
          "type": "string"
        },
        "reason": {
          "$ref": "#/definitions/ApplicableOceanFreightRateQueryReason"
        },
        "portOfLoadingIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "portOfDischargeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "containerSizeTypeIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "ApplicableOceanFreightRateAndPayloadV3": {
      "type": "object",
      "properties": {
        "applicableOceanFreightRate": {
          "$ref": "#/definitions/ApplicableOceanFreightRateDtoV3"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "ApplicableOceanFreightRateDtoV3": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicableOceanFreightRateDtoV1ToV3Base"
        },
        {
          "type": "object",
          "required": [
            "versionNumber",
            "rateCardType",
            "containerIsShipperOwned",
            "containerIsEmpty",
            "cargoIsDangerous",
            "voyageId",
            "originShipmentMethodId",
            "destinationShipmentMethodId"
          ],
          "properties": {
            "reference": {
              "type": "string",
              "description": "System-defined unique internal reference of the rate."
            },
            "versionNumber": {
              "type": "integer",
              "description": "Version number of the rate"
            },
            "externalReference": {
              "type": "string",
              "description": "System-defined unique external reference of the rate."
            },
            "rateCardType": {
              "description": "Type of the rate card to which the rate belongs.",
              "allOf": [
                {
                  "$ref": "#/definitions/OceanRateCardType"
                }
              ]
            },
            "tariffTier": {
              "type": "integer",
              "description": "Tier of the tariff rate card to which the rate belongs, if it belongs to one.",
              "format": "int32"
            },
            "publicationChannelIds": {
              "type": "array",
              "description": "Channels to which this rate is intended to be published.",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "rateHolderIds": {
              "type": "array",
              "description": "Identifiers of rate holders to which the rate applies, or empty if it applies to any rate holder.",
              "items": {
                "$ref": "#/definitions/CustomerIdDto"
              }
            },
            "containerSpecifications": {
              "type": "array",
              "description": "Identifiers of the container specifications to which the rate applies.",
              "items": {
                "$ref": "#/definitions/ContainerSpecificationDto"
              }
            },
            "containerIsShipperOwned": {
              "type": "boolean",
              "description": "Whether the rate applies to a container owned by the shipper."
            },
            "containerIsEmpty": {
              "type": "boolean",
              "description": "Whether the rate applies to an empty container."
            },
            "cargoIsDangerous": {
              "type": "boolean",
              "description": "Whether the rate applies to dangerous cargo."
            },
            "dangerousCargoSubstanceIds": {
              "type": "array",
              "description": "Identifiers of the dangerous substances to which the rate applies.",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "weightUnit": {
              "description": "Unit of the mass/weight of the cargo.",
              "allOf": [
                {
                  "$ref": "#/definitions/WeightUnit"
                }
              ]
            },
            "accessorialChargeRateGroups": {
              "type": "array",
              "description": "Groups of accessorial charge rates that may apply to the ocean freight rate.",
              "items": {
                "$ref": "#/definitions/ApplicableAccessorialChargeRateGroupDtoV3"
              }
            },
            "loadingVesselIds": {
              "type": "array",
              "description": "Identifiers of loading vessels to which the rate applies.",
              "items": {
                "type": "integer"
              }
            },
            "voyageId": {
              "type": "integer",
              "description": "Identifier of the voyage to which the rate applies.",
              "format": "int32"
            },
            "routeId": {
              "type": "integer",
              "description": "Identifier of the route to which the rate applies.",
              "format": "int32"
            },
            "originShipmentMethodId": {
              "description": "Identifier of the shipment method at origin to which the rate applies.",
              "allOf": [
                {
                  "$ref": "#/definitions/ShipmentMethodId"
                }
              ]
            },
            "destinationShipmentMethodId": {
              "description": "Identifier of the shipment method at destination to which the rate applies.",
              "allOf": [
                {
                  "$ref": "#/definitions/ShipmentMethodId"
                }
              ]
            },
            "origins": {
              "type": "array",
              "description": "Identifiers of origin locations.",
              "items": {
                "$ref": "#/definitions/InlandLegDto"
              }
            },
            "originTransportationModeId": {
              "type": "integer",
              "description": "Mode of transport from Origin",
              "format": "byte"
            },
            "originDryPortLocationIds": {
              "type": "array",
              "description": "Identifiers of origin dry port locations.",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "destinationDryPortLocationIds": {
              "type": "array",
              "description": "Identifiers of destination dry port locations.",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "destinations": {
              "type": "array",
              "description": "Identifiers of destination locations.",
              "items": {
                "$ref": "#/definitions/InlandLegDto"
              }
            },
            "destinationTransportationModeId": {
              "type": "integer",
              "description": "Mode of transport from Destination",
              "format": "byte"
            },
            "bookingPeriodStart": {
              "type": "string",
              "description": "Whether the rate applies to a booking period start.",
              "format": "date-time"
            },
            "bookingPeriodEnd": {
              "type": "string",
              "description": "Whether the rate applies to a booking period end.",
              "format": "date-time"
            },
            "quoteExpirationDate": {
              "type": "string",
              "description": "Date at which this quote of the rate will expire,\ni.e. the date until which a customer is entitled to the rate after receiving it through this quote.",
              "format": "date"
            },
            "numberOfDaysUntilQuoteExpiration": {
              "type": "integer",
              "description": "Whether the rate applies to a NumberOfDays Until QuoteExpiration.",
              "format": "byte"
            },
            "publicationChannel": {
              "type": "string",
              "description": "Whether the rate applies to a Publication Channel."
            },
            "temperatureUnit": {
              "description": "Temperature unit of the cargo.",
              "allOf": [
                {
                  "$ref": "#/definitions/TemperatureUnit"
                }
              ]
            },
            "minTemperature": {
              "type": "number",
              "description": "Minimum temperature allowed.",
              "format": "decimal"
            },
            "maxTemperature": {
              "type": "number",
              "description": "Maximum temperature allowed.",
              "format": "decimal"
            },
            "refrigerationType": {
              "description": "Indicated if the temperature of the cargo is: frozen (less then -10° C), chilled (between -10° C and 10° C) or have a custom interval.",
              "allOf": [
                {
                  "$ref": "#/definitions/RefrigerationType"
                }
              ]
            },
            "hazardClasses": {
              "type": "array",
              "description": "Dangerous Cargo Hazard Classes",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ShipmentMethodId": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "FCL",
        "LCL",
        "MTY",
        "BBB",
        "FCC"
      ],
      "enum": [
        "FCL",
        "LCL",
        "MTY",
        "BBB",
        "FCC"
      ]
    },
    "RefrigerationType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Chilled",
        "Frozen",
        "Custom"
      ],
      "enum": [
        "Chilled",
        "Frozen",
        "Custom"
      ]
    },
    "ApplicableOceanFreightRateQueryReason": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "RegularQuote",
        "InstantQuote",
        "Booking",
        "CustomerOffer"
      ],
      "enum": [
        "RegularQuote",
        "InstantQuote",
        "Booking",
        "CustomerOffer"
      ]
    },
    "AccessorialChargeCategoryDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AccessorialChargeCategoryType"
        },
        "name": {
          "$ref": "#/definitions/AccessorialChargeCategoryName"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AccessorialChargeCategoryType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CommercialStatistics",
        "SapAccountingCodes"
      ],
      "enum": [
        "CommercialStatistics",
        "SapAccountingCodes"
      ]
    },
    "AccessorialChargeCategoryName": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Freight",
        "Intermodal",
        "OtherCharges",
        "DefaultChargeCode",
        "DefaultCostCenter",
        "DefaultSapAccountNumber"
      ],
      "enum": [
        "Freight",
        "Intermodal",
        "OtherCharges",
        "DefaultChargeCode",
        "DefaultCostCenter",
        "DefaultSapAccountNumber"
      ]
    },
    "OperationResultDtoOfAccessorialChargeCategoryDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/AccessorialChargeCategoryDto"
        }
      }
    },
    "AccessorialChargeRateHierarchyNodeSummaryDto": {
      "type": "object",
      "required": [
        "id",
        "level"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean rate card.",
          "format": "int32"
        },
        "internalReference": {
          "type": "string",
          "description": "System-defined unique internal reference."
        },
        "level": {
          "type": "integer",
          "description": "Level to which this accessorial charge rate applies.",
          "format": "int32"
        },
        "conditions": {
          "description": "Specifies some conditions on accessorial charge rates like consigne,currency etc.",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
            }
          ]
        },
        "validFrom": {
          "type": "string",
          "description": "Start date of the accessorial charge rate validity period.",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "description": "End date of the accessorial charge rate validity period.",
          "format": "date-time"
        }
      }
    },
    "AccessorialChargeRateNode": {
      "type": "object",
      "required": [
        "id",
        "level"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "self": {
          "$ref": "#/definitions/AccessorialChargeRateSummaryDto"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateNode"
          }
        }
      }
    },
    "AccessorialChargeRateSummaryDto": {
      "type": "object",
      "required": [
        "id",
        "isDeleted",
        "mdmChargeId",
        "isLocal",
        "isArbitrary",
        "group",
        "level"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "internalReference": {
          "type": "string"
        },
        "isLocal": {
          "type": "boolean"
        },
        "isArbitrary": {
          "type": "boolean"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "retrievalType": {
          "$ref": "#/definitions/AccessorialChargeRetrievalType"
        },
        "lastModifiedUsername": {
          "type": "string"
        },
        "geographicalInclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalInclusionDto"
          }
        },
        "geographicalExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalExclusionDto"
          }
        },
        "containerSizeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "conditions": {
          "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
        },
        "inheritedConditions": {
          "$ref": "#/definitions/AccessorialChargeRateConditionsDto"
        },
        "effectiveAmountCalculationMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountCalculationMethodDto"
          }
        },
        "accessorialChargeRatePackage": {
          "$ref": "#/definitions/AccessorialChargeRatePackageDto"
        }
      }
    },
    "AccessorialChargeRateGeographicalPatternReferenceDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateGeographicalPatternDto"
        },
        {
          "type": "object",
          "required": [
            "accessorialChargeRateId"
          ],
          "properties": {
            "accessorialChargeRateId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AccessorialChargeRateParentsGeographicalScopeDto": {
      "type": "object",
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "geographicalInclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalInclusionDto"
          }
        },
        "geographicalExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeRateGeographicalExclusionDto"
          }
        }
      }
    },
    "OperationResultDtoOfAccessorialChargeRateDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/AccessorialChargeRateDto"
        }
      }
    },
    "CreateAccessorialChargeRateDto": {
      "allOf": [
        {
          "$ref": "#/definitions/CreateOrUpdateAccessorialChargeRateDtoBase"
        },
        {
          "type": "object",
          "required": [
            "accessorialChargeId"
          ],
          "properties": {
            "accessorialChargeId": {
              "type": "integer",
              "format": "int32"
            },
            "parentAccessorialChargeRateId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "CreateOrUpdateAccessorialChargeRateDtoBase": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeRateDtoBase"
        },
        {
          "type": "object",
          "properties": {
            "portOfLoadingIdsContainedInGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "portOfDischargeIdsContainedInGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "portOfLoadingIdsExcludedInGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "portOfDischargeIdsExcludedInGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "portOfLoadingIdsAvailableFromParentGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "portOfDischargeIdsAvailableFromParentGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "originLocationGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "destinationLocationGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "originLocationFromParentGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "destinationLocationFromParentGeographicalScope": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeographicalAreaDto"
              }
            },
            "dryPortsLocationsHierarchies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationDto"
              }
            }
          }
        }
      ]
    },
    "LocationDto": {
      "type": "object",
      "required": [
        "locationId",
        "countryId",
        "validFromDate"
      ],
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "unCode": {
          "type": "string"
        },
        "longDisplayName": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/CountryDto"
        },
        "mscRegionId": {
          "type": "integer",
          "format": "int32"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "validFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "validToDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CountryDto": {
      "allOf": [
        {
          "$ref": "#/definitions/MdmBaseClassDto"
        },
        {
          "type": "object",
          "required": [
            "countryId"
          ],
          "properties": {
            "countryId": {
              "type": "integer",
              "format": "int32"
            },
            "isoAlpha2Code": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "longDisplayName": {
              "type": "string"
            },
            "ports": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PortDto"
              }
            }
          }
        }
      ]
    },
    "PortDto": {
      "type": "object",
      "required": [
        "portId",
        "locationId"
      ],
      "properties": {
        "portId": {
          "type": "integer"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "longDisplayName": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/CountryDto"
        },
        "portVersion": {
          "$ref": "#/definitions/PortVersionDto"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "mscRegion": {
          "$ref": "#/definitions/RegionDto"
        }
      }
    },
    "PortVersionDto": {
      "type": "object",
      "required": [
        "isOpenForCommerce",
        "validFromDate",
        "isValid"
      ],
      "properties": {
        "unCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isOpenForCommerce": {
          "type": "boolean"
        },
        "validFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "validToDate": {
          "type": "string",
          "format": "date-time"
        },
        "isValid": {
          "type": "boolean"
        }
      }
    },
    "RegionDto": {
      "allOf": [
        {
          "$ref": "#/definitions/MdmBaseClassDto"
        },
        {
          "type": "object",
          "required": [
            "mscRegionId",
            "level"
          ],
          "properties": {
            "mscRegionId": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "longDisplayName": {
              "type": "string"
            },
            "parentMscRegionId": {
              "type": "integer",
              "format": "int32"
            },
            "level": {
              "type": "integer",
              "format": "int32"
            },
            "parentMscRegionName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "MdmBaseClassDto": {
      "type": "object",
      "required": [
        "deleted",
        "lastUpdateUtc"
      ],
      "properties": {
        "validFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "validToDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdateUtc": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "UpdateAccessorialChargeRateDto": {
      "allOf": [
        {
          "$ref": "#/definitions/CreateOrUpdateAccessorialChargeRateDtoBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "OperationResultDtoOfListOfUpdateArbitraryAccessorialChargeRateValidToResultDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateArbitraryAccessorialChargeRateValidToResultDto"
          }
        }
      }
    },
    "AccessorialChargeRatesValidityUpdateCommand": {
      "type": "object",
      "properties": {
        "accessorialChargeRateIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FixedAmountCalculationMethodDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AmountCalculationMethodDto"
        },
        {
          "type": "object",
          "properties": {
            "amount": {
              "type": "number",
              "format": "decimal"
            },
            "additionalAmount": {
              "type": "number",
              "format": "decimal"
            },
            "currencyId": {
              "type": "integer"
            },
            "chargeLevel": {
              "$ref": "#/definitions/ChargeLevel"
            }
          }
        }
      ]
    },
    "FreightTonsTimesAmountCalculationMethodDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AmountCalculationMethodDto"
        },
        {
          "type": "object",
          "required": [
            "isWeightSelected",
            "isVolumeSelected",
            "isHigherResultSelected"
          ],
          "properties": {
            "isWeightSelected": {
              "type": "boolean"
            },
            "weightUnit": {
              "$ref": "#/definitions/WeightUnit"
            },
            "isVolumeSelected": {
              "type": "boolean"
            },
            "volumeUnit": {
              "$ref": "#/definitions/VolumeUnit"
            },
            "isHigherResultSelected": {
              "type": "boolean"
            },
            "amount": {
              "type": "number",
              "format": "decimal"
            },
            "minAmount": {
              "type": "number",
              "format": "decimal"
            },
            "maxAmount": {
              "type": "number",
              "format": "decimal"
            },
            "chargeLevel": {
              "$ref": "#/definitions/ChargeLevel"
            },
            "currencyId": {
              "type": "integer"
            },
            "fixedAmount": {
              "type": "number",
              "format": "decimal"
            }
          }
        }
      ]
    },
    "VolumeUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CubicMeter",
        "CubicFoot"
      ],
      "enum": [
        "CubicMeter",
        "CubicFoot"
      ]
    },
    "PercentageOfAmountCalculationMethodDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AmountCalculationMethodDto"
        },
        {
          "type": "object",
          "properties": {
            "percentage": {
              "type": "number",
              "format": "decimal"
            },
            "fromAmount": {
              "type": "number",
              "format": "decimal"
            },
            "toAmount": {
              "type": "number",
              "format": "decimal"
            },
            "currencyId": {
              "type": "integer"
            },
            "otherBasis": {
              "$ref": "#/definitions/OtherBasis"
            },
            "originBaseChargeGroup": {
              "$ref": "#/definitions/AccessorialChargeBaseChargeGroup"
            },
            "freightBaseChargeGroup": {
              "$ref": "#/definitions/AccessorialChargeBaseChargeGroup"
            },
            "destinationBaseChargeGroup": {
              "$ref": "#/definitions/AccessorialChargeBaseChargeGroup"
            },
            "originBaseCharges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
              }
            },
            "freightBaseCharges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
              }
            },
            "destinationBaseCharges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
              }
            }
          }
        }
      ]
    },
    "OtherBasis": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CargoValue"
      ],
      "enum": [
        "CargoValue"
      ]
    },
    "AccessorialChargeBaseChargeGroup": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AllAsOceanCharges",
        "IntermodalCharges",
        "ContainerRentalCharges",
        "LocalCharges",
        "SpecificCharges"
      ],
      "enum": [
        "AllAsOceanCharges",
        "IntermodalCharges",
        "ContainerRentalCharges",
        "LocalCharges",
        "SpecificCharges"
      ]
    },
    "AccessorialChargeKeySummaryDto": {
      "type": "object",
      "required": [
        "id",
        "mdmChargeId",
        "isEnableForArbitrary",
        "group"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "isEnableForArbitrary": {
          "type": "boolean"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        }
      }
    },
    "NumberTimesAmountCalculationMethodDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AmountCalculationMethodDto"
        },
        {
          "type": "object",
          "required": [
            "packageTypeId"
          ],
          "properties": {
            "numberOfUnits": {
              "type": "integer",
              "format": "int32"
            },
            "perNumberOfUnitsAmount": {
              "type": "number",
              "format": "decimal"
            },
            "currencyId": {
              "type": "integer"
            },
            "packageTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AccessorialChargeDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AccessorialChargeDtoBase": {
      "type": "object",
      "required": [
        "mdmChargeId",
        "isTypeGlobal",
        "isTypeLocal",
        "isTypeForAllAgencies",
        "isDefaultForAllInclusive",
        "groups",
        "isSubjectToVat",
        "isCommissionable",
        "isCommissionableForSpecificAgencies",
        "isArbitraryCharge"
      ],
      "properties": {
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "printName": {
          "type": "string"
        },
        "isTypeGlobal": {
          "type": "boolean"
        },
        "isTypeLocal": {
          "type": "boolean"
        },
        "isTypeForAllAgencies": {
          "type": "boolean"
        },
        "isDefaultForAllInclusive": {
          "type": "boolean"
        },
        "forAllAgenciesValidityFrom": {
          "type": "string",
          "format": "date-time"
        },
        "forAllAgenciesValidityTo": {
          "type": "string",
          "format": "date-time"
        },
        "localTypeSpecificAgencyValidityPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgencyValidityPeriodDto"
          }
        },
        "chargesToApply": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeKeySummaryDto"
          }
        },
        "categoryMemberships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeCategoryMembershipDto"
          }
        },
        "amountCalculationMethodTemplate": {
          "$ref": "#/definitions/AmountCalculationMethodTemplateDto"
        },
        "groups": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "isSubjectToVat": {
          "type": "boolean"
        },
        "countryIdsSubjectToVat": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "paymentMethods": {
          "$ref": "#/definitions/PaymentMethods"
        },
        "paymentElsewhereAgencyIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "isCommissionable": {
          "type": "boolean"
        },
        "isCommissionableForSpecificAgencies": {
          "type": "boolean"
        },
        "commissionableAgencyValidityPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionableAgencyValidityPeriodDto"
          }
        },
        "calculationResult": {
          "$ref": "#/definitions/AccessorialChargeCalculationResult"
        },
        "calculationResultRangeMin": {
          "type": "number",
          "format": "decimal"
        },
        "calculationResultRangeMax": {
          "type": "number",
          "format": "decimal"
        },
        "isArbitraryCharge": {
          "type": "boolean"
        }
      }
    },
    "AgencyValidityPeriodDto": {
      "type": "object",
      "required": [
        "id",
        "agencyId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "agencyId": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccessorialChargeCategoryMembershipDto": {
      "type": "object",
      "required": [
        "id",
        "categoryId",
        "isDeleted"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "$ref": "#/definitions/AccessorialChargeCategoryDto"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "AmountCalculationMethodTemplateDto": {
      "type": "object",
      "properties": {
        "currencyId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CommissionableAgencyValidityPeriodDto": {
      "type": "object",
      "required": [
        "id",
        "agencyId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "agencyId": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccessorialChargeCalculationResult": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Positive",
        "Negative",
        "Range"
      ],
      "enum": [
        "Positive",
        "Negative",
        "Range"
      ]
    },
    "OperationResultDtoOfAccessorialChargeDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/AccessorialChargeDto"
        }
      }
    },
    "CreateAccessorialChargeDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeDtoBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "UpdateAccessorialChargeDto": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "InlandRateDto": {
      "allOf": [
        {
          "$ref": "#/definitions/FreightPricingRuleDto"
        },
        {
          "type": "object"
        }
      ]
    },
    "OperationResultDtoOfInlandRateDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/InlandRateDto"
        }
      }
    },
    "UpdateRatesStatusDto": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "status": {
          "$ref": "#/definitions/RateStatus"
        }
      }
    },
    "InlandRouteDto": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "id",
        "applicability",
        "isDeleted",
        "isCombined"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean rate card.",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "description": "Unique numerical identifier of the inland route.",
          "format": "int32"
        },
        "portIds": {
          "type": "array",
          "description": "Ids of the port pairs added for inland route.",
          "items": {
            "type": "integer"
          }
        },
        "portGroup": {
          "description": "Defines the port group of the route.",
          "allOf": [
            {
              "$ref": "#/definitions/PortGroupDto"
            }
          ]
        },
        "inlandLocationIds": {
          "type": "array",
          "description": "Ids of the locations for the specific inland route.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "locationGroup": {
          "description": "Defines the location group of the inland route.",
          "allOf": [
            {
              "$ref": "#/definitions/LocationGroupDto"
            }
          ]
        },
        "applicability": {
          "description": "Type of the inland route Applicability (0 = AtOrigin, 1 = AsFreight).",
          "allOf": [
            {
              "$ref": "#/definitions/Applicability"
            }
          ]
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Whether the inland route defined is deleted."
        },
        "isCombined": {
          "type": "boolean",
          "description": "Whether this route is combined with some other route."
        },
        "inlandRates": {
          "type": "array",
          "description": "List of rates for the defined inland route.",
          "items": {
            "$ref": "#/definitions/InlandRateDto"
          }
        },
        "validityPeriod": {
          "description": "Validity period of inland route.",
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriodDto"
            }
          ]
        }
      }
    },
    "LocationGroupDto": {
      "type": "object",
      "required": [
        "id",
        "isDeleted"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Entity Id.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Port group name"
        },
        "locations": {
          "type": "array",
          "description": "list of ports",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "isDeleted": {
          "type": "boolean",
          "description": "is logically deleted"
        }
      }
    },
    "Applicability": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AtOrigin",
        "AtDestination",
        "AsFreight"
      ],
      "enum": [
        "AtOrigin",
        "AtDestination",
        "AsFreight"
      ]
    },
    "OperationResultDtoOfInlandRouteDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/InlandRouteDto"
        }
      }
    },
    "InlandRouteWithRateParameter": {
      "type": "object",
      "properties": {
        "route": {
          "$ref": "#/definitions/InlandRouteDto"
        },
        "rate": {
          "$ref": "#/definitions/InlandRateDto"
        }
      }
    },
    "OperationResultDtoOfEquipmentSizeTypeGroupDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/EquipmentSizeTypeGroupDto"
        }
      }
    },
    "OperationResultDtoOfLocationGroupDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/LocationGroupDto"
        }
      }
    },
    "ArbitraryRateDto": {
      "type": "object",
      "required": [
        "id",
        "arbitraryRouteId",
        "oceanRateCardId",
        "equipmentIsShipperOwned",
        "equipmentIsEmpty",
        "arePublicationChannelsInherited"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean arbitrary rate.",
          "format": "int32"
        },
        "arbitraryRouteId": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean arbitrary route.",
          "format": "int32"
        },
        "oceanRateCardId": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean rate card.",
          "format": "int32"
        },
        "reference": {
          "type": "string",
          "description": "Reference of a specific ocean rate card to find."
        },
        "containerSizeTypes": {
          "type": "array",
          "description": "Types of equipment.",
          "items": {
            "$ref": "#/definitions/ContainerSpecificationDto"
          }
        },
        "equipmentSizeTypeGroup": {
          "description": "Equipment Size Type Group.",
          "allOf": [
            {
              "$ref": "#/definitions/EquipmentSizeTypeGroupDto"
            }
          ]
        },
        "equipmentIsShipperOwned": {
          "type": "boolean",
          "description": "Whether the equipment is owned by the shipper."
        },
        "equipmentIsEmpty": {
          "type": "boolean",
          "description": "Whether the equipment is empty."
        },
        "amount": {
          "type": "number",
          "description": "Amount charged for this freight.",
          "format": "decimal"
        },
        "currencyId": {
          "type": "integer",
          "description": "Identifier of the currency in which the amount is expressed.",
          "format": "int32"
        },
        "commodityHarmonizedSystemCodeIds": {
          "type": "array",
          "description": "Harmonized System Codes.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "publicationChannelIds": {
          "type": "array",
          "description": "Publication Channels",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "arePublicationChannelsInherited": {
          "type": "boolean",
          "description": "Whether the resulting arbitrary rate has inherited publication channels."
        },
        "weightUnit": {
          "description": "Weight/Mass unit for Equipment.",
          "allOf": [
            {
              "$ref": "#/definitions/WeightUnit"
            }
          ]
        },
        "minWeight": {
          "type": "number",
          "description": "Minimum weight/mass for Equipment.",
          "format": "decimal"
        },
        "maxWeight": {
          "type": "number",
          "description": "Maximum weight/mass for Equipment.",
          "format": "decimal"
        },
        "status": {
          "description": "Status.",
          "allOf": [
            {
              "$ref": "#/definitions/RateStatus"
            }
          ]
        },
        "dangerousCargoCondition": {
          "description": "Whether the rate contains any dangerous goods.",
          "allOf": [
            {
              "$ref": "#/definitions/DangerousCargoConditionDto"
            }
          ]
        },
        "vesselIds": {
          "type": "array",
          "description": "IDs of vessels to which the resulting ocean rate cards can apply.",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "OperationResultDtoOfArbitraryRateDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/ArbitraryRateDto"
        }
      }
    },
    "OperationResultDtoOfPortGroupDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/PortGroupDto"
        }
      }
    },
    "CreatePortGroupDto": {
      "allOf": [
        {
          "$ref": "#/definitions/PortGroupDtoBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "UpdatePortGroupDto": {
      "allOf": [
        {
          "$ref": "#/definitions/PortGroupDtoBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "OceanRateCardValidityType": {
      "type": "string",
      "description": "Indicate if the validity period of the search is concerning the ORC or its ocean rate",
      "x-enumNames": [
        "RateCard",
        "OceanRate"
      ],
      "enum": [
        "RateCard",
        "OceanRate"
      ]
    },
    "OceanRateCardDto": {
      "allOf": [
        {
          "$ref": "#/definitions/OceanRateCardDtoBase"
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Entity Id.\n            ",
              "format": "int32"
            },
            "tariffTier": {
              "type": "integer",
              "description": "The tariff tier from which the rates will be applicable.\n            ",
              "format": "int32"
            }
          }
        }
      ]
    },
    "OceanRateCardDtoBase": {
      "type": "object",
      "description": "Data Transfer Object for the OceanRateCard object\n            ",
      "required": [
        "referencedAccessorial",
        "isGlobalAccount",
        "isMultiTrade",
        "status",
        "relationshipReferenceType",
        "agencyRelationshipReferenceId",
        "lastChangeAuthorId",
        "lastChangeTimestamp",
        "isBookingDateBased",
        "rateGenerationGroups"
      ],
      "properties": {
        "internalReference": {
          "type": "string"
        },
        "tier1InternalReference": {
          "type": "string"
        },
        "externalReference": {
          "type": "string",
          "description": "A user-defined reference.\n            "
        },
        "type": {
          "description": "The type of the ocean rate card.\n            ",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardType"
            }
          ]
        },
        "referencedAccessorial": {
          "description": "The source for looking up accessorial rates.\n            ",
          "allOf": [
            {
              "$ref": "#/definitions/AccessorialRatesSource"
            }
          ]
        },
        "isGlobalAccount": {
          "type": "boolean"
        },
        "isMultiTrade": {
          "type": "boolean"
        },
        "status": {
          "description": "Status of the rate card.\n            ",
          "allOf": [
            {
              "$ref": "#/definitions/OceanRateCardStatus"
            }
          ]
        },
        "validityPeriods": {
          "type": "array",
          "description": "The time periods during which the rates are valid (in the sense that they are applicable).\n            ",
          "items": {
            "$ref": "#/definitions/TimePeriodDto"
          }
        },
        "customerApplicabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerApplicabilityDto"
          }
        },
        "businessEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessEntityDto"
          }
        },
        "accessorialChargeConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OceanRateCardAccessorialChargeConfigurationDto"
          }
        },
        "supportingDocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateCardSupportingDocumentDto"
          }
        },
        "relationshipReferenceType": {
          "$ref": "#/definitions/RelationshipReferenceType"
        },
        "agencyRelationshipReferenceId": {
          "type": "integer",
          "format": "int32"
        },
        "individualRelationshipReferenceDisplayName": {
          "type": "string"
        },
        "individualRelationshipReferenceEmailAddress": {
          "type": "string"
        },
        "publicationChannelIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "lastChangeAuthorId": {
          "type": "integer",
          "description": "Last updater of rate",
          "format": "int32"
        },
        "lastChangeTimestamp": {
          "type": "string",
          "description": "Date and time of last update",
          "format": "date-time"
        },
        "isBookingDateBased": {
          "type": "boolean"
        },
        "numberOfDaysUntilQuoteExpiration": {
          "type": "integer",
          "format": "byte"
        },
        "rateGenerationGroups": {
          "$ref": "#/definitions/RateGenerationGroups"
        },
        "oceanRateCardCategoryId": {
          "type": "integer",
          "description": "Unique identifier of the ocean rate card category",
          "format": "byte"
        }
      }
    },
    "AccessorialRatesSource": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Tariff",
        "Custom"
      ],
      "enum": [
        "Tariff",
        "Custom"
      ]
    },
    "CustomerApplicabilityDto": {
      "type": "object",
      "required": [
        "id",
        "isDeleted"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "customerIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerIdDto"
          }
        },
        "namedAccountBaskets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedAccountBasketDto"
          }
        },
        "validityPeriod": {
          "$ref": "#/definitions/TimePeriodDto"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "BusinessEntityDto": {
      "type": "object",
      "required": [
        "businessEntityId",
        "deleted",
        "isDeleted"
      ],
      "properties": {
        "businessEntityId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "longDisplayName": {
          "type": "string"
        },
        "businessEntityGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "businessEntityGroupName": {
          "type": "string"
        },
        "organisationStructureId": {
          "type": "integer",
          "format": "int32"
        },
        "organizationStructureDescription": {
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "address": {
          "$ref": "#/definitions/AddressDto"
        },
        "deleted": {
          "type": "integer",
          "format": "int32"
        },
        "mscCode": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "CustomerDto": {
      "type": "object",
      "required": [
        "businessEntityId"
      ],
      "properties": {
        "businessEntityId": {
          "type": "integer",
          "format": "int32"
        },
        "mscCode": {
          "type": "string"
        },
        "customerTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "customerTypeDescription": {
          "type": "string"
        },
        "customerProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "customerProfileDescription": {
          "type": "string"
        },
        "geographicalTradingStatusId": {
          "type": "integer",
          "format": "int32"
        },
        "geographicalTradingStatusDescription": {
          "type": "string"
        },
        "relationshipManagementId": {
          "type": "integer",
          "format": "int32"
        },
        "relationshipManagementDescription": {
          "type": "string"
        }
      }
    },
    "AddressDto": {
      "type": "object",
      "properties": {
        "countryId": {
          "type": "integer",
          "format": "int32"
        },
        "countryName": {
          "type": "string"
        },
        "countrySubdivisionName": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "poBox": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        }
      }
    },
    "FreightRateCardSupportingDocumentDto": {
      "type": "object",
      "required": [
        "id",
        "isDeleted"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "creator": {
          "type": "string"
        },
        "fileAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateCardFileAttachmentDto"
          }
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "FreightRateCardFileAttachmentDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "number",
          "format": "double"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "byte"
          }
        }
      }
    },
    "RelationshipReferenceType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "Agency",
        "User"
      ],
      "enum": [
        "None",
        "Agency",
        "User"
      ]
    },
    "RateGenerationGroups": {
      "type": "string",
      "description": "Indicate if the rate card is responsible for handling multiple groups of rates.\nExample: if the ShipperOwnedContainer flag is set, the rate card handles both SOC and non-SOC rates.\nExample: if the DangerousCargo flag is set, the rate card handles both HAZ and non-HAZ rates.",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "ShipperOwnedContainer",
        "DangerousCargo",
        "ShipperOwnedContainerAndDangerousCargo"
      ],
      "enum": [
        "None",
        "ShipperOwnedContainer",
        "DangerousCargo",
        "ShipperOwnedContainerAndDangerousCargo"
      ]
    },
    "GetRateCardFromSearchTextResult": {
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "internalReference": {
          "type": "string"
        },
        "externalReference": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/OceanRateCardType"
        },
        "tariffTier": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OceanRateCard": {
      "type": "object",
      "required": [
        "id",
        "internalReference",
        "type",
        "referencedAccessorial",
        "isMultiTrade",
        "isGlobalAccount",
        "status",
        "relationshipReferenceType",
        "agencyRelationshipReferenceId",
        "lastChangeAuthorId",
        "lastChangeTimestamp",
        "isBookingDateBased",
        "rateGenerationGroups"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "internalReference": {
          "type": "string",
          "maxLength": 9,
          "minLength": 0
        },
        "type": {
          "$ref": "#/definitions/OceanRateCardType"
        },
        "tier1InternalReference": {
          "type": "string"
        },
        "externalReference": {
          "type": "string",
          "maxLength": 80
        },
        "referencedAccessorial": {
          "$ref": "#/definitions/AccessorialRatesSource"
        },
        "tariffTier": {
          "type": "integer",
          "format": "int32"
        },
        "isMultiTrade": {
          "type": "boolean"
        },
        "isGlobalAccount": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/OceanRateCardStatus"
        },
        "validityPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OceanRateCardValidityPeriod"
          }
        },
        "customerApplicabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerApplicability"
          }
        },
        "supportingDocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateCardSupportingDocument"
          }
        },
        "accessorialChargeConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OceanRateCardAccessorialChargeConfiguration"
          }
        },
        "relationshipReferenceType": {
          "$ref": "#/definitions/RelationshipReferenceType"
        },
        "agencyRelationshipReferenceId": {
          "type": "integer",
          "format": "int32"
        },
        "individualRelationshipReferenceDisplayName": {
          "type": "string"
        },
        "individualRelationshipReferenceEmailAddress": {
          "type": "string"
        },
        "publicationChannelIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OceanRateCardPublicationChannel"
          }
        },
        "lastChangeAuthorId": {
          "type": "integer",
          "format": "int32"
        },
        "lastChangeTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "isBookingDateBased": {
          "type": "boolean"
        },
        "numberOfDaysUntilQuoteExpiration": {
          "type": "integer",
          "format": "byte"
        },
        "rateGenerationGroups": {
          "$ref": "#/definitions/RateGenerationGroups"
        },
        "oceanRateCardCategoryId": {
          "type": "integer",
          "format": "byte"
        }
      }
    },
    "OceanRateCardValidityPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidityPeriod"
        },
        {
          "type": "object",
          "required": [
            "id",
            "oceanRateCardId"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "oceanRateCardId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "ValidityPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/DateInterval"
        },
        {
          "type": "object"
        }
      ]
    },
    "DateInterval": {
      "allOf": [
        {
          "$ref": "#/definitions/TimeInterval"
        },
        {
          "type": "object"
        }
      ]
    },
    "TimeInterval": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CustomerApplicability": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "id",
        "isDeleted"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "validityPeriod": {
          "$ref": "#/definitions/ValidityPeriod"
        },
        "customerIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerApplicabilityCustomer"
          }
        },
        "namedAccountBaskets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerApplicabilityNamedAccountBasket"
          }
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "CustomerApplicabilityCustomer": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "customerApplicabilityId",
        "isGroup",
        "customerId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "customerApplicabilityId": {
          "type": "integer",
          "format": "int32"
        },
        "isGroup": {
          "type": "boolean"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CustomerApplicabilityNamedAccountBasket": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "customerApplicabilityId",
        "namedAccountBasketId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "customerApplicabilityId": {
          "type": "integer",
          "format": "int32"
        },
        "namedAccountBasket": {
          "$ref": "#/definitions/NamedAccountBasket"
        },
        "namedAccountBasketId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NamedAccountBasket": {
      "type": "object",
      "required": [
        "id",
        "namedAccountCardId",
        "updatedOn",
        "updatedBy",
        "internalReference",
        "isDeleted"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "namedAccountCardId": {
          "type": "integer",
          "format": "int32"
        },
        "namedAccountCard": {
          "$ref": "#/definitions/NamedAccountCard"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "internalReference": {
          "type": "integer"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "namedAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedAccount"
          }
        }
      }
    },
    "NamedAccountCard": {
      "type": "object",
      "required": [
        "id",
        "isDeleted",
        "lastUpdatedOn",
        "lastUpdatedBy"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "internalReference": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "integer",
          "format": "int32"
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedAccountCardCustomer"
          }
        }
      }
    },
    "NamedAccountCardCustomer": {
      "type": "object",
      "required": [
        "namedAccountCardId",
        "isGroup",
        "customerId"
      ],
      "properties": {
        "namedAccountCardId": {
          "type": "integer",
          "format": "int32"
        },
        "isGroup": {
          "type": "boolean"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NamedAccount": {
      "type": "object",
      "required": [
        "id",
        "namedAccountBasketId",
        "validFrom",
        "isGroup",
        "customerId",
        "updatedOn",
        "isDeleted",
        "requestedBy",
        "requestedOn",
        "lastChangeAuthorId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "namedAccountBasketId": {
          "type": "integer",
          "format": "int32"
        },
        "namedAccountBasket": {
          "$ref": "#/definitions/NamedAccountBasket"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "isGroup": {
          "type": "boolean"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "requestedBy": {
          "type": "integer",
          "format": "int32"
        },
        "requestedOn": {
          "type": "string",
          "format": "date-time"
        },
        "lastChangeAuthorId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FreightRateCardSupportingDocument": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "id",
        "comment",
        "creationDate",
        "isDeleted"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "creator": {
          "type": "string",
          "maxLength": 100
        },
        "fileAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreightRateCardFileAttachment"
          }
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "FreightRateCardFileAttachment": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "freightRateCardSupportingDocumentId",
        "id",
        "name",
        "size"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "freightRateCardSupportingDocumentId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "maxLength": 260,
          "minLength": 1
        },
        "size": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "OceanRateCardAccessorialChargeConfiguration": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "accessorialChargeId",
        "applicability",
        "applicabilityToFreightAmount",
        "group",
        "isInvoicedAsAllIn",
        "isWaived",
        "isLocal",
        "isArbitrary",
        "paymentMethods"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "applicability": {
          "$ref": "#/definitions/AccessorialChargeRateApplicability"
        },
        "applicabilityToFreightAmount": {
          "$ref": "#/definitions/AccessorialChargeApplicabilityToOceanFreightRateAmount"
        },
        "group": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "isInvoicedAsAllIn": {
          "type": "boolean"
        },
        "isWaived": {
          "type": "boolean"
        },
        "isLocal": {
          "type": "boolean"
        },
        "isArbitrary": {
          "type": "boolean"
        },
        "paymentMethods": {
          "$ref": "#/definitions/PaymentMethods"
        },
        "accessorialCharge": {
          "$ref": "#/definitions/AccessorialCharge"
        }
      }
    },
    "AccessorialCharge": {
      "type": "object",
      "required": [
        "id",
        "mdmChargeId",
        "isTypeGlobal",
        "isTypeLocal",
        "isTypeForAllAgencies",
        "isDefaultForAllInclusive",
        "amountCalculationMethodTemplate",
        "groups",
        "isSubjectToVat",
        "isCommissionable",
        "isCommissionableForSpecificAgencies",
        "isArbitraryCharge"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "mdmChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "printName": {
          "type": "string",
          "maxLength": 50
        },
        "isTypeGlobal": {
          "type": "boolean"
        },
        "isTypeLocal": {
          "type": "boolean"
        },
        "isTypeForAllAgencies": {
          "type": "boolean"
        },
        "forAllAgenciesValidityFrom": {
          "type": "string",
          "format": "date-time"
        },
        "forAllAgenciesValidityTo": {
          "type": "string",
          "format": "date-time"
        },
        "isDefaultForAllInclusive": {
          "type": "boolean"
        },
        "localTypeSpecificAgencyValidityPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeTypeAgencyValidityPeriod"
          }
        },
        "otherChargesToApply": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeAccessorialChargeToApply"
          }
        },
        "categoryMemberships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeCategoryMembership"
          }
        },
        "amountCalculationMethodTemplate": {
          "$ref": "#/definitions/AmountCalculationMethodTemplate"
        },
        "groups": {
          "$ref": "#/definitions/AccessorialChargeGroups"
        },
        "isSubjectToVat": {
          "type": "boolean"
        },
        "countriesSubjectToVat": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeCountrySubjectToVat"
          }
        },
        "paymentMethods": {
          "$ref": "#/definitions/PaymentMethods"
        },
        "paymentElsewhereAgencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargePaymentElsewhereAgency"
          }
        },
        "isCommissionable": {
          "type": "boolean"
        },
        "isCommissionableForSpecificAgencies": {
          "type": "boolean"
        },
        "commissionableAgencyValidityPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessorialChargeCommissionableAgencyValidityPeriod"
          }
        },
        "calculationResult": {
          "$ref": "#/definitions/AccessorialChargeCalculationResult"
        },
        "calculationResultRangeMin": {
          "type": "number",
          "format": "decimal"
        },
        "calculationResultRangeMax": {
          "type": "number",
          "format": "decimal"
        },
        "isArbitraryCharge": {
          "type": "boolean"
        }
      }
    },
    "AccessorialChargeTypeAgencyValidityPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeAgencyValidityPeriod"
        },
        {
          "type": "object"
        }
      ]
    },
    "AccessorialChargeAgencyValidityPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidityPeriod"
        },
        {
          "type": "object",
          "required": [
            "id",
            "accessorialChargeId",
            "agencyId"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "accessorialChargeId": {
              "type": "integer",
              "format": "int32"
            },
            "agencyId": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AccessorialChargeAccessorialChargeToApply": {
      "type": "object",
      "required": [
        "accessorialChargeId",
        "otherChargeToApplyId"
      ],
      "properties": {
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "otherChargeToApplyId": {
          "type": "integer",
          "format": "int32"
        },
        "otherChargeToApply": {
          "$ref": "#/definitions/AccessorialCharge"
        }
      }
    },
    "AccessorialChargeCategoryMembership": {
      "type": "object",
      "required": [
        "accessorialChargeId",
        "id",
        "categoryId",
        "isDeleted"
      ],
      "properties": {
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "$ref": "#/definitions/AccessorialChargeCategory"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "AccessorialChargeCategory": {
      "type": "object",
      "required": [
        "id",
        "type",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AccessorialChargeCategoryType"
        },
        "name": {
          "$ref": "#/definitions/AccessorialChargeCategoryName"
        },
        "value": {
          "type": "string",
          "maxLength": 100
        }
      }
    },
    "AmountCalculationMethodTemplate": {
      "type": "object",
      "x-abstract": true,
      "required": [
        "accessorialChargeId"
      ],
      "properties": {
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccessorialChargeCountrySubjectToVat": {
      "type": "object",
      "required": [
        "accessorialChargeId",
        "countryId"
      ],
      "properties": {
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "countryId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccessorialChargePaymentElsewhereAgency": {
      "type": "object",
      "required": [
        "accessorialChargeId",
        "mscEntityId"
      ],
      "properties": {
        "accessorialChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "mscEntityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccessorialChargeCommissionableAgencyValidityPeriod": {
      "allOf": [
        {
          "$ref": "#/definitions/AccessorialChargeAgencyValidityPeriod"
        },
        {
          "type": "object"
        }
      ]
    },
    "OceanRateCardPublicationChannel": {
      "type": "object",
      "required": [
        "oceanRateCardId",
        "publicationChannelId"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "format": "int32"
        },
        "publicationChannelId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OperationResultDtoOfOceanRateCardDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/OceanRateCardDto"
        }
      }
    },
    "CreateOrUpdateOceanRateCardDto": {
      "allOf": [
        {
          "$ref": "#/definitions/OceanRateCardDtoBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "CreateNewTariffOceanRateCardDto": {
      "type": "object",
      "properties": {
        "tier1InternalReference": {
          "type": "string"
        },
        "oceanRateCardToCreate": {
          "$ref": "#/definitions/CreateOrUpdateOceanRateCardDto"
        }
      }
    },
    "CreateTariffChildOceanRateCardDto": {
      "type": "object",
      "required": [
        "parentId"
      ],
      "properties": {
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "oceanRateCardToCreate": {
          "$ref": "#/definitions/CreateOrUpdateOceanRateCardDto"
        }
      }
    },
    "CreateTariffParentOceanRateCardDto": {
      "type": "object",
      "required": [
        "childId"
      ],
      "properties": {
        "childId": {
          "type": "integer",
          "format": "int32"
        },
        "oceanRateCardToCreate": {
          "$ref": "#/definitions/CreateOrUpdateOceanRateCardDto"
        }
      }
    },
    "RateCardPublicationCheckResultDto": {
      "type": "object",
      "properties": {
        "oceanResultIds": {
          "$ref": "#/definitions/RateCardPublicationCheckResultIdsDto"
        },
        "inlandResultIds": {
          "$ref": "#/definitions/RateCardPublicationCheckResultIdsDto"
        },
        "arbitraryResultIds": {
          "$ref": "#/definitions/RateCardPublicationCheckResultIdsDto"
        }
      }
    },
    "RateCardPublicationCheckResultIdsDto": {
      "type": "object",
      "properties": {
        "ruleIdsValidForPublication": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ruleIdsInvalidForPublication": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ArbitraryRouteDto": {
      "type": "object",
      "description": "Data Transfer Object for the Arbitrary Route object.",
      "required": [
        "oceanRateCardId",
        "id",
        "applicability",
        "isDeleted",
        "isCombined"
      ],
      "properties": {
        "oceanRateCardId": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean rate card.",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "description": "Unique numerical identifier of the ocean arbitrary route.",
          "format": "int32"
        },
        "transshipmentPortIds": {
          "type": "array",
          "description": "Transshipment port ids.",
          "items": {
            "type": "integer"
          }
        },
        "arbitraryPortIds": {
          "type": "array",
          "description": "Arbitary port ids.",
          "items": {
            "type": "integer"
          }
        },
        "arbitraryPortGroup": {
          "description": "Arbitrary port group.",
          "allOf": [
            {
              "$ref": "#/definitions/PortGroupDto"
            }
          ]
        },
        "transshipmentPortGroup": {
          "description": "Transshipment  port group.",
          "allOf": [
            {
              "$ref": "#/definitions/PortGroupDto"
            }
          ]
        },
        "applicability": {
          "description": "Type of the arbitrary route Applicability (0 = AtOrigin, 1 = AsFreight).",
          "allOf": [
            {
              "$ref": "#/definitions/Applicability"
            }
          ]
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Whether the arbitrary route defined is deleted."
        },
        "isCombined": {
          "type": "boolean",
          "description": "Whether this route is combined with some other route."
        },
        "arbitraryRates": {
          "type": "array",
          "description": "List of rates for the defined arbitrary route.",
          "items": {
            "$ref": "#/definitions/ArbitraryRateDto"
          }
        },
        "validityPeriod": {
          "description": "Validity period of arbitrary route.",
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriodDto"
            }
          ]
        }
      }
    },
    "OperationResultDtoOfArbitraryRouteDto": {
      "type": "object",
      "properties": {
        "validationIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationIssueDto"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/ArbitraryRouteDto"
        }
      }
    },
    "ArbitraryRouteWithRateParameter": {
      "type": "object",
      "properties": {
        "route": {
          "$ref": "#/definitions/ArbitraryRouteDto"
        },
        "rate": {
          "$ref": "#/definitions/ArbitraryRateDto"
        }
      }
    }
  }
}
